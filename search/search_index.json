{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to DevopsPilot","text":"DevOps Explained <p>A set of practices that automates the processes between software development and IT teams, in order to build, test, and release software faster and more reliably.</p> Understanding the Cloud <p>A network of remote servers hosted on the Internet to store, manage, and process data, rather than a local server or a personal computer.</p> Why DevOps and Cloud? <p>The synergy of DevOps and Cloud enables organizations to achieve agility, scalability, efficiency, and faster innovation cycles.</p>"},{"location":"#what-is-devops","title":"What is DevOps?","text":"<p>DevOps represents a culture and a set of practices that aims to break down silos between development (Dev) and operations (Ops) teams. By fostering collaboration, automation, and continuous feedback, DevOps enables organizations to:</p> <ul> <li>Increase deployment frequency: Automating release pipelines allows for more frequent and less risky deployments.</li> <li>Achieve faster time to market: Streamlined processes reduce the time it takes to get new features and products to users.</li> <li>Improve reliability: Automation and monitoring help identify and resolve issues quickly, leading to more stable systems.</li> <li>Enhance scalability: Cloud infrastructure, combined with DevOps practices, allows for easier scaling of applications and services.</li> <li>Foster better collaboration: Shared responsibility and communication lead to more effective teamwork.</li> </ul>"},{"location":"#understanding-the-cloud","title":"Understanding the Cloud","text":"<p>Cloud computing provides on-demand access to computing resources\u2014including servers, storage, databases, networking, software, analytics, and intelligence\u2014over the Internet (\"the cloud\"). Key characteristics of cloud computing include:</p> <ul> <li>On-demand self-service: Users can provision resources as needed without human interaction with a service provider.</li> <li>Broad network access: Cloud services are accessible over a wide range of devices through standard network mechanisms.</li> <li>Resource pooling: Providers pool their resources to serve multiple consumers, with resources dynamically assigned and reassigned according to demand.</li> <li>Rapid elasticity: Resources can be rapidly and elastically provisioned and released, in some cases automatically, to scale out and in commensurate with demand.</li> <li>Measured service: Cloud systems automatically control and optimize resource use by leveraging a metering capability at some level of abstraction appropriate to the type of service (e.g., storage, processing, bandwidth, and active user accounts).</li> </ul>"},{"location":"#the-power-of-integration","title":"The Power of Integration","text":"<p>The true power comes from integrating DevOps practices with cloud technologies. Cloud provides the infrastructure and services needed to implement DevOps automation and scalability, while DevOps provides the methodologies to effectively manage and deploy applications in the cloud environment.</p> <p>This synergy allows teams to build, deploy, and operate applications with unprecedented speed, reliability, and efficiency.</p>"},{"location":"#roadmap","title":"RoadMap","text":""},{"location":"#kickstart-your-devops-journey","title":"Kickstart your DevOps Journey","text":""},{"location":"#devops-prerequisite-course","title":"Devops Prerequisite course:","text":"<ul> <li>Devops prerequisite course video This course has a hands on lab also register for it and do the hands on for free.</li> </ul>"},{"location":"#windows-vs-linux","title":"Windows vs Linux","text":"<ul> <li>Windows vs Linux basics</li> </ul>"},{"location":"#linux-basics","title":"Linux basics","text":"<ul> <li>Linux folder structure</li> <li>Linux commands part-1</li> <li>Relative path and Absolute path</li> <li>Linux commands part-2</li> <li>Linux commands part-3</li> <li>Linux commands part-4</li> <li>Linux commands part-5</li> <li>Linux commands part-6</li> <li>Linux commands part-7</li> <li>Linux commands part-8</li> <li>Linux commands part-9</li> <li>On Premise vs Cloud</li> <li>Linux - ssh</li> <li>How to install virtualbox and create ubuntu virtual machine</li> </ul>"},{"location":"#shell-script","title":"Shell script","text":"<ol> <li>Basics and if condition</li> <li>For loop</li> <li>While loop</li> <li>Function</li> <li>Shell script examples</li> </ol>"},{"location":"#git","title":"Git","text":"<ul> <li>Learn Git</li> </ul>"},{"location":"#3-tier-architecture","title":"3-Tier Architecture","text":"<ul> <li>Understanding 3-Tier Architecture</li> </ul>"},{"location":"#web-servers","title":"Web servers","text":"<p><code>Nginx/httpd</code> Majorly used for deploying frontend application developed using HTML,CSS,Javascript, AngularJs and ReactJS * How to install Nginx webserver</p> <p><code>Tomcat</code> Majorly used for deploying Java based application * How to install Tomcat * How to manually deploy the java application to Tomcat 9 webserver * How to deploy the java application to Tomcat 9 webserver using maven</p>"},{"location":"#build-tools","title":"Build Tools","text":"<p><code>Maven/Gradle</code> : For Java programming language (Backend application) * How to install Maven * About Maven * How to generate a sample java application using Maven * Building Java Projects with Maven</p> <p><code>Npm</code> : Build / Package Manager for AngularJs, NodeJs, ReactJs (Frontend application)</p> <p><code>Pip</code> : Package manager for Python</p>"},{"location":"#docker","title":"Docker","text":"<ul> <li>Docker training video </li> <li>Docker Tutorials</li> </ul>"},{"location":"#jenkins","title":"Jenkins","text":"<ul> <li>Jenkins Tutorials</li> <li>Jenkins advanced tutorials in youtube by CloudBeesTv channel</li> </ul>"},{"location":"#kubernetes","title":"Kubernetes","text":"<ul> <li>Kubernetes Concept</li> <li>Kubernetes Architecture</li> <li>Pod,ReplicaSet,Deployment</li> <li>Horizontal Pod Autoscaler</li> <li>Namespace</li> <li>Service</li> <li>Configmap</li> <li>Secret</li> <li>Taints &amp; Tolerations</li> </ul>"},{"location":"#reference-youtube-channels-for-learning-kubernetes","title":"Reference Youtube channels for learning kubernetes","text":"<ul> <li>Justmeandopensource youtube channel Kubernetes</li> </ul>"},{"location":"#kubernetes-free-lab-environment","title":"Kubernetes free lab environment","text":"<ul> <li>IBM kubernetes Lab - 4 hours</li> <li>Katacoda kubernetes Lab</li> <li>Play with kubernetes</li> </ul>"},{"location":"#kubernetes-paid-course","title":"Kubernetes Paid course","text":"<ul> <li>Certified Kubernetes Application Developer (CKAD) course in Udemy by Mumshad Mannambeth</li> <li>Certified Kubernetes Administrator (CKA) course in Udemy by Mumshad Mannambeth</li> <li>Certified Kubernetes Security Specialist (CKS) course in Kodekloud by Mumshad Mannambeth</li> </ul>"},{"location":"#realtime-examples-and-kubernetes-additional-tools","title":"Realtime examples and kubernetes additional tools","text":"<ul> <li>Kubernetes Realtime examples Tutorials</li> </ul>"},{"location":"#helm-chart","title":"Helm Chart","text":"<ul> <li>Helm chart tutorials in youtube by Richard Chesterwood</li> </ul>"},{"location":"#monitoring","title":"Monitoring","text":""},{"location":"#logging","title":"Logging","text":""},{"location":"#cloud-certification-aws-azure-gcp","title":"Cloud certification (AWS, AZURE, GCP)","text":"<p>Preferably you can start with AWS Solution Architect Associate</p>"},{"location":"#aws-paid-course","title":"AWS Paid course","text":"<ul> <li>AWS Certified Solution Architect Associate course in Udemy</li> <li>AWS Certified Solutions Architect Associate Practice Exams</li> </ul>"},{"location":"#aws-free-course","title":"AWS free course","text":"<ul> <li>AWS Certified Cloud Practitioner Training 2020 - Full Course</li> <li>AWS Basics for Beginners full Course by Neil Davis</li> <li>Free course for AWS certifications</li> </ul>"},{"location":"#azure-free-course","title":"Azure free course","text":"<ul> <li>Microsoft Azure Fundamentals Certification Course (AZ-900)</li> </ul>"},{"location":"#ssltls","title":"SSL/TLS","text":"<p>How to configure SSL/TLS certificates for websites (How to make a website as secure - https) * SSL/TLS Tutorials</p>"},{"location":"#terraform","title":"Terraform","text":""},{"location":"#terraform-free-course","title":"Terraform free course","text":"<ul> <li>Terraform free course in youtube by kodekloud</li> <li>Terraform free course in youtube by Sandip Das</li> </ul>"},{"location":"#aws-devops","title":"AWS DevOps","text":"<ul> <li>AWS DevOps Free course in youtube by Sandip Das</li> </ul>"},{"location":"#devops-playground-by-katakoda","title":"Devops Playground by Katakoda","text":"<ul> <li>Learn and do handson on lots of devops tools for free</li> </ul>"},{"location":"#devops-bootcamp-by-techworld-with-nana","title":"Devops Bootcamp by Techworld with nana","text":"<p>Devops Bootcamp course</p>"},{"location":"#backend-development-using-python","title":"Backend development using Python","text":"<ul> <li>Python and REST APIs: Interacting With Web Services</li> <li>Python REST APIs With Flask, Connexion, and SQLAlchemy \u2013 Part 1</li> <li>Python REST APIs With Flask, Connexion, and SQLAlchemy \u2013 Part 2</li> <li>Python REST APIs With Flask, Connexion, and SQLAlchemy \u2013 Part 3</li> </ul>"},{"location":"3-tier/3-tier/","title":"Understanding the 3-Tier Architecture","text":"<p>The diagram above illustrates a common and robust software architecture known as the 3-Tier Architecture. This model separates an application into three logical and physical computing tiers: the presentation tier (frontend), the application tier (backend), and the data tier (database). This separation enhances maintainability, scalability, and security.</p> <p>Let's break down each tier:</p>"},{"location":"3-tier/3-tier/#1-frontend-presentation-tier","title":"1. Frontend (Presentation Tier)","text":"<p>This is what the user directly interacts with. It's responsible for presenting information to the user and handling user input.</p> <ul> <li> <p>Languages:</p> <ul> <li>HTML (HyperText Markup Language): Provides the structure and content of web pages.</li> <li>CSS (Cascading Style Sheets): Controls the visual presentation and styling of HTML elements (colors, fonts, layout, etc.).</li> <li>JavaScript: Adds interactivity, dynamic behavior, and client-side logic to web pages. It can make requests to the backend.</li> </ul> </li> <li> <p>Web Server:</p> <ul> <li>Nginx / Apache (httpd): These are traditional web servers that primarily serve static content (HTML, CSS, JavaScript files, images) directly to the user's browser. They can also act as reverse proxies, forwarding dynamic requests to the backend server.</li> </ul> </li> </ul>"},{"location":"3-tier/3-tier/#2-backend-application-tier","title":"2. Backend (Application Tier)","text":"<p>The backend is the \"brain\" of the application. It handles the core business logic, processes user requests, and interacts with the database. It doesn't directly serve content to the user's browser but rather responds to requests from the frontend, often in data formats like JSON or XML.</p> <ul> <li> <p>Languages:</p> <ul> <li>Python: Popular for its versatility, vast libraries (Django, Flask, FastAPI), and suitability for various applications, including web development, data science, and AI.</li> <li>Java: A robust, platform-independent language widely used for large-scale enterprise applications, Android development, and microservices (Spring Boot).</li> <li>PHP: A widely used server-side scripting language primarily designed for web development (Laravel, Symfony, WordPress).</li> </ul> </li> <li> <p>Web Server / Application Server:</p> <ul> <li>Tomcat: A widely used open-source servlet container for serving Java-based web applications (Servlets, JSPs). Often embedded in Spring Boot applications.</li> <li>Jetty: A lightweight, embeddable web server and servlet container for Java, popular in microservices and smaller deployments.</li> <li>WildFly: A robust, open-source Jakarta EE (formerly Java EE) application server providing a full suite of enterprise features for Java applications.</li> </ul> <p>Note: For Python backends, dedicated WSGI (e.g., Gunicorn, uWSGI) or ASGI (e.g., Uvicorn) servers are typically used to run the Python application, often behind a reverse proxy like Nginx. The diagram lists Java-specific servers, but the concept is the same for other backend languages where an application server runs the code.</p> </li> </ul>"},{"location":"3-tier/3-tier/#3-database-data-tier","title":"3. Database (Data Tier)","text":"<p>The database tier is responsible for storing, managing, and retrieving all the application's data. It ensures data persistence, integrity, and efficient access.</p> <ul> <li>Databases:<ul> <li>MySQL: A very popular open-source relational database management system (RDBMS), widely used for web applications.</li> <li>PostgreSQL: A powerful, open-source object-relational database system known for its robustness, advanced features, and extensibility.</li> <li>MariaDB: A community-developed, commercially supported fork of MySQL, offering similar features and performance.</li> </ul> </li> </ul>"},{"location":"3-tier/3-tier/#why-use-a-3-tier-architecture","title":"Why Use a 3-Tier Architecture?","text":"<ul> <li>Scalability: Each tier can be scaled independently. If your database becomes a bottleneck, you can scale just the database tier without affecting the frontend or backend.</li> <li>Maintainability: Changes in one tier (e.g., updating the UI in the frontend) often have minimal impact on other tiers, simplifying development and maintenance.</li> <li>Security: By separating concerns, you can implement different security measures for each tier. For instance, the database can be isolated from direct public access.</li> <li>Flexibility: Different technologies can be used for each tier, allowing developers to choose the best tools for specific tasks.</li> <li>Team Collaboration: Different teams can work on different tiers simultaneously with clear interfaces between them.</li> </ul> <p>This architecture provides a solid foundation for building scalable, maintainable, and secure web applications.</p>"},{"location":"build-tools/maven/generate-a-sample-java-application-using-maven/","title":"Generate a sample java application using maven","text":"<p>Maven has a build in command to generate a sample java application.</p> <p>Run the following command to generate the sample java application</p> <pre><code>mvn archetype:generate -DgroupId=com.mycompany.app -DartifactId=my-app -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4 -DinteractiveMode=false\n</code></pre> <p></p> <p>After executing the above command it will generate some java files in my-app folder</p> <p>Go into my-app folder and see the folder structure and files using <code>tree</code> command.</p> <p>While executing the tree command if you get error like <code>tree command not found</code>, you can install the tree tool by executing the below command.</p> <pre><code>sudo apt install tree -y\n</code></pre> <p></p> <p>It has generated one pom.xml file and some java files in <code>src folder</code>. Inside <code>src</code> folder it has two important folders <code>main</code> and <code>test</code>.</p> <p>The actual functionality java files are kept in <code>main</code> folder</p> <p>The unit test case for the functionality are kept in <code>test</code> folder.</p> <p>The <code>pom.xml</code> file is the important file used by the maven during build time. If we execute any maven commands it will check for pom.xml in the current folder.</p> <p>The pom.xml file is the core of a project's configuration in Maven. It is a single configuration file that contains the majority of information required to build a project in just the way you want.</p> <p>In the <code>pom.xml</code> file developers will define the necessary <code>dependencies</code> and <code>plugins</code> which has to be downloaded from maven remote repository. And the final artifact name, version and packaging type.</p> <p></p> <p>To build, test and package the java application, run the below command.</p> <pre><code>mvn package\n</code></pre> <p></p> <p>After executing the <code>mvn package</code> command it will download the defined dependencies from maven remote repository, then compile the code, test the code and package the compiled code to <code>jar</code> package type.</p> <p>It will generate the jar package in target folder.</p> <p>Go to <code>target</code> folder and we can see our artifact <code>my-app-1.0-SNAPSHOT.jar</code></p> <pre><code>cd target\n</code></pre> <p>Now we can run the below command to execute the <code>my-app-1.0-SNAPSHOT.jar</code> to see the output of java application.</p> <pre><code>java -cp my-app-1.0-SNAPSHOT.jar com.mycompany.app.App\n</code></pre> <p>It prints <code>Hello World!</code></p> <p></p>"},{"location":"build-tools/maven/generate-a-sample-java-application-using-maven/#reference","title":"Reference","text":"<ul> <li>Official Documentation</li> </ul>"},{"location":"build-tools/maven/how-to-create-a-github-repository-and-push-a-sample-java-maven-project/","title":"How to create a GitHub repository and push a Hello World Java 21 Maven Project","text":"<p>Creating a GitHub repository and pushing a \"Hello World\" Java 21 Maven project involves a series of steps that combine version control with modern Java development practices.</p> <p>This guide will walk you through setting up a new repository on GitHub, creating a basic Java 21 project using Maven, and pushing your code to the remote repository.</p> <p>By the end of this tutorial, you'll have a foundational understanding of how to manage and share your Java projects using Git and GitHub.</p> <p>Goto https://github.com -&gt; Click on + Icon -&gt; Click on New repository</p> <p></p> <p>Enter repository name hello-world-java, Description as Hello World Java Maven project</p> <p>Choose Public</p> <p></p> <p>Check Add a README file -&gt; Click on Create repository</p> <p></p> <p>Repository created</p> <p></p> <p>Clone the repository</p> <p></p> <pre><code>git clone https://github.com/devopspilot1/hello-world-java.git\n</code></pre> <pre><code>vignesh ~/code/devopspilot1  $ git clone https://github.com/devopspilot1/hello-world-java.git\nCloning into 'hello-world-java'...\nremote: Enumerating objects: 3, done.\nremote: Counting objects: 100% (3/3), done.\nremote: Compressing objects: 100% (2/2), done.\nremote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0\nReceiving objects: 100% (3/3), done.\n</code></pre> <p>Go inside the cloned folder hello-world-java and see the files</p> <pre><code>ll\ncd hello-world-java \nll\n</code></pre> <pre><code>vignesh ~/code/devopspilot1  $ ll\ntotal 0\ndrwxr-xr-x  4 vignesh  staff  128 Jul 12 22:39 hello-world-java\n</code></pre> <pre><code>vignesh ~/code/devopspilot1  $ cd hello-world-java \n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ ll\ntotal 8\n-rw-r--r-- 1 vignesh  staff  50 Jul 12 22:39 README.md\n</code></pre> <p>Let's download the Java 21 Maven project code</p> <p>Goto Github repository https://github.com/vigneshsweekaran/hello-world</p> <p>Click on Releases</p> <p></p> <p>Under Java 21 Maven Project -&gt; Download the zip file Source code</p> <p></p> <p>In Linux download Source code zip files using the wget command</p> <pre><code>wget https://github.com/vigneshsweekaran/hello-world/archive/refs/tags/clean-maven-java-21.zip\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ wget https://github.com/vigneshsweekaran/hello-world/archive/refs/tags/clean-maven-java-21.zip\n--2024-07-12 23:31:25-- https://github.com/vigneshsweekaran/hello-world/archive/refs/tags/clean-maven-java-21.zip\nResolving github.com (github.com)... 20.205.243.166\nConnecting to github.com (github.com)|20.205.243.166|:443... connected.\nHTTP request sent, awaiting response... 302 Found\nLocation: https://codeload.github.com/vigneshsweekaran/hello-world/zip/refs/tags/clean-maven-java-21 [following]\n--2024-07-12 23:31:25-- https://codeload.github.com/vigneshsweekaran/hello-world/zip/refs/tags/clean-maven-java-21\nResolving codeload.github.com (codeload.github.com)... 20.205.243.165\nConnecting to codeload.github.com (codeload.github.com)|20.205.243.165|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: unspecified [application/zip]\nSaving to: \u2018clean-maven-java-21.zip\u2019\n\nclean-maven-java-21.zip               [ &lt;=&gt;                                                          ]   7.35K  --.-KB/s    in 0.001s  \n\n2024-07-12 23:31:26 (7.45 MB/s) - \u2018clean-maven-java-21.zip\u2019 saved [7522]\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ ll\ntotal 24\n-rw-r--r-- 1 vignesh  staff    50 Jul 12 22:39 README.md\n-rw-r--r-- 1 vignesh  staff  7522 Jul 12 23:31 clean-maven-java-21.zip\n</code></pre> <p>Unzip the downloaded file clean-maven-java-21.zip</p> <p>In Linux, unzip the file using the unzip command</p> <pre><code>unzip clean-maven-java-21.zip\nll\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ unzip clean-maven-java-21.zip \nArchive:  clean-maven-java-21.zip\nb9be983bceb75d768ef80ba51e756a0781059015\n   creating: hello-world-clean-maven-java-21/\n  inflating: hello-world-clean-maven-java-21/.gitignore  \n  inflating: hello-world-clean-maven-java-21/README.md  \n  inflating: hello-world-clean-maven-java-21/pom.xml  \n   creating: hello-world-clean-maven-java-21/src/\n   creating: hello-world-clean-maven-java-21/src/main/\n   creating: hello-world-clean-maven-java-21/src/main/java/\n   creating: hello-world-clean-maven-java-21/src/main/java/com/\n   creating: hello-world-clean-maven-java-21/src/main/java/com/example/\n  inflating: hello-world-clean-maven-java-21/src/main/java/com/example/HelloWorld.java  \n  inflating: hello-world-clean-maven-java-21/src/main/java/com/example/MyCalculator.java  \n  inflating: hello-world-clean-maven-java-21/src/main/java/com/example/MyCalculatorUsingMath.java  \n   creating: hello-world-clean-maven-java-21/src/main/webapp/\n   creating: hello-world-clean-maven-java-21/src/main/webapp/WEB-INF/\n  inflating: hello-world-clean-maven-java-21/src/main/webapp/WEB-INF/web.xml  \n  inflating: hello-world-clean-maven-java-21/src/main/webapp/index.html  \n  inflating: hello-world-clean-maven-java-21/src/main/webapp/index.jsp  \n  inflating: hello-world-clean-maven-java-21/src/main/webapp/style.css  \n   creating: hello-world-clean-maven-java-21/src/test/\n   creating: hello-world-clean-maven-java-21/src/test/java/\n   creating: hello-world-clean-maven-java-21/src/test/java/com/\n   creating: hello-world-clean-maven-java-21/src/test/java/com/helloworld/\n  inflating: hello-world-clean-maven-java-21/src/test/java/com/helloworld/MyCalculatorTest.java  \n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ ll\ntotal 24\n-rw-r--r-- 1 vignesh  staff    50 Jul 12 22:39 README.md\n-rw-r--r-- 1 vignesh  staff  7522 Jul 12 23:31 clean-maven-java-21.zip\ndrwxr-xr-x  6 vignesh  staff   192 Jul 12 22:56 hello-world-clean-maven-java-21\n</code></pre> <p>Delete the clean-maven-java-21.zip file</p> <pre><code>rm -f clean-maven-java-21.zip\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ rm -f clean-maven-java-21.zip\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ ll\ntotal 8\n-rw-r--r-- 1 vignesh  staff   50 Jul 12 22:39 README.md\ndrwxr-xr-x  6 vignesh  staff  192 Jul 12 22:56 hello-world-clean-maven-java-21\n</code></pre> <p>Move the files from the hello-world-clean-maven-java-21 folder to the hello-world-java folder</p> <pre><code>mv -f hello-world-clean-maven-java-21/{.,}* .\nls -la\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ mv -f hello-world-clean-maven-java-21/{.,}* .\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ ls -la\ntotal 24\ndrwxr-xr-x   8 vignesh  staff   256 Jul 14 20:04 .\ndrwxr-xr-x   3 vignesh  staff    96 Jul 12 22:39 ..\ndrwxr-xr-x  12 vignesh  staff   384 Jul 12 22:46 .git\n-rw-r--r-- 1 vignesh  staff    69 Jul 12 22:56 .gitignore\n-rw-r--r-- 1 vignesh  staff   762 Jul 12 22:56 README.md\ndrwxr-xr-x   2 vignesh  staff    64 Jul 14 20:04 hello-world-clean-maven-java-21\n-rw-r--r-- 1 vignesh  staff  1414 Jul 12 22:56 pom.xml\ndrwxr-xr-x   4 vignesh  staff   128 Jul 12 22:56 src\n</code></pre> <p>Delete folder hello-world-clean-maven-java-21</p> <pre><code>rm -rf hello-world-clean-maven-java-21\nls -la\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ rm -rf hello-world-clean-maven-java-21\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ ls -la\ntotal 24\ndrwxr-xr-x   7 vignesh  staff   224 Jul 14 20:06 .\ndrwxr-xr-x   3 vignesh  staff    96 Jul 12 22:39 ..\ndrwxr-xr-x  12 vignesh  staff   384 Jul 12 22:46 .git\n-rw-r--r-- 1 vignesh  staff    69 Jul 12 22:56 .gitignore\n-rw-r--r-- 1 vignesh  staff   762 Jul 12 22:56 README.md\n-rw-r--r-- 1 vignesh  staff  1414 Jul 12 22:56 pom.xml\ndrwxr-xr-x   4 vignesh  staff   128 Jul 12 22:56 src\n</code></pre> <p>Check git status</p> <pre><code>git status\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ git status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\n  (use \"git restore &lt;file&gt;...\" to discard changes in working directory)\n    modified:   README.md\n\nUntracked files:\n  (use \"git add &lt;file&gt;...\" to include in what will be committed)\n    .gitignore\n    pom.xml\n    src/\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n</code></pre> <p>Add the files</p> <pre><code>git add .\ngit status\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ git add .\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ git status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges to be committed:\n  (use \"git restore --staged &lt;file&gt;...\" to unstage)\n    new file:   .gitignore\n    modified:   README.md\n    new file:   pom.xml\n    new file:   src/main/java/com/example/HelloWorld.java\n    new file:   src/main/java/com/example/MyCalculator.java\n    new file:   src/main/java/com/example/MyCalculatorUsingMath.java\n    new file:   src/main/webapp/WEB-INF/web.xml\n    new file:   src/main/webapp/index.html\n    new file:   src/main/webapp/index.jsp\n    new file:   src/main/webapp/style.css\n    new file:   src/test/java/com/helloworld/MyCalculatorTest.java\n</code></pre> <p>Commit the files</p> <pre><code>git commit -m \"Added Java 21 maven project files\"\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ git commit -m \"Added Java 21 maven project files\"\n[main 27d7fcb] Added Java 21 maven project files\n 11 files changed, 287 insertions(+), 2 deletions(-)\n create mode 100644 .gitignore\n create mode 100644 pom.xml\n create mode 100644 src/main/java/com/example/HelloWorld.java\n create mode 100644 src/main/java/com/example/MyCalculator.java\n create mode 100644 src/main/java/com/example/MyCalculatorUsingMath.java\n create mode 100644 src/main/webapp/WEB-INF/web.xml\n create mode 100644 src/main/webapp/index.html\n create mode 100644 src/main/webapp/index.jsp\n create mode 100644 src/main/webapp/style.css\n create mode 100644 src/test/java/com/helloworld/MyCalculatorTest.java\n</code></pre> <p>Run the below Git command to push to your GitHub repository</p> <pre><code>git push origin main\n</code></pre> <p>OUTPUT:</p> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ git push origin main\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ git push origin main\nUsername for 'https://github.com': devopspilot1\nPassword for 'https://devopspilot1@github.com': \nEnumerating objects: 26, done.\nCounting objects: 100% (26/26), done.\nDelta compression using up to 10 threads\nCompressing objects: 100% (17/17), done.\nWriting objects: 100% (24/24), 3.90 KiB | 3.90 MiB/s, done.\nTotal 24 (delta 0), reused 0 (delta 0), pack-reused 0\nTo https://github.com/devopspilot1/hello-world-java.git\n   1b71662..27d7fcb  main -&gt; main\n</code></pre> <p>Check files are pushed to the GitHub repository</p> <p></p>"},{"location":"build-tools/maven/install-java-compile/","title":"How to install Java and compile a single Java file","text":""},{"location":"build-tools/maven/install-java-compile/#install-java-in-the-ubuntu-operating-system","title":"Install Java in the Ubuntu Operating system","text":"<p>Run the below command to install Java 21 in the Ubuntu operating system</p> <pre><code>sudo apt install openjdk-21-jdk\n</code></pre>"},{"location":"build-tools/maven/install-java-compile/#install-java-in-the-centos-operating-system","title":"Install Java in the Centos Operating system","text":"<p>Run the below command to install Java 21 in the Centos operating system</p> <pre><code>sudo yum install java-21-openjdk\n</code></pre>"},{"location":"build-tools/maven/install-java-compile/#to-check-the-java-version","title":"To check the Java version","text":"<p>Run the below command to check the installed Java version</p> <pre><code>java --version\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh-jenkins2:~$ java --version\nopenjdk 21.0.4 2024-07-16\nOpenJDK Runtime Environment (build 21.0.4+7-Ubuntu-1ubuntu224.04)\nOpenJDK 64-Bit Server VM (build 21.0.4+7-Ubuntu-1ubuntu224.04, mixed mode, sharing)\n</code></pre>"},{"location":"build-tools/maven/install-java-compile/#compiling-and-running-a-java-file","title":"Compiling and running a Java file","text":"<p>1. Create a sample Java file HelloWorld.java</p> <pre><code>class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Hello, World!\"); \n    }\n}\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh:~$ ll\n-rw-rw-r-- 1 ubuntu ubuntu  118 Aug 12 10:18 HelloWorld.java\n</code></pre> <p>2. Compile the Java file HelloWorld.java</p> <p>Run the javac command followed by file name to compile the Java file. E.g. javac HelloWorld.java</p> <pre><code>javac HelloWorld.java\n</code></pre> <p>Once the compilation finishes, it will create a HelloWorld.class file</p> <p>3. Run the ls -l command to check the created HelloWorld.class file</p> <pre><code>ls -l\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh:~$ ll\n-rw-rw-r-- 1 ubuntu ubuntu 427 Aug 12 10:24 HelloWorld.class\n-rw-rw-r-- 1 ubuntu ubuntu 118 Aug 12 10:18 HelloWorld.java\n</code></pre> <p>4. Run the Java program</p> <p>Type the java command following the Filename without extension to run the Java program E.g. java HelloWorld</p> <pre><code>java HelloWorld\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh:~$ java HelloWorld \nHello, World!\n</code></pre>"},{"location":"build-tools/maven/install-java-compile/#why-do-we-need-to-compile-the-java-code","title":"Why do we need to compile the Java code?","text":"<p>The Java code is only understood by humans, computers/machines cannot understand this code. The computer can understand only 0's and 1's</p> <p>So the Java compiler will convert the Java code to machine understandable code</p>"},{"location":"build-tools/maven/install-java-compile/#what-is-a-compiler","title":"What is a compiler?","text":"<ul> <li> <p>A compiler is a program that inputs a high-level language and outputs a low-level language (such as assembly or machine code).</p> </li> <li> <p>It is a computer program that converts programming language code into machine code (human-readable code to a binary 0 and 1 bit language for a computer processor to understand).</p> </li> <li> <p>The computer then executes the machine code to complete the task.</p> </li> </ul>"},{"location":"build-tools/maven/install-java-compile/#key-points-of-compiler","title":"Key points of Compiler:","text":"<ul> <li> <p>Compilers check all types of errors, limits, and ranges.</p> </li> <li> <p>It takes longer to run and also requires more memory.</p> </li> </ul>"},{"location":"build-tools/maven/install-maven/","title":"How to install Maven in Linux","text":"<p>To install and use Maven, Java should be installed</p> <p>To install Java click here</p>"},{"location":"build-tools/maven/install-maven/#install-maven-in-the-ubuntu-operating-system","title":"Install Maven in the Ubuntu Operating system","text":"<p>Run the following command to install Maven</p> <pre><code>sudo apt update\nsudo apt install maven\n</code></pre>"},{"location":"build-tools/maven/install-maven/#install-maven-in-the-centos-operating-system","title":"Install Maven in the Centos Operating system","text":"<p>Run the following command to install Maven</p> <pre><code>sudo yum update\nsudo yum install maven\n</code></pre>"},{"location":"build-tools/maven/install-maven/#to-check-the-maven-version","title":"To check the Maven version","text":"<p>Run the below command to check the Maven version</p> <pre><code>mvn --version\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh:~$ mvn --version\nApache Maven 3.8.7\nMaven home: /usr/share/maven\nJava version: 21.0.4, vendor: Ubuntu, runtime: /usr/lib/jvm/java-21-openjdk-amd64\nDefault locale: en, platform encoding: UTF-8\nOS name: \"linux\", version: \"6.8.0-1010-azure\", arch: \"amd64\", family: \"unix\"\n</code></pre>"},{"location":"build-tools/maven/what-is-maven/","title":"What is Maven?","text":"<p>Maven is a build automation and project management tool used primarily in Java projects.</p> <p>Here are some reasons why Maven is widely used:</p> <p>Build Automation: Maven automates the build process, including compiling code, running tests, packaging the application (e.g., creating JAR/WAR files), and generating reports. This reduces manual work and the likelihood of errors.</p> <p>Dependency Management: Maven automatically downloads and links libraries and dependencies required for your project. This ensures that all the necessary dependencies are available and correctly versioned, making it easier to manage complex projects.</p> <p>Standardized Project Structure: Maven enforces a standard directory layout and build process. This consistency makes it easier to understand and navigate projects, especially when working in teams.</p> <p>Reference: click here</p>"},{"location":"build-tools/maven/what-is-maven/#why-do-you-need-maven","title":"Why do you need Maven?","text":"<p>The main purpose of Maven is to build automation and dependency management</p> <p>When you start working on the Java project, initially you will create 1 or 2 files, compiling those Java files and running the Java program should be fine.</p> <p>But when your project grows, you will start creating multiple Java files (E.g. 50 Java files), then compiling each Java file will be a boring task. To automate this build process maven is used effectively</p> <p>After compiling, using Maven you can easily run the unit test case and package them as (jar, war) for deployment</p> <p>During compilation, your project might depend on external libraries (dependencies), this can be easily defined in pom.xml and automatically downloaded and linked by Maven.</p>"},{"location":"build-tools/maven/what-is-maven/#java-program-without-maven","title":"Java Program without Maven","text":"<p>1. Create a sample Calculator.java file</p> <p>This Java code has methods(add, subtract) to do the addition and subtraction of two numbers defined in the variables num1, and num2 and finally print the output.</p> <pre><code>public class Calculator {\n    // Method to add two numbers\n    public double add(double num1, double num2) {\n        return num1 + num2;\n    }\n\n    // Method to subtract two numbers\n    public double subtract(double num1, double num2) {\n        return num1 - num2;\n    }\n\n    public static void main(String[] args) {\n        Calculator calculator = new Calculator();\n\n        double num1 = 3;\n        double num2 = 2;\n\n        System.out.println(\"Sum: \" + calculator.add(num1, num2));\n        System.out.println(\"Difference: \" + calculator.subtract(num1, num2));\n    }\n}\n</code></pre> <p>2. Run the ll command to check Calculator.java file is created</p> <pre><code>ll\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh-jenkins2:~/java$ ll\n-rw-rw-r-- 1 ubuntu ubuntu  598 Aug 12 13:14 Calculator.java\n</code></pre> <p>3. Compile the Java file\u00a0Calculator.java</p> <p>Run the\u00a0javac\u00a0command followed by file name to compile the Java file. E.g.\u00a0javac Calculator.java</p> <pre><code>javac Calculator.java\n</code></pre> <p>Once the compilation finishes, it will create a\u00a0HelloWorld.class\u00a0file</p> <p>4. Run the\u00a0ll\u00a0command to check the created\u00a0Calculator.class\u00a0file</p> <p>Output:</p> <pre><code>ubuntu@vignesh-jenkins2:~/java$ ll\n-rw-rw-r-- 1 ubuntu ubuntu 1086 Aug 12 13:20 Calculator.class\n-rw-rw-r-- 1 ubuntu ubuntu  598 Aug 12 13:14 Calculator.java\n</code></pre> <p>5. Run the Calculator Java program</p> <p>Type the\u00a0java\u00a0command following the Filename without extension to run the Java program E.g. java Calculator</p> <pre><code>java Calculator\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh-jenkins2:~/java$ java Calculator\nSum: 5.0\nDifference: 1.0\n</code></pre> <p>6. Create a Unit Test Java file for the Calculator Program</p> <p>Unit test is a process to test the method or small unit in a program.</p> <p>In the above program, you have 2 methods add and subtract. Unit test is used to test whether these 2 methods will give a correct output when you give different inputs (scenarios).</p> <p>JUnit is a widely used unit testing framework for Java programming language</p> <p>Create a file CalculatorTest.java</p> <pre><code>import org.junit.Test;\nimport static org.junit.Assert.assertEquals;\n\npublic class CalculatorTest {\n\n    @Test\n    public void testAdd() {\n        Calculator calculator = new Calculator();\n        double result = calculator.add(10, 5);\n        assertEquals(15, result, 0);\n    }\n\n    @Test\n    public void testSubtract() {\n        Calculator calculator = new Calculator();\n        double result = calculator.subtract(10, 5);\n        assertEquals(5, result, 0);\n    }\n}\n</code></pre> <p>The above Java file will refer to the Calculator Java file and call the add method by passing two numbers (10, 5), expecting the result to be 15. If the add method returns 15, then this test case is a pass.</p> <p>Similarly, it calls the subtract method by passing two numbers (10, 5), expecting the result to be 5. If the subtract method returns 5, then the test case is a pass else fail.</p> <p>It uses the JUnit assertEquals methods to check whether the output is Equal to your expected value or not.</p> <p>7. Run the ll command to check CalculatorTest.java file is created</p> <pre><code>ll\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh-jenkins2:~/java$ ll\n-rw-rw-r-- 1 ubuntu ubuntu 1086 Aug 12 13:20 Calculator.class\n-rw-rw-r-- 1 ubuntu ubuntu  598 Aug 12 13:14 Calculator.java\n-rw-rw-r-- 1 ubuntu ubuntu  468 Aug 12 13:47 CalculatorTest.java\n</code></pre> <p>8. Compile the Test Java file\u00a0CalculatorTest.java</p> <p>Run the\u00a0following command to compile the CalculatorTest.java</p> <pre><code>javac CalculatorTest.java\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh-jenkins2:~/java$ javac CalculatorTest.java\nCalculatorTest.java:1: error: package org.junit does not exist\nimport org.junit.Test;\n                ^\nCalculatorTest.java:2: error: package org.junit does not exist\nimport static org.junit.Assert.assertEquals;\n                       ^\nCalculatorTest.java:2: error: static import only from classes and interfaces\nimport static org.junit.Assert.assertEquals;\n^\nCalculatorTest.java:6: error: cannot find symbol\n    @Test\n     ^\n  symbol:   class Test\n  location: class CalculatorTest\nCalculatorTest.java:13: error: cannot find symbol\n    @Test\n     ^\n  symbol:   class Test\n  location: class CalculatorTest\nCalculatorTest.java:10: error: cannot find symbol\n        assertEquals(15, result, 0);\n        ^\n  symbol:   method assertEquals(int,double,int)\n  location: class CalculatorTest\nCalculatorTest.java:17: error: cannot find symbol\n        assertEquals(5, result, 0);\n        ^\n  symbol:   method assertEquals(int,double,int)\n  location: class CalculatorTest\n7 errors\n</code></pre> <p>Compilation fails since it depends on the junit\u00a0Java library</p> <p>9. Download the Junit library file</p> <p>In Java library files are available in the .jar extension.</p> <p>Run the following command to download the 2 jar files. junit library depends on the hamcrest-core library. This is called transitive dependency</p> <pre><code>wget https://repo1.maven.org/maven2/junit/junit/4.13.2/junit-4.13.2.jar\nwget https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh-jenkins2:~/java$ wget https://repo1.maven.org/maven2/junit/junit/4.13.2/junit-4.13.2.jar\n--2024-08-12 14:22:37-- https://repo1.maven.org/maven2/junit/junit/4.13.2/junit-4.13.2.jar\nResolving repo1.maven.org (repo1.maven.org)... 151.101.40.209, 2a04:4e42:a::209\nConnecting to repo1.maven.org (repo1.maven.org)|151.101.40.209|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 384581 (376K) [application/java-archive]\nSaving to: \u2018junit-4.13.2.jar\u2019\n\njunit-4.13.2.jar                    100%[================================================================&gt;] 375.57K   417KB/s    in 0.9s    \n\n2024-08-12 14:22:38 (417 KB/s) - \u2018junit-4.13.2.jar\u2019 saved [384581/384581]\n</code></pre> <pre><code>ubuntu@vignesh-jenkins2:~/java$ wget https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\n--2024-08-12 14:22:44-- https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\nResolving repo1.maven.org (repo1.maven.org)... 151.101.40.209, 2a04:4e42:a::209\nConnecting to repo1.maven.org (repo1.maven.org)|151.101.40.209|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 45024 (44K) [application/java-archive]\nSaving to: \u2018hamcrest-core-1.3.jar\u2019\n\nhamcrest-core-1.3.jar               100%[================================================================&gt;]  43.97K   177KB/s    in 0.2s    \n\n2024-08-12 14:22:46 (177 KB/s) - \u2018hamcrest-core-1.3.jar\u2019 saved [45024/45024]\n</code></pre> <p>10. Run the\u00a0ll\u00a0command to see the downloaded files</p> <pre><code>ll\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh-jenkins2:~/java$ ll\n-rw-rw-r-- 1 ubuntu ubuntu   1086 Aug 12 13:20 Calculator.class\n-rw-rw-r-- 1 ubuntu ubuntu    598 Aug 12 13:14 Calculator.java\n-rw-rw-r-- 1 ubuntu ubuntu    468 Aug 12 13:47 CalculatorTest.java\n-rw-rw-r-- 1 ubuntu ubuntu  45024 Jul  9  2012 hamcrest-core-1.3.jar\n-rw-rw-r-- 1 ubuntu ubuntu 384581 Feb 13  2021 junit-4.13.2.jar\n</code></pre> <p>11 Compile the Test Java file\u00a0CalculatorTest.java</p> <p>You need to pass the jar files as parameters to the javac command to refer to the jar files during compilation</p> <p>Run the following command to compile</p> <pre><code>javac -cp .:junit-4.13.2.jar:hamcrest-core-1.3.jar CalculatorTest.java\n</code></pre> <p>Once the compilation finishes, it will create a\u00a0CalculatorTest.class\u00a0file</p> <p>12. Run the\u00a0ll\u00a0command to check the created\u00a0CalculatorTest.class\u00a0file</p> <pre><code>ll\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh-jenkins2:~/java$ ll\n-rw-rw-r-- 1 ubuntu ubuntu   1086 Aug 12 13:20 Calculator.class\n-rw-rw-r-- 1 ubuntu ubuntu    598 Aug 12 13:14 Calculator.java\n-rw-rw-r-- 1 ubuntu ubuntu    603 Aug 12 14:29 CalculatorTest.class\n-rw-rw-r-- 1 ubuntu ubuntu    468 Aug 12 13:47 CalculatorTest.java\n-rw-rw-r-- 1 ubuntu ubuntu  45024 Jul  9  2012 hamcrest-core-1.3.jar\n-rw-rw-r-- 1 ubuntu ubuntu 384581 Feb 13  2021 junit-4.13.2.jar\n</code></pre> <p>13. Run the JUnit Test</p> <p>Run the following command to run the CalculatorTest to test the program</p> <pre><code>java -cp .:junit-4.13.2.jar:hamcrest-core-1.3.jar org.junit.runner.JUnitCore CalculatorTest\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh-jenkins2:~/java$ java -cp .:junit-4.13.2.jar:hamcrest-core-1.3.jar org.junit.runner.JUnitCore CalculatorTest\nJUnit version 4.13.2\n..\nTime: 0.018\n\nOK (2 tests)\n</code></pre> <p>Both the test cases are passed.</p> <p>You can see the difficulties in maintaining the dependencies. For a big project, there could be hundreds of dependencies, with Maven this can be easily managed.</p> <p>14. Cleanup the compiled class files and downloaded jar files</p> <p>Run the following command to delete the Calculator.class, CalculatorTest.class, junit-4.13.2.jar and hamcrest-core-1.3.jar</p> <pre><code>rm -f *.class *.jar\n</code></pre> <p>Verify the files are deleted</p> <pre><code>ll\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh-jenkins2:~/java$ ll\n-rw-rw-r-- 1 ubuntu ubuntu  598 Aug 12 13:14 Calculator.java\n-rw-rw-r-- 1 ubuntu ubuntu  468 Aug 12 13:47 CalculatorTest.java\n</code></pre>"},{"location":"build-tools/maven/what-is-maven/#java-program-with-maven","title":"Java Program with Maven","text":"<p>Maven expects the Java files to be in a proper folder structure with pox.xml in the root folder like this</p> <pre><code>\u251c\u2500\u2500 pom.xml\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 main\n    \u2502   \u2514\u2500\u2500 java\n    \u2502       \u2514\u2500\u2500 Calculator.java\n    \u2514\u2500\u2500 test\n        \u2514\u2500\u2500 java\n            \u2514\u2500\u2500 CalculatorTest.java\n</code></pre> <p>1. Create src/main/java folder and move Calculator.java into it</p> <p>All development Java files are kept inside the src/main/java folder as per the Maven folder structure</p> <p>Run the following command to create the src/main/java folder</p> <pre><code>mkdir -p src/main/java\n</code></pre> <p>Check folder is created</p> <pre><code>ll\ntree\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh-jenkins2:~/java$ ll\n-rw-rw-r-- 1 ubuntu ubuntu  598 Aug 12 13:14 Calculator.java\n-rw-rw-r-- 1 ubuntu ubuntu  468 Aug 12 13:47 CalculatorTest.java\ndrwxrwxr-x 3 ubuntu ubuntu 4096 Aug 13 14:26 src/\n</code></pre> <pre><code>ubuntu@vignesh-jenkins2:~/java$ tree\n\u251c\u2500\u2500 Calculator.java\n\u251c\u2500\u2500 CalculatorTest.java\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 main\n        \u2514\u2500\u2500 java\n</code></pre> <p>Run the following command to move the Calculator.java into src/main/java folder</p> <pre><code>mv Calculator.java src/main/java\n</code></pre> <p>Verify Calculator.java file moved into src/main/java</p> <pre><code>tree\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh-jenkins2:~/java$ tree\n\u251c\u2500\u2500 CalculatorTest.java\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 main\n        \u2514\u2500\u2500 java\n            \u2514\u2500\u2500 Calculator.java\n</code></pre> <p>2. Create src/test/java folder and move CalculatorTest.java into it</p> <p>All Unit Test Java files are kept inside the src/test/java folder as per the Maven folder structure</p> <p>Run the following command to create the src/test/java folder</p> <pre><code>mkdir -p src/test/java\n</code></pre> <p>Check folder is created</p> <pre><code>tree\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh-jenkins2:~/java$ tree\n\u251c\u2500\u2500 CalculatorTest.java\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 main\n    \u2502   \u2514\u2500\u2500 java\n    \u2502       \u2514\u2500\u2500 Calculator.java\n    \u2514\u2500\u2500 test\n        \u2514\u2500\u2500 java\n</code></pre> <p>Run the following command to move the CalculatorTest.java into the src/test/java folder</p> <pre><code>mv CalculatorTest.java src/test/java\n</code></pre> <p>Verify CalculatorTest.java file moved into src/test/java</p> <pre><code>tree\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh-jenkins2:~/java$ tree\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 main\n    \u2502   \u2514\u2500\u2500 java\n    \u2502       \u2514\u2500\u2500 Calculator.java\n    \u2514\u2500\u2500 test\n        \u2514\u2500\u2500 java\n            \u2514\u2500\u2500 CalculatorTest.java\n</code></pre> <p>3. Create a pom.xml file in the root folder</p> <p>pom.xml file contains information about the project and configuration details used by Maven to build the project</p> <p>pom.xml should be kept in the root folder</p> <p>mvn command should be executed from where the pom.xml is located.</p> <p>Maven identifies this as a Maven project by identifying the pom.xml file and its information</p> <p>Create pox.xml file</p> <pre><code>&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;com.example&lt;/groupId&gt;\n    &lt;artifactId&gt;calculator-project&lt;/artifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n\n    &lt;build&gt;\n      &lt;plugins&gt;\n        &lt;plugin&gt;\n          &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n          &lt;version&gt;3.12.1&lt;/version&gt;\n        &lt;/plugin&gt;\n      &lt;/plugins&gt;\n    &lt;/build&gt;\n    &lt;dependencies&gt;\n        &lt;!-- JUnit dependency --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;junit&lt;/groupId&gt;\n            &lt;artifactId&gt;junit&lt;/artifactId&gt;\n            &lt;version&gt;4.13.2&lt;/version&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n&lt;/project&gt;\n</code></pre> <p>pox.xml has important fields like groupId, artifactId, and version to track the project details</p> <p>Now dependencies like JUnit can be easily defined under the dependency block in pom.xml</p> <p>During compilation, it automatically downloads the jar files and keeps them inside the ~/.m2 folder</p> <p>One more important thing, it automatically downloads the transitive dependency, you do not need to define it in the pom.xml</p> <p>Here hamcrest-core-1.3.jar is a transitive dependency for the Junit library, Maven will automatically download it</p> <p>Final folder structure</p> <pre><code>tree\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh-jenkins2:~/java$ tree\n\u251c\u2500\u2500 pom.xml\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 main\n    \u2502   \u2514\u2500\u2500 java\n    \u2502       \u2514\u2500\u2500 Calculator.java\n    \u2514\u2500\u2500 test\n        \u2514\u2500\u2500 java\n            \u2514\u2500\u2500 CalculatorTest.java\n</code></pre> <p>4. Compile the Java program using the Maven command</p> <p>Run the following Maven command to compile the Maven project</p> <pre><code>mvn compile\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh-jenkins2:~/java$ mvn compile\n[INFO] Scanning for projects...\n[INFO] \n[INFO] -------------------&lt; com.example:calculator-project &gt;-------------------\n[INFO] Building calculator-project 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\nDownloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-resources-plugin/2.6/maven-resources-plugin-2.6.pom\nDownloaded from central: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-resources-plugin/2.6/maven-resources-plugin-2.6.pom (8.1 kB at 5.6 kB/s)\nDownloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-plugins/23/maven-plugins-23.pom\nDownloaded from central: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-plugins/23/maven-plugins-23.pom (9.2 kB at 67 kB/s)\nDownloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/maven-parent/22/maven-parent-22.pom\nDownloaded from central: https://repo.maven.apache.org/maven2/org/apache/maven/maven-parent/22/maven-parent-22.pom (30 kB at 189 kB/s)\nDownloading from central: https://repo.maven.apache.org/maven2/org/apache/apache/11/apache-11.pom\nDownloaded from central: https://repo.maven.apache.org/maven2/org/apache/apache/11/apache-11.pom (15 kB at 95 kB/s)\nDownloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-resources-plugin/2.6/maven-resources-plugin-2.6.jar\n</code></pre> <pre><code>Downloaded from central: https://repo.maven.apache.org/maven2/org/codehaus/plexus/plexus-compiler-javac/2.14.2/plexus-compiler-javac-2.14.2.jar (23 kB at 63 kB/s)\nDownloaded from central: https://repo.maven.apache.org/maven2/org/codehaus/plexus/plexus-utils/4.0.0/plexus-utils-4.0.0.jar (192 kB at 509 kB/s)\n[INFO] Recompiling the module because of changed source code.\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 1.8] to target/classes\n[WARNING] bootstrap class path not set in conjunction with -source 8\n[WARNING] source value 8 is obsolete and will be removed in a future release\n[WARNING] target value 8 is obsolete and will be removed in a future release\n[WARNING] To suppress warnings about obsolete options, use -Xlint:-options.\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  16.675 s\n[INFO] Finished at: 2024-08-13T15:13:55Z\n[INFO] ------------------------------------------------------------------------\n</code></pre> <p>It creates a class file inside the target/classes folder</p> <pre><code>tree\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh-jenkins2:~/java$ tree\n\u251c\u2500\u2500 pom.xml\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 main\n\u2502   \u2502   \u2514\u2500\u2500 java\n\u2502   \u2502       \u2514\u2500\u2500 Calculator.java\n\u2502   \u2514\u2500\u2500 test\n\u2502       \u2514\u2500\u2500 java\n\u2502           \u2514\u2500\u2500 CalculatorTest.java\n\u2514\u2500\u2500 target\n    \u251c\u2500\u2500 classes\n    \u2502   \u2514\u2500\u2500 Calculator.class\n    \u251c\u2500\u2500 generated-sources\n    \u2502   \u2514\u2500\u2500 annotations\n    \u2514\u2500\u2500 maven-status\n        \u2514\u2500\u2500 maven-compiler-plugin\n            \u2514\u2500\u2500 compile\n                \u2514\u2500\u2500 default-compile\n                    \u251c\u2500\u2500 createdFiles.lst\n                    \u2514\u2500\u2500 inputFiles.lst\n</code></pre> <p>5. Compile the Java program using the Maven command</p> <p>Run the following Maven command to run the Junit test</p> <pre><code>mvn test\n</code></pre> <p>When you run the mvn test, it compiles first and then executes the Junit test cases.</p> <p>Output:</p> <pre><code>ubuntu@vignesh-jenkins2:~/java$ mvn test\n[INFO] Scanning for projects...\n[INFO] \n[INFO] -------------------&lt; com.example:calculator-project &gt;-------------------\n[INFO] Building calculator-project 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\nDownloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-surefire-plugin/2.12.4/maven-surefire-plugin-2.12.4.pom\nDownloaded from central: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-surefire-plugin/2.12.4/maven-surefire-plugin-2.12.4.pom (10 kB at 13 kB/s)\nDownloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire/2.12.4/surefire-2.12.4.pom\nDownloaded from central: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire/2.12.4/surefire-2.12.4.pom (14 kB at 104 kB/s)\nDownloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-surefire-plugin/2.12.4/maven-surefire-plugin-2.12.4.jar\n</code></pre> <pre><code>Downloaded from central: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.12.4/surefire-providers-2.12.4.pom (2.3 kB at 20 kB/s)\nDownloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.12.4/surefire-junit4-2.12.4.jar\nDownloaded from central: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.12.4/surefire-junit4-2.12.4.jar (37 kB at 313 kB/s)\n\n-------------------------------------------------------\n T E S T S\n-------------------------------------------------------\nRunning CalculatorTest\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.141 sec\n\nResults :\n\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0\n\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  10.415 s\n[INFO] Finished at: 2024-08-13T15:17:01Z\n[INFO] ------------------------------------------------------------------------\n</code></pre> <p>Test class files are kept inside the target/test-classes folder</p> <pre><code>tree\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh-jenkins2:~/java$ tree\n\u251c\u2500\u2500 pom.xml\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 main\n\u2502   \u2502   \u2514\u2500\u2500 java\n\u2502   \u2502       \u2514\u2500\u2500 Calculator.java\n\u2502   \u2514\u2500\u2500 test\n\u2502       \u2514\u2500\u2500 java\n\u2502           \u2514\u2500\u2500 CalculatorTest.java\n\u2514\u2500\u2500 target\n    \u251c\u2500\u2500 classes\n    \u2502   \u2514\u2500\u2500 Calculator.class\n    \u251c\u2500\u2500 generated-sources\n    \u2502   \u2514\u2500\u2500 annotations\n    \u251c\u2500\u2500 generated-test-sources\n    \u2502   \u2514\u2500\u2500 test-annotations\n    \u251c\u2500\u2500 maven-status\n    \u2502   \u2514\u2500\u2500 maven-compiler-plugin\n    \u2502       \u251c\u2500\u2500 compile\n    \u2502       \u2502   \u2514\u2500\u2500 default-compile\n    \u2502       \u2502       \u251c\u2500\u2500 createdFiles.lst\n    \u2502       \u2502       \u2514\u2500\u2500 inputFiles.lst\n    \u2502       \u2514\u2500\u2500 testCompile\n    \u2502           \u2514\u2500\u2500 default-testCompile\n    \u2502               \u251c\u2500\u2500 createdFiles.lst\n    \u2502               \u2514\u2500\u2500 inputFiles.lst\n    \u251c\u2500\u2500 surefire-reports\n    \u2502   \u251c\u2500\u2500 CalculatorTest.txt\n    \u2502   \u2514\u2500\u2500 TEST-CalculatorTest.xml\n    \u2514\u2500\u2500 test-classes\n        \u2514\u2500\u2500 CalculatorTest.class\n</code></pre> <p>6. Package the program and create a Jar file</p> <p>With Maven you can package your Java program/application into a JAR/WAR package</p> <p>JAR can be created and used in another Java program as a library.</p> <p>Similarly, WAR can be created to deploy to the Tomcat Webserver to see your application from a Browser like Chrome</p> <p>Add this maven-jar-plugin plugin code under the plugins block in the pom.xml to generate a jar file</p> <pre><code>&lt;!-- Jar plugin to specify the main class --&gt;\n&lt;plugin&gt;\n    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n    &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;\n    &lt;version&gt;3.2.0&lt;/version&gt;\n    &lt;configuration&gt;\n        &lt;archive&gt;\n            &lt;manifest&gt;\n                &lt;mainClass&gt;Calculator&lt;/mainClass&gt;\n            &lt;/manifest&gt;\n        &lt;/archive&gt;\n    &lt;/configuration&gt;\n&lt;/plugin&gt;\n</code></pre> <p>Final pom.xml after adding the maven-jar-plugin plugin</p> <pre><code>&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;com.example&lt;/groupId&gt;\n    &lt;artifactId&gt;calculator-project&lt;/artifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n\n    &lt;build&gt;\n      &lt;plugins&gt;\n        &lt;plugin&gt;\n          &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n          &lt;version&gt;3.12.1&lt;/version&gt;\n        &lt;/plugin&gt;\n\n        &lt;!-- Jar plugin to specify the main class --&gt;\n        &lt;plugin&gt;\n          &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n          &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;\n          &lt;version&gt;3.2.0&lt;/version&gt;\n          &lt;configuration&gt;\n            &lt;archive&gt;\n              &lt;manifest&gt;\n                &lt;mainClass&gt;Calculator&lt;/mainClass&gt;\n              &lt;/manifest&gt;\n            &lt;/archive&gt;\n          &lt;/configuration&gt;\n        &lt;/plugin&gt;    \n      &lt;/plugins&gt;\n    &lt;/build&gt;\n    &lt;dependencies&gt;\n        &lt;!-- JUnit dependency --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;junit&lt;/groupId&gt;\n            &lt;artifactId&gt;junit&lt;/artifactId&gt;\n            &lt;version&gt;4.13.2&lt;/version&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n&lt;/project&gt;\n</code></pre> <p>Run the following command to create a Jar package</p> <pre><code>mvn clean package\n</code></pre> <p>When you run the mvn clean package, it deletes the existing target folder, compiles freshly, executes the Junit test cases, and then creates the Jar file</p> <p>Output:</p> <pre><code>ubuntu@vignesh-jenkins2:~/java$ mvn clean package\n[INFO] Scanning for projects...\n[INFO] \n[INFO] -------------------&lt; com.example:calculator-project &gt;-------------------\n[INFO] Building calculator-project 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\nDownloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-jar-plugin/3.2.0/maven-jar-plugin-3.2.0.pom\nDownloaded from central: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-jar-plugin/3.2.0/maven-jar-plugin-3.2.0.pom (7.3 kB at 8.1 kB/s)\nDownloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-plugins/33/maven-plugins-33.pom\nDownloaded from central: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-plugins/33/maven-plugins-33.pom (11 kB at 75 kB/s)\nDownloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-jar-plugin/3.2.0/maven-jar-plugin-3.2.0.jar\nDownloaded from central: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-jar-plugin/3.2.0/maven-jar-plugin-3.2.0.jar (29 kB at 188 kB/s)\n</code></pre> <pre><code>[INFO] Building jar: /home/ubuntu/java/target/calculator-project-1.0-SNAPSHOT.jar\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  16.728 s\n[INFO] Finished at: 2024-08-15T11:09:33Z\n[INFO] ------------------------------------------------------------------------\n</code></pre> <p>The jar file is here target/calculator-project-1.0-SNAPSHOT.jar</p> <p>7. Execute the Jar file to run the Java program</p> <p>Run the following command to run the program</p> <pre><code>java -jar target/calculator-project-1.0-SNAPSHOT.jar\n</code></pre> <p>Output:</p> <pre><code>ubuntu@vignesh-jenkins2:~/java$ java -jar target/calculator-project-1.0-SNAPSHOT.jar\nSum: 15.0\nDifference: 5.0\n</code></pre> <p>Maven is very useful in the CI/CD process to automate the building of application</p>"},{"location":"cloud/on-premise-cloud/","title":"On Premises vs Cloud","text":""},{"location":"cloud/on-premise-cloud/#youtube","title":"Youtube","text":""},{"location":"cloud/on-premise-cloud/#normal-computer-vs-server","title":"Normal computer vs Server","text":""},{"location":"cloud/on-premise-cloud/#datacenter","title":"Datacenter","text":"<p>A data center is a collection of servers to  provide shared access to applications and data using a complex network, compute, and storage infrastructure</p> <p></p>"},{"location":"cloud/on-premise-cloud/#on-premises-vs-cloud_1","title":"On premises vs Cloud","text":"<p>On premises means the Datacenter owned only by the Company/Organization</p> <p>Cloud means the Datacenter is owned by the provider and given as service to the customer and the servers will be shared by multiple customers</p> <p></p>"},{"location":"cloud/on-premise-cloud/#datacenter-locations-of-cloud-providers","title":"Datacenter locations of cloud providers","text":""},{"location":"cloud/on-premise-cloud/#major-cloud-providers","title":"Major Cloud Providers","text":"<ul> <li>AWS (Amazon Web Services)</li> <li>Microsoft Azure</li> <li>GCP (Google Cloud Platform)</li> </ul> <p>And many more....</p>"},{"location":"cloud/on-premise-cloud/#cloud-service-offerings","title":"Cloud service offerings","text":"<ul> <li>Iaas \u2192 Infrastructure as a Service Eg: Getting servers from cloud providers ...</li> <li>Pass \u2192 Platform as a Service Eg: EKS(Elastic Kubernetes Service) from AWS, Openshift from Redhat ...</li> <li>Saas \u2192 Software as a Service Eg: Gmail, Youtube ...</li> </ul>"},{"location":"cloud/on-premise-cloud/#virtual-machines","title":"Virtual Machines","text":"<p>From a single server, we can create multiple small servers called Virtual Machines(VM) using a technology Hypervisor</p> <p></p>"},{"location":"cloud/types-of-os/","title":"Types of os","text":""},{"location":"cloud/types-of-os/#types-of-operating-system","title":"Types of operating system","text":""},{"location":"cloud/types-of-os/#windows","title":"Windows","text":""},{"location":"cloud/types-of-os/#os-variants","title":"OS variants","text":"<ul> <li>Windows xp (old), Windows 8, 10, 11</li> </ul>"},{"location":"cloud/types-of-os/#features","title":"Features","text":"<ul> <li>GUI and terminal(cmd , powershell)</li> <li>Scripting - batch, powershell </li> </ul>"},{"location":"cloud/types-of-os/#linux","title":"Linux","text":""},{"location":"cloud/types-of-os/#os-variants_1","title":"OS variants","text":"<ul> <li>Ubuntu 14, 16, 18, 20, 22 (Free)</li> <li>Centos 7, 8 (Free)</li> <li>Redhat Linux (Enterprise)</li> <li>Debian</li> <li>Amazon linux</li> <li>Oracle linux</li> </ul>"},{"location":"cloud/types-of-os/#features_1","title":"Features","text":"<ul> <li>GUI (Graphical User Interface) and Terminal (CLI - Command line interface)</li> <li>Scripting - Shell scripting</li> </ul>"},{"location":"cloud/types-of-os/#why-to-chooselearn-linux","title":"Why to choose/learn Linux","text":"<ul> <li>Opensource, Free, Enterprise</li> <li>Security</li> <li>Resource optimization (Even 1GB memory and 8GB storage is sufficient to start)</li> <li>Mostly used IT industry to deploy the application. (Most of the websites on running on linux servers)</li> </ul>"},{"location":"cloud/types-of-os/#usecase","title":"UseCase","text":"<ul> <li>Windows (Personnal use mostly. Used minimally for deploying applications)</li> <li>Linux (Used mostly as servers for deploying applications. Rarely used for personnal use)</li> </ul>"},{"location":"cloud/virtualbox/","title":"How to install virtualbox and create ubuntu virtual machine","text":"<p>Download the Ubuntu 20.04 iso file from offical page</p> <p>Follow the steps in the following blog to install the virtualbox and create ubuntu virtual machine</p> <p>Install virtualBox</p>"},{"location":"docker/dockerfiles/create-a-dockerfile-for-installing-openjdk15/","title":"How to write a dockerfile for installing openjdk15","text":""},{"location":"docker/dockerfiles/create-a-dockerfile-for-installing-openjdk15/#approach-1","title":"Approach 1","text":"<p>Downloading the openjdk 15 tar file from official website, untar the file , delete the downloaded tar file and set the path to java binary.</p>"},{"location":"docker/dockerfiles/create-a-dockerfile-for-installing-openjdk15/#create-a-dockerfile-and-copy-a-below-content","title":"Create a Dockerfile and copy a below content","text":"<pre><code>FROM centos:8\n\nENV PATH=$PATH:/opt/java/jdk-15.0.2/bin\n\nWORKDIR /opt/java\n\nRUN curl https://download.java.net/java/GA/jdk15.0.2/0d1cfde4252546c6931946de8db48ee2/7/GPL/openjdk-15.0.2_linux-x64_bin.tar.gz -o openjdk-15.0.2_linux-x64_bin.tar.gz\n\nRUN tar -xzf openjdk-15.0.2_linux-x64_bin.tar.gz &amp;&amp; \n    rm -rf openjdk-15.0.2_linux-x64_bin.tar.gz\n</code></pre>"},{"location":"docker/dockerfiles/create-a-dockerfile-for-installing-openjdk15/#build-a-docker-image","title":"Build a docker image","text":"<pre><code>docker build -t java-approach-1:15 .\n</code></pre>"},{"location":"docker/dockerfiles/create-a-dockerfile-for-installing-openjdk15/#check-the-size-of-docker-image","title":"Check the size of docker image","text":"<p>Run the following command to check the docker images available in local machine</p> <pre><code>docker images\n</code></pre> <p></p>"},{"location":"docker/dockerfiles/create-a-dockerfile-for-installing-openjdk15/#create-a-docker-container-from-the-created-image-and-check-the-java-version","title":"Create a docker container from the created image and check the java version","text":"<pre><code>docker run --rm java:15 java -version\n</code></pre>"},{"location":"docker/dockerfiles/create-a-dockerfile-for-installing-openjdk15/#approach-2-best-practice","title":"Approach 2 (Best Practice)","text":"<p>Downloading the openjdk 15 tar file from official website, untar it and delete the tar file in a single layer and set the path to java binary.</p>"},{"location":"docker/dockerfiles/create-a-dockerfile-for-installing-openjdk15/#create-a-dockerfile-and-copy-a-below-content_1","title":"Create a Dockerfile and copy a below content","text":"<pre><code>FROM centos:8\n\nENV PATH=$PATH:/opt/java/jdk-15.0.2/bin\n\nRUN mkdir /opt/java &amp;&amp; \n    curl https://download.java.net/java/GA/jdk15.0.2/0d1cfde4252546c6931946de8db48ee2/7/GPL/openjdk-15.0.2_linux-x64_bin.tar.gz | tar -xz -C /opt/java/\n</code></pre> <p>If you are downloading a file inside dockerfile and if that file is not needed after extracting, then we should delete that file in the same layer.</p> <p>This is because, Docker images are layered architecture, file added in one layer cannot be deleted in second layer, we have to remove it in the same layer if that file is not required.</p> <p>Even if we delete the file in the next layer, it will not have any effect because the file is already added in the last layer and we cannot override that layer.</p> <p>Every 'RUN' command will create one layer for docker image.</p>"},{"location":"docker/dockerfiles/create-a-dockerfile-for-installing-openjdk15/#build-a-docker-image_1","title":"Build a docker image","text":"<pre><code>docker build -t java:15 .\n</code></pre>"},{"location":"docker/dockerfiles/create-a-dockerfile-for-installing-openjdk15/#check-the-size-of-docker-image_1","title":"Check the size of docker image","text":"<p>Run the following command to check the docker images available in local machine</p> <pre><code>docker images\n</code></pre> <p></p> <p>Now we can see, the size of the docker image is reduced.</p>"},{"location":"docker/dockerfiles/create-a-dockerfile-for-installing-openjdk15/#create-a-docker-container-from-the-created-image-and-check-the-java-version_1","title":"Create a docker container from the created image and check the java version","text":"<pre><code>docker run --rm java:15 java -version\n</code></pre>"},{"location":"docker/dockerfiles/create-a-dockerfile-for-installing-openjdk15/#approach-3-best-pratice","title":"Approach 3 (Best pratice)","text":"<p>Same as approach 2, but instead of putting all the commands in Dockerfile, put the commands in shellscript file, copy the file to Dockerfile then run the shellscript.</p> <p>Approach 2 would be better, if you want to handle everything from the Dockerfile itself.</p> <p>Use Approach 3 if you want to put lot of logic in single layer, if the commands are less we can use the approach 2</p>"},{"location":"docker/dockerfiles/create-a-dockerfile-for-installing-openjdk15/#create-a-shellscript-buildsh","title":"Create a shellscript <code>build.sh</code>","text":"<p>Copy the following content to <code>build.sh</code> file</p> <pre><code>#!/bin/bash\n\nmkdir /opt/java\ncurl https://download.java.net/java/GA/jdk15.0.2/0d1cfde4252546c6931946de8db48ee2/7/GPL/openjdk-15.0.2_linux-x64_bin.tar.gz | tar -xz -C /opt/java/\n</code></pre>"},{"location":"docker/dockerfiles/create-a-dockerfile-for-installing-openjdk15/#create-a-dockerfile","title":"Create a Dockerfile","text":"<pre><code>FROM centos:8\n\nENV PATH=$PATH:/opt/java/jdk-15.0.2/bin\n\nCOPY build.sh .\n\nRUN chmod +x build.sh &amp;&amp; \n    ./build.sh\n</code></pre>"},{"location":"docker/dockerfiles/create-a-dockerfile-for-installing-openjdk15/#approach-4","title":"Approach 4","text":"<p>Still if we want to reduce the image size, we can use <code>alipne</code> as base image. alpine is very light weight base image.</p>"},{"location":"docker/dockerfiles/create-a-dockerfile-for-installing-openjdk15/#create-a-dockerfile-and-copy-the-below-content","title":"Create a Dockerfile and copy the below content","text":"<pre><code>FROM alpine:latest\n\nENV PATH=$PATH:/opt/java/jdk-15.0.2/bin\n\nRUN apk add --no-cache curl &amp;&amp; \n    mkdir /opt/java &amp;&amp; \n    curl https://download.java.net/java/GA/jdk15.0.2/0d1cfde4252546c6931946de8db48ee2/7/GPL/openjdk-15.0.2_linux-x64_bin.tar.gz | tar -xz -C /opt/java/\n</code></pre>"},{"location":"docker/dockerfiles/create-a-dockerfile-for-installing-openjdk15/#build-a-docker-image_2","title":"Build a docker image","text":"<pre><code>docker build -t java-approach-4 .\n</code></pre>"},{"location":"docker/dockerfiles/create-a-dockerfile-for-installing-openjdk15/#check-the-size-of-docker-image_2","title":"Check the size of docker image","text":"<pre><code>docker images\n</code></pre> <p>Now we can see, the size of the docker image is reduced very much.</p>"},{"location":"docker/dockerfiles/create-dockerfile-to-install-packages/","title":"How to write Dockerfile for installing packages","text":"<p>Install git, gradle and openjdk 11</p>"},{"location":"docker/dockerfiles/create-dockerfile-to-install-packages/#using-ubuntu-as-base-image","title":"Using Ubuntu as base image","text":"<pre><code>FROM ubuntu:latest\n\nRUN apt update &amp;&amp; apt install -y --no-install-recommends \n    git \n    wget \n    openjdk-11-jdk \n    gradle \n    &amp;&amp; rm -rf /var/lib/apt/lists/*\n</code></pre>"},{"location":"docker/dockerfiles/create-dockerfile-to-install-packages/#using-centos-as-base-image","title":"Using Centos as base image","text":"<pre><code>FROM centos:latest\n\nENV PATH=$PATH:/opt/gradle/gradle-7.0.2/bin\n\nRUN yum update -y &amp;&amp; yum install -y \n    git \n    wget \n    unzip \n    java-11-openjdk-devel \n    &amp;&amp; yum clean all\n\nRUN mkdir /opt/gradle \n    &amp;&amp; wget -q https://services.gradle.org/distributions/gradle-7.0.2-bin.zip \n    &amp;&amp; unzip gradle-7.0.2-bin.zip -d /opt/gradle/ \n    &amp;&amp; rm -f gradle-7.0.2-bin.zip\n</code></pre>"},{"location":"docker/dockerfiles/create-dockerfile-to-install-packages/#using-alpine-as-base-image","title":"Using Alpine as base image","text":"<pre><code>FROM alpine:latest\n\nENV PATH=$PATH:/opt/gradle/gradle-7.0.2/bin\n\nRUN apk add --no-cache \n    git \n    openjdk11\n\nRUN mkdir /opt/gradle \n    &amp;&amp; wget -q https://services.gradle.org/distributions/gradle-7.0.2-bin.zip \n    &amp;&amp; unzip gradle-7.0.2-bin.zip -d /opt/gradle/ \n    &amp;&amp; rm -f gradle-7.0.2-bin.zip\n</code></pre>"},{"location":"docker/dockerfiles/create-multi-stage-dockerfile/","title":"How to create a multi stage Dockerfile","text":"<p>Sometimes the scenario may arise like we have to do build the code as part of dockerfile itself in this case the final docker image will be very huge since the source code and dependecies are included in the final docker image.</p> <p>Using the multi stage Dockerfile we can define two stages, one for building code and one for creatig final docker image. Once the code is built in firts stage now we can copy only the compiled code and add it in our second stage. This will make our final docker image light weight. Note the docker image is created only for the last stage, previous stages in dockerfile are not taken.</p>"},{"location":"docker/dockerfiles/create-multi-stage-dockerfile/#2-stage-dockerfile","title":"2 stage Dockerfile","text":"<p>To test this feature, I have a sample application code which is developed using Angular JS, we have to clone the repo first.</p> <pre><code>git clone https://github.com/vigneshsweekaran/easyclaim-frontend.git\n</code></pre>"},{"location":"docker/dockerfiles/create-multi-stage-dockerfile/#create-dockerfile","title":"Create Dockerfile","text":"<pre><code># Stage1\nFROM node:10.0 AS builder\n\nWORKDIR /build\n\nCOPY easyclaim-frontend .\n\nRUN npm install \n    &amp;&amp; npm run build\n\n# Stage2\nFROM nginx:alpine\n\nCOPY --from=builder /build/dist/my-dream-app /usr/share/nginx/html\n</code></pre> <p>In the first stage we have used node:10.0 as base image for compiling the Angular Js source code, then copied the entire source code inside and then executing the npm install to download the dependencies and then running the npm run build to compile the source code. It will keep the compiled code in dist/my-dream-app.</p> <p>Now we are intrested to copy only the compiled code from dist/my-dream-app folder to the Docker image, other files are not required during runtime.</p> <p>Now create a second stage with nginx:alpine as base image and then copy the compiled code from first stage which are needed during runtime and put it to second stage</p> <p>The final docker image is created from the second stage and first stage is thrown away.</p>"},{"location":"docker/dockerfiles/create-multi-stage-dockerfile/#build-a-docker-image","title":"Build a docker image","text":"<pre><code>docker build -t 2-stage:latest .\n</code></pre>"},{"location":"docker/dockerfiles/how-to-write-a-dockerfile-for-running-war-file-in-tomcat/","title":"How to write a dockerfile for running a java application (*.war) in Apache tomcat webserver","text":"<p>I have a sample hello-world maven project in github hello-world</p> <p>Maven is a build tool used to compile, test and package the application developed using Java programming language.</p> <p>Run the <code>mvn clean package</code> command to compile and package the java application.</p> <p>The <code>hello-world.war</code> file will be created in <code>targets</code> folder</p> <p></p> <p>I have already created a file <code>Dockerfile</code> and kept in root folder</p> <pre><code>From tomcat:8-jre8\n\nCOPY ./target/hello-world.war /usr/local/tomcat/webapps\n</code></pre> <p>In the <code>FROM</code> command we are taking <code>tomcat:8-jre8</code> as a base image.</p> <p>On top of that we are copying the hello-world.war file from target folder and keeping it in /usr/local/tomcat/webapps inside a container.</p> <p>we no need to explicity define the <code>CMD</code> here, because <code>CMD</code> is already written in base docker image <code>tomcat:8-jre8</code> to start the tomcat webserver.</p>"},{"location":"docker/tutorials/create-docker-image-nginx-html/","title":"Create docker image for nginx and html file","text":""},{"location":"docker/tutorials/create-docker-image-nginx-html/#create-a-folder-docker-html-and-go-into-docker-html-folder","title":"Create a folder docker-html and go into docker-html folder","text":"<pre><code>azureuser@raghav:~$ mkdir docker-html\nazureuser@raghav:~$ cd docker-html/\nazureuser@raghav:~/docker-html$ pwd\n/home/azureuser/docker-html\n</code></pre>"},{"location":"docker/tutorials/create-docker-image-nginx-html/#copy-the-below-content-and-create-indexhtml-file","title":"Copy the below content and create index.html file","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;My first docker application&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body style=\"background-color:#1c87c9;\"&gt;\n    &lt;h1&gt;Docker image for html file&lt;/h1&gt;\n    &lt;p&gt;Created my first docker image for nginx and html file !!&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <pre><code>azureuser@raghav:~/docker-html$ vi index.html\n</code></pre> <pre><code>azureuser@raghav:~/docker-html$ ll\ntotal 12\ndrwxrwxr-x  2 azureuser azureuser 4096 Jul 30 12:50 ./\ndrwxr-x--- 10 azureuser azureuser 4096 Jul 30 12:50 ../\n-rw-rw-r-- 1 azureuser azureuser  258 Jul 30 12:50 index.html\n</code></pre> <pre><code>azureuser@raghav:~/docker-html$ cat index.html \n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;My first docker application&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body style=\"background-color:#1c87c9;\"&gt;\n    &lt;h1&gt;Docker image for html file&lt;/h1&gt;\n    &lt;p&gt;Created my first docker image for nginx and html file !!&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"docker/tutorials/create-docker-image-nginx-html/#copy-the-below-content-and-create-dockerfile-file","title":"Copy the below content and create Dockerfile file","text":"<pre><code>FROM nginx:latest\nCOPY index.html /usr/share/nginx/html\n</code></pre> <pre><code>azureuser@raghav:~/docker-html$ vi Dockerfile\n</code></pre> <pre><code>azureuser@raghav:~/docker-html$ ll\ntotal 16\ndrwxrwxr-x  2 azureuser azureuser 4096 Jul 30 12:54 ./\ndrwxr-x--- 10 azureuser azureuser 4096 Jul 30 12:54 ../\n-rw-rw-r-- 1 azureuser azureuser   48 Jul 30 12:54 Dockerfile\n-rw-rw-r-- 1 azureuser azureuser  258 Jul 30 12:50 index.html\n</code></pre> <pre><code>azureuser@raghav:~/docker-html$ cat Dockerfile \nFROM nginx:latest\nCOPY index.html /usr/share/nginx/html\n</code></pre> <p>In the Dockerfile you are using <code>nginx:latest</code> as the base docker image and copying the <code>index.hml</code> file to <code>/usr/share/nginx/html</code> folder during docker build</p>"},{"location":"docker/tutorials/create-docker-image-nginx-html/#build-the-docker-image","title":"Build the docker image","text":"<pre><code>azureuser@raghav:~/docker-html$ docker build -t devopspilot1/html-app:v1.0 .\nSending build context to Docker daemon  3.072kB\nStep 1/2 : FROM nginx:latest\n ---&gt; 89da1fb6dcb9\nStep 2/2 : COPY index.html /usr/share/nginx/html\n ---&gt; ff516a41c534\nSuccessfully built ff516a41c534\nSuccessfully tagged devopspilot1/html-app:v1.0\n</code></pre> <pre><code>azureuser@raghav:~/docker-html$ docker images\nREPOSITORY              TAG       IMAGE ID       CREATED          SIZE\ndevopspilot1/html-app   v1.0      ff516a41c534   38 seconds ago   187MB\nnginx                   latest    89da1fb6dcb9   2 days ago       187MB\n</code></pre>"},{"location":"docker/tutorials/create-docker-image-nginx-html/#create-a-docker-container-with-port-mapping-8080","title":"Create a docker container with port mapping 80:80","text":"<pre><code>azureuser@raghav:~/docker-html$ docker run -d -p 80:80 devopspilot1/html-app:v1.0\ne482a35485c8891b4fc3bcd0ae83649b3ff2d85db95e1331b7253dff99eb2ba8\n</code></pre> <p>Verify docker container is running</p> <pre><code>azureuser@raghav:~/docker-html$ docker ps\nCONTAINER ID   IMAGE                        COMMAND                  CREATED          STATUS          PORTS                               NAMES\ne482a35485c8   devopspilot1/html-app:v1.0   \"/docker-entrypoint.\u2026\"   46 seconds ago   Up 45 seconds   0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp   busy_allen\n</code></pre>"},{"location":"docker/tutorials/create-docker-image-nginx-html/#check-the-html-application-in-browser","title":"Check the html application in browser","text":"<p>Type localhost:80 or ip-address:80 in browser</p> <p></p>"},{"location":"docker/tutorials/create-docker-image-nginx-html/#push-the-html-app-docker-image-tag-v10-to-dockerhub","title":"Push the html-app docker image tag v1.0 to dockerhub","text":"<pre><code>azureuser@raghav:~/docker-html$ docker push devopspilot1/html-app:v1.0\nThe push refers to repository [docker.io/devopspilot1/html-app]\nfd39da73e2be: Pushed \n922d16116201: Mounted from devopspilot1/private-nginx \nabc3beec4b30: Mounted from devopspilot1/private-nginx \nc88d3a8ff009: Mounted from devopspilot1/private-nginx \n8aedfcd777c7: Mounted from devopspilot1/private-nginx \n4deafab383fa: Mounted from devopspilot1/private-nginx \n24ee1d7d6a62: Mounted from devopspilot1/private-nginx \nc6e34807c2d5: Mounted from devopspilot1/private-nginx \nv1.0: digest: sha256:29d082542e26e1550b12e9f4719711c45effc8e16b06395bad350f8a7acf030b size: 1985\n</code></pre>"},{"location":"docker/tutorials/create-docker-image-nginx-html/#change-the-background-color-to-green","title":"Change the background color to green","text":"<p>Open the index.html file and change the color code to <code>&lt;body style=\"background-color:#008000;\"&gt;</code></p> <pre><code>azureuser@raghav:~/docker-html$ cat index.html \n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;My first docker application&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body style=\"background-color:#008000;\"&gt;\n    &lt;h1&gt;Docker image for html file&lt;/h1&gt;\n    &lt;p&gt;Created my first docker image for nginx and html file !!&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"docker/tutorials/create-docker-image-nginx-html/#create-new-html-app-docker-image-with-tag-v20","title":"Create new html-app docker image with tag v2.0","text":"<pre><code>azureuser@raghav:~/docker-html$ docker build -t devopspilot1/html-app:v2.0 .\nSending build context to Docker daemon  3.072kB\nStep 1/2 : FROM nginx:latest\n ---&gt; 89da1fb6dcb9\nStep 2/2 : COPY index.html /usr/share/nginx/html\n ---&gt; 056986a61fd7\nSuccessfully built 056986a61fd7\nSuccessfully tagged devopspilot1/html-app:v2.0\n</code></pre> <pre><code>azureuser@raghav:~/docker-html$ docker images\nREPOSITORY              TAG       IMAGE ID       CREATED          SIZE\ndevopspilot1/html-app   v2.0      056986a61fd7   20 seconds ago   187MB\ndevopspilot1/html-app   v1.0      96bcb640a6a3   7 minutes ago    187MB\nnginx                   latest    89da1fb6dcb9   2 days ago       187MB\n</code></pre>"},{"location":"docker/tutorials/create-docker-image-nginx-html/#stop-the-running-docker-container","title":"Stop the running docker container","text":"<pre><code>azureuser@raghav:~/docker-html$ docker stop e482a35485c8\ne482a35485c8\nazureuser@raghav:~/docker-html$ docker rm  e482a35485c8\ne482a35485c8\n</code></pre> <p>Verify e482a35485c8 container is stopped and removed</p> <pre><code>azureuser@raghav:~/docker-html$ docker ps\nCONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES\n</code></pre>"},{"location":"docker/tutorials/create-docker-image-nginx-html/#created-new-html-app-docker-container-with-docker-image-tag-v20","title":"Created new html-app docker container with docker image tag v2.0","text":"<pre><code>azureuser@raghav:~/docker-html$ docker run -d -p 80:80 devopspilot1/html-app:v2.0\n4172d1cd49935366b1b0dbc973a61d7dcca95faf473650fcc9f940cf2d0df73c\n</code></pre> <pre><code>azureuser@raghav:~/docker-html$ docker ps\nCONTAINER ID   IMAGE                        COMMAND                  CREATED          STATUS          PORTS                               NAMES\n4172d1cd4993   devopspilot1/html-app:v2.0   \"/docker-entrypoint.\u2026\"   40 seconds ago   Up 39 seconds   0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp   flamboyant_darwin\n</code></pre>"},{"location":"docker/tutorials/create-docker-image-nginx-html/#check-the-html-application-in-browser_1","title":"Check the html application in browser","text":"<p>Type localhost:80 or ip-address:80 in browser</p> <p></p>"},{"location":"docker/tutorials/create-docker-image-nginx-html/#push-the-html-app-docker-image-tag-v20-to-dockerhub","title":"Push the html-app docker image tag v2.0 to dockerhub","text":"<pre><code>azureuser@raghav:~/docker-html$ docker push devopspilot1/html-app:v2.0\nThe push refers to repository [docker.io/devopspilot1/html-app]\ndc0d1589ea15: Pushed \n922d16116201: Layer already exists \nabc3beec4b30: Layer already exists \nc88d3a8ff009: Layer already exists \n8aedfcd777c7: Layer already exists \n4deafab383fa: Layer already exists \n24ee1d7d6a62: Layer already exists \nc6e34807c2d5: Layer already exists \nv2.0: digest: sha256:793d02597251f58c58ae71700f22b864f3c37f58f1130a89be595130ae687472 size: 1985\n</code></pre>"},{"location":"docker/tutorials/docker-images-vs-containers/","title":"Docker Images vs Docker Containers","text":""},{"location":"docker/tutorials/docker-images-vs-containers/#iso-image-and-docker-image","title":"ISO image and Docker image","text":"<p>ISO image file is a static file, when we install it to a Computer/Laptop, all the softwares/applications in the iso package will run lively when the system is powered on.</p> <p>Similarly, Docker Image is a static package, when we create a container using that image, the applications packaged in the docker image will be running live inside docker container</p> <p></p> <p>Similar like downloading the ubuntu iso file from official ubuntu website.</p> <p>All the docker images are stored in docker registry <code>Docker Hub</code> https://hub.docker.com</p>"},{"location":"docker/tutorials/docker-images-vs-containers/#pulling-the-docker-image-from-docker-hub","title":"Pulling the docker image from Docker hub","text":"<p>Lets check what are the images present in the server.</p> <pre><code>azureuser@raghav:~$ docker image ls\nREPOSITORY   TAG       IMAGE ID   CREATED   SIZE\n</code></pre> <p>No docker images are present in the server.</p> <p>Lets pull the ubuntu docker image from docker hub</p> <p>Docker image follows the format DOCKER_IMAGE_NAME:TAG</p> <p>By default if you are not passing the tag, it will pull the <code>latest</code> tag</p> <pre><code>azureuser@raghav:~$ docker pull ubuntu\nUsing default tag: latest\nlatest: Pulling from library/ubuntu\n6b851dcae6ca: Pull complete \nDigest: sha256:6120be6a2b7ce665d0cbddc3ce6eae60fe94637c6a66985312d1f02f63cc0bcd\nStatus: Downloaded newer image for ubuntu:latest\ndocker.io/library/ubuntu:latest\n</code></pre> <p>Now check the docker images in server</p> <pre><code>azureuser@raghav:~$ docker images\nREPOSITORY   TAG       IMAGE ID       CREATED       SIZE\nubuntu       latest    99284ca6cea0   2 weeks ago   77.8MB\n</code></pre> <p>Docker image with tag <code>latest</code> is pulled from the Docker hub.</p> <p>Lets pull <code>ubuntu</code> docker image with tag <code>23.10</code></p> <pre><code>azureuser@raghav:~$ docker pull ubuntu:23.10\n23.10: Pulling from library/ubuntu\na3cc0ea50b9a: Pull complete \nDigest: sha256:bd1e0eb3171a6e499c84211e73c4f5f5b2a585507256f772f5c4f4420a3d8591\nStatus: Downloaded newer image for ubuntu:23.10\ndocker.io/library/ubuntu:23.10\n</code></pre> <pre><code>azureuser@raghav:~$ docker images\nREPOSITORY   TAG       IMAGE ID       CREATED       SIZE\nubuntu       23.10     ce0fd6ed554b   2 weeks ago   70.4MB\nubuntu       latest    99284ca6cea0   2 weeks ago   77.8MB\n</code></pre> <p>Now we have two <code>ubuntu</code> docker images in server, one with tag <code>latest</code> and another with tag <code>23.10</code></p>"},{"location":"docker/tutorials/docker-images-vs-containers/#creating-docker-container-using-docker-image","title":"Creating docker container using docker image","text":"<p>Lets create a docker container with image <code>ubuntu:23.10</code></p> <pre><code>azureuser@raghav:~$ docker run -it ubuntu:23.10 bash\nroot@fc9a74dbecbf:/# pwd\n/\nroot@fc9a74dbecbf:/# ls\nbin  boot  dev  etc  home  lib  lib32  lib64  libx32  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var\nroot@fc9a74dbecbf:/# id\nuid=0(root) gid=0(root) groups=0(root)\nroot@fc9a74dbecbf:/# cat /etc/os-release \nPRETTY_NAME=\"Ubuntu Mantic Minotaur (development branch)\"\nNAME=\"Ubuntu\"\nVERSION_ID=\"23.10\"\nVERSION=\"23.10 (Mantic Minotaur)\"\nVERSION_CODENAME=mantic\nID=ubuntu\nID_LIKE=debian\nHOME_URL=\"https://www.ubuntu.com/\"\nSUPPORT_URL=\"https://help.ubuntu.com/\"\nBUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"\nPRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"\nUBUNTU_CODENAME=mantic\nLOGO=ubuntu-logo\n</code></pre>"},{"location":"docker/tutorials/how-to-install-docker/","title":"How to install docker","text":""},{"location":"docker/tutorials/how-to-install-docker/#install-docker-in-ubuntu-operating-system-using-single-command","title":"Install docker in Ubuntu operating system using single command","text":"<pre><code>sudo apt install docker.io\n</code></pre>"},{"location":"docker/tutorials/how-to-install-docker/#install-docker-in-ubuntu-operating-system-using-docker-official-steps","title":"Install docker in Ubuntu operating system using Docker official steps","text":""},{"location":"docker/tutorials/how-to-install-docker/#install-docker-in-centos-operating-system-using-docker-official-steps","title":"Install docker in Centos operating system using Docker official steps","text":""},{"location":"docker/tutorials/pull-push-docker-image-to-private-repository/","title":"Pull nginx docker image from dockerhub, tag and push to your private repository in dockerhub account","text":""},{"location":"docker/tutorials/pull-push-docker-image-to-private-repository/#create-private-repository-in-dockerhub","title":"Create private repository in dockerhub","text":""},{"location":"docker/tutorials/pull-push-docker-image-to-private-repository/#pull-nginx-docker-image-from-dockerhub","title":"Pull nginx docker image from dockerhub","text":"<pre><code>azureuser@raghav:~$ docker pull nginx:latest\nlatest: Pulling from library/nginx\n648e0aadf75a: Pull complete \n262696647b70: Pull complete \ne66d0270d23f: Pull complete \n55ac49bd649c: Pull complete \ncbf42f5a00d2: Pull complete \n8015f365966b: Pull complete \n4cadff8bc2aa: Pull complete \nDigest: sha256:67f9a4f10d147a6e04629340e6493c9703300ca23a2f7f3aa56fe615d75d31ca\nStatus: Downloaded newer image for nginx:latest\ndocker.io/library/nginx:latest\n</code></pre> <p>Verify docker image is successfully pulled</p> <pre><code>azureuser@raghav:~$ docker images\nREPOSITORY   TAG       IMAGE ID       CREATED      SIZE\nnginx        latest    89da1fb6dcb9   2 days ago   187MB\n</code></pre>"},{"location":"docker/tutorials/pull-push-docker-image-to-private-repository/#tag-the-docker-image-to-your-dockerhub-username","title":"Tag the docker image to your dockerhub username","text":"<pre><code>azureuser@raghav:~$ docker tag nginx:latest devopspilot1/private-nginx:latest\nazureuser@raghav:~$ docker images\nREPOSITORY                   TAG       IMAGE ID       CREATED      SIZE\ndevopspilot1/private-nginx   latest    89da1fb6dcb9   2 days ago   187MB\nnginx                        latest    89da1fb6dcb9   2 days ago   187MB\n</code></pre> <p>The same nginx:latest docker image is tagged to devopspilot1/private-nginx:latest</p>"},{"location":"docker/tutorials/pull-push-docker-image-to-private-repository/#login-to-dockerhub","title":"Login to dockerhub","text":"<pre><code>azureuser@raghav:~$ docker login\nLogin with your Docker ID to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com to create one.\nUsername: devopspilot1\nPassword: \nWARNING! Your password will be stored unencrypted in /home/azureuser/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n\nLogin Succeeded\n</code></pre> <p>Login with your dockerhub username and password</p>"},{"location":"docker/tutorials/pull-push-docker-image-to-private-repository/#push-docker-image-to-your-dockerhub-account-private-repository","title":"Push docker image to your Dockerhub account private repository","text":"<pre><code>azureuser@raghav:~$ docker push devopspilot1/private-nginx:latest\nThe push refers to repository [docker.io/devopspilot1/private-nginx]\n922d16116201: Mounted from library/nginx \nabc3beec4b30: Mounted from library/nginx \nc88d3a8ff009: Mounted from library/nginx \n8aedfcd777c7: Mounted from library/nginx \n4deafab383fa: Mounted from library/nginx \n24ee1d7d6a62: Mounted from library/nginx \nc6e34807c2d5: Mounted from library/nginx \nlatest: digest: sha256:73e957703f1266530db0aeac1fd6a3f87c1e59943f4c13eb340bb8521c6041d7 size: 1778\n</code></pre> <p>Now devopspilot1/private-nginx:latest docker image is pushed to your dockerhub account private repository</p> <p></p>"},{"location":"docker/tutorials/pull-push-docker-image-to-private-repository/#delete-all-the-images-locally","title":"Delete all the images locally","text":"<pre><code>azureuser@raghav:~$ docker images\nREPOSITORY                   TAG       IMAGE ID       CREATED      SIZE\ndevopspilot1/private-nginx   latest    89da1fb6dcb9   2 days ago   187MB\nnginx                        latest    89da1fb6dcb9   2 days ago   187MB\nazureuser@raghav:~$ docker rmi nginx:latest devopspilot1/private-nginx:latest\nUntagged: nginx:latest\nUntagged: nginx@sha256:67f9a4f10d147a6e04629340e6493c9703300ca23a2f7f3aa56fe615d75d31ca\nUntagged: devopspilot1/private-nginx:latest\nUntagged: devopspilot1/private-nginx@sha256:73e957703f1266530db0aeac1fd6a3f87c1e59943f4c13eb340bb8521c6041d7\nDeleted: sha256:89da1fb6dcb964dd35c3f41b7b93ffc35eaf20bc61f2e1335fea710a18424287\nDeleted: sha256:e5afcbbf8f223b546a1db3d4f3c83064f346a2a8e17d4bfbaec1d12c90e2a6e3\nDeleted: sha256:fda03119193d4611de17fa3d1eb9f02fb94333ac5d27ca507139a09ba0eaba1d\nDeleted: sha256:04d32bbd70d3d7e3368290157afdfb502799784b7c60d87487e77c7aafd67d2d\nDeleted: sha256:00d0e91fd006a5c96ec790434df1bb4ee545d84b34554ac2fbe5667568f916a1\nDeleted: sha256:4f15baf3c136dbeff8c6f90737f0e54bd641095fd6441e359a1789ccbe554714\nDeleted: sha256:748e3217b5fa76ff3ebd97186a6fcb595b92611ca87f480ea3d622e460c9a212\nDeleted: sha256:c6e34807c2d51444c41c15f4fda65847faa2f43c9b4b976a2f6f476eca7429ce\nazureuser@raghav:~$ docker images\nREPOSITORY   TAG       IMAGE ID   CREATED   SIZE\n</code></pre>"},{"location":"docker/tutorials/pull-push-docker-image-to-private-repository/#pull-the-private-nginxlatest-docker-image-from-your-dockerhub-account-private-repository","title":"Pull the private-nginx:latest docker image from your dockerhub account private repository","text":"<p>Since <code>private-nginx</code> repository is private, make sure you have logged in to docker in local terminal to pull image</p> <pre><code>azureuser@raghav:~$ docker pull devopspilot1/private-nginx:latest\nlatest: Pulling from devopspilot1/private-nginx\n648e0aadf75a: Pull complete \n262696647b70: Pull complete \ne66d0270d23f: Pull complete \n55ac49bd649c: Pull complete \ncbf42f5a00d2: Pull complete \n8015f365966b: Pull complete \n4cadff8bc2aa: Pull complete \nDigest: sha256:73e957703f1266530db0aeac1fd6a3f87c1e59943f4c13eb340bb8521c6041d7\nStatus: Downloaded newer image for devopspilot1/private-nginx:latest\ndocker.io/devopspilot1/private-nginx:latest\nazureuser@raghav:~$ docker images\nREPOSITORY                   TAG       IMAGE ID       CREATED      SIZE\ndevopspilot1/private-nginx   latest    89da1fb6dcb9   2 days ago   187MB\n</code></pre>"},{"location":"docker/tutorials/pull-push-docker-image-to-public-repository/","title":"Pull nginx docker image from dockerhub, tag and push to your public repo in dockerhub account","text":""},{"location":"docker/tutorials/pull-push-docker-image-to-public-repository/#pull-nginx-docker-image-from-dockerhub","title":"Pull nginx docker image from dockerhub","text":"<pre><code>azureuser@raghav:~$ docker pull nginx:latest\nlatest: Pulling from library/nginx\n648e0aadf75a: Pull complete \n262696647b70: Pull complete \ne66d0270d23f: Pull complete \n55ac49bd649c: Pull complete \ncbf42f5a00d2: Pull complete \n8015f365966b: Pull complete \n4cadff8bc2aa: Pull complete \nDigest: sha256:e361ebd7123278ec4b279e1a97237b71b6993600b02843c8b4bf8b6f65cfa3d7\nStatus: Downloaded newer image for nginx:latest\ndocker.io/library/nginx:latest\n</code></pre> <p>Verify docker image is successfully pulled</p> <pre><code>azureuser@raghav:~$ docker images\nREPOSITORY   TAG       IMAGE ID       CREATED        SIZE\nnginx        latest    89da1fb6dcb9   11 hours ago   187MB\n</code></pre>"},{"location":"docker/tutorials/pull-push-docker-image-to-public-repository/#tag-the-docker-image-to-your-dockerhub-username","title":"Tag the docker image to your dockerhub username","text":"<pre><code>azureuser@raghav:~$ docker tag nginx:latest vigneshsweekaran/nginx:latest\nazureuser@raghav:~$ docker images\nREPOSITORY               TAG       IMAGE ID       CREATED        SIZE\nnginx                    latest    89da1fb6dcb9   11 hours ago   187MB\nvigneshsweekaran/nginx   latest    89da1fb6dcb9   11 hours ago   187MB\n</code></pre> <p>The same nginx:latest docker image is tagged to vigneshsweekaran/nginx:latest</p>"},{"location":"docker/tutorials/pull-push-docker-image-to-public-repository/#login-to-dockerhub","title":"Login to dockerhub","text":"<pre><code>azureuser@raghav:~$ docker login\nLogin with your Docker ID to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com to create one.\nUsername: vigneshsweekaran\nPassword: \nWARNING! Your password will be stored unencrypted in /home/azureuser/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n\nLogin Succeeded\n</code></pre>"},{"location":"docker/tutorials/pull-push-docker-image-to-public-repository/#push-docker-image-to-your-dockerhub-account-public-repository","title":"Push docker image to your Dockerhub account public repository","text":"<ul> <li> <p>Repository is automatically created on first push</p> </li> <li> <p>By default, the created repository will be public</p> </li> </ul> <pre><code>azureuser@raghav:~$ docker push vigneshsweekaran/nginx:latest\nThe push refers to repository [docker.io/vigneshsweekaran/nginx]\n922d16116201: Mounted from library/nginx \nabc3beec4b30: Mounted from library/nginx \nc88d3a8ff009: Mounted from library/nginx \n8aedfcd777c7: Mounted from library/nginx \n4deafab383fa: Mounted from library/nginx \n24ee1d7d6a62: Mounted from library/nginx \nc6e34807c2d5: Mounted from library/nginx \nlatest: digest: sha256:73e957703f1266530db0aeac1fd6a3f87c1e59943f4c13eb340bb8521c6041d7 size: 1778\n</code></pre> <p>Now vigneshsweekaran/nginx:latest docker image is pushed to your dockerhub account public repository</p> <p></p>"},{"location":"docker/tutorials/pull-push-docker-image-to-public-repository/#delete-all-the-images-locally","title":"Delete all the images locally","text":"<pre><code>azureuser@raghav:~$ docker images\nREPOSITORY               TAG       IMAGE ID       CREATED        SIZE\nnginx                    latest    89da1fb6dcb9   11 hours ago   187MB\nvigneshsweekaran/nginx   latest    89da1fb6dcb9   11 hours ago   187MB\nazureuser@raghav:~$ docker rmi nginx:latest vigneshsweekaran/nginx:latest\nUntagged: nginx:latest\nUntagged: nginx@sha256:e361ebd7123278ec4b279e1a97237b71b6993600b02843c8b4bf8b6f65cfa3d7\nUntagged: vigneshsweekaran/nginx:latest\nUntagged: vigneshsweekaran/nginx@sha256:73e957703f1266530db0aeac1fd6a3f87c1e59943f4c13eb340bb8521c6041d7\nDeleted: sha256:89da1fb6dcb964dd35c3f41b7b93ffc35eaf20bc61f2e1335fea710a18424287\nDeleted: sha256:e5afcbbf8f223b546a1db3d4f3c83064f346a2a8e17d4bfbaec1d12c90e2a6e3\nDeleted: sha256:fda03119193d4611de17fa3d1eb9f02fb94333ac5d27ca507139a09ba0eaba1d\nDeleted: sha256:04d32bbd70d3d7e3368290157afdfb502799784b7c60d87487e77c7aafd67d2d\nDeleted: sha256:00d0e91fd006a5c96ec790434df1bb4ee545d84b34554ac2fbe5667568f916a1\nDeleted: sha256:4f15baf3c136dbeff8c6f90737f0e54bd641095fd6441e359a1789ccbe554714\nDeleted: sha256:748e3217b5fa76ff3ebd97186a6fcb595b92611ca87f480ea3d622e460c9a212\nDeleted: sha256:c6e34807c2d51444c41c15f4fda65847faa2f43c9b4b976a2f6f476eca7429ce\nazureuser@raghav:~$ docker images\nREPOSITORY   TAG       IMAGE ID   CREATED   SIZE\n</code></pre>"},{"location":"docker/tutorials/pull-push-docker-image-to-public-repository/#logout-the-docker-login-in-local-terminal","title":"Logout the docker login in local terminal","text":"<pre><code>azureuser@raghav:~$ docker logout\nRemoving login credentials for https://index.docker.io/v1/\n</code></pre>"},{"location":"docker/tutorials/pull-push-docker-image-to-public-repository/#pull-the-nginx-docker-image-from-your-dockerhub-account","title":"Pull the nginx docker image from your dockerhub account","text":"<p>Anybody can pull the docker image vigneshsweekaran/nginx:latest since the docker image is pushed to public repository in your dockerhub account</p> <pre><code>azureuser@raghav:~$ docker pull vigneshsweekaran/nginx:latest\nlatest: Pulling from vigneshsweekaran/nginx\n648e0aadf75a: Pull complete \n262696647b70: Pull complete \ne66d0270d23f: Pull complete \n55ac49bd649c: Pull complete \ncbf42f5a00d2: Pull complete \n8015f365966b: Pull complete \n4cadff8bc2aa: Pull complete \nDigest: sha256:73e957703f1266530db0aeac1fd6a3f87c1e59943f4c13eb340bb8521c6041d7\nStatus: Downloaded newer image for vigneshsweekaran/nginx:latest\ndocker.io/vigneshsweekaran/nginx:latest\nazureuser@raghav:~$ docker images\nREPOSITORY               TAG       IMAGE ID       CREATED        SIZE\nvigneshsweekaran/nginx   latest    89da1fb6dcb9   12 hours ago   187MB\n</code></pre>"},{"location":"docker/tutorials/what-is-docker/","title":"What is Docker","text":""},{"location":"docker/tutorials/what-is-docker/#physical-server-to-virtual-machines","title":"Physical server to Virtual Machines","text":"<p>We have a big physical server 512 GB memory and 10TB storage</p> <p>Using <code>hypervisor</code> technology we can create multiple virtual machines from physical server with different capacity</p> <ul> <li> <p>Virtual machine - 1 with memory 4GB, storage 100 GB and operating system Ubuntu 23.04</p> </li> <li> <p>Virtual machine - 2 with memory 4GB, storage 200 GB and operating system Oracle linux 9.2</p> </li> <li> <p>Virtual machine - 3 with memory 16GB, storage 200 GB and operating system windows 11</p> </li> </ul> <p></p>"},{"location":"docker/tutorials/what-is-docker/#virtual-machine-in-detail","title":"Virtual Machine in detail","text":"<p>Here we can see 2 virtual machines are created,</p> <p>Virtual machine - 1 with memory 16GB, storage 200 GB and operating system windows 11. On top of that Java 11, maven 3.6 and Tomcat 9 Web server application is installed</p> <p>Virtual machine - 2 with memory 8GB, storage 100 GB and operating system Ubuntu 23.04. On top of that Java 17, maven 3.8 and Jenkins CI/CD application is installed</p> <p></p>"},{"location":"docker/tutorials/what-is-docker/#why-we-need-to-create-multiple-virtual-machines-from-physical-server","title":"Why we need to create multiple virtual machines from Physical server.","text":"<p>Isolation on Dependencies, application, project, Networking, security</p> <ul> <li> <p>Project-A wants Java 11, Maven 3.6 and Tomcat web server version 8</p> </li> <li> <p>Project-B wants Java 17, Maven 3.8 and Tomcat application version 9</p> </li> <li> <p>Project-C wants NodeJS 20, and Nginx web server version 1.25</p> </li> </ul> <p>Thinking on setting up CI/CD applications</p> <p>You want to set up ci/cd applications like Jenkins, SonarQube, Jfrog artifactory</p> <p>You are using old version of Jenkins application and it will support only on Java 11</p> <p>You are using latest version of SonarQube 10.1 with requires minimum Java 17</p> <p></p>"},{"location":"docker/tutorials/what-is-docker/#where-docker-comes-into-picture-here","title":"Where docker comes into picture here ?","text":"<p>Docker is another isolation within the virtual machine</p> <p>Within the Virtual machine, you can create multiple docker containers, which are isolated from each other.</p> <p>Application dependencies are packaged within the docker container, no need to install in Virtual machine.</p> <p>In virtual machine, only docker needs to be installed</p> <p></p> <p>We can create multiple containers until the capacity of the virtual machine fully utilized</p> <p>Resources(Memory/cpu) in the virtual machine is shared across all containers</p> <p></p>"},{"location":"git/how-to-clone-the-public-repository/","title":"How to clone the github public repository","text":"<p>Go to your repository -&gt; click on code -&gt; make sure https is selected -&gt; copy the url</p> <p></p> <p>In your terminal type git clone and your copied url</p> <p>git clone https://github.com/vigneshsweekaran/firstproject.git</p> <p></p> <p>Now you have successfully cloned the repository to your local computer.</p>"},{"location":"git/how-to-clone-the-public-repository/#youtube","title":"Youtube","text":""},{"location":"git/how-to-create-github-account/","title":"How to create github account","text":""},{"location":"git/how-to-create-github-account/#what-is-git","title":"What is git","text":"<p>GIT stands for Global Information Tracker</p> <p>It is a powerful and widely-used version control system commonly used for software development and other collaborative projects</p> <p></p> <p>The model here is pull and push</p> <p>Lets say, the <code>Developer 1</code> created a file <code>file-1</code> in local computer and pushed to file to <code>Remote repository</code></p> <p>Now the <code>Developer 2</code> and <code>3</code> can pull the <code>file-1</code> from the remote repository to the local computer</p> <p>Similarly, if the <code>Developer 3</code> created a file <code>file-3</code> in local computer and pushed to file to <code>Remote repository</code></p> <p>Now, the other developers can get <code>file-3</code> and all other files from the remote repository to the local computer</p>"},{"location":"git/how-to-create-github-account/#how-to-create-github-account","title":"How to create Github account","text":"<p><code>Github</code> \u2192 Github is a open source platform to store source code in central place (cloud https://github.com)</p> <p><code>Git</code> \u2192 Git is a command line utility, which needs to be installed in your computer to connect to Github.</p> <p>Go to https://github.com</p> <p>Click on <code>Signup</code></p> <p></p> <p>Enter the <code>email id</code>, <code>password</code>, <code>username</code> verify the puzzle and click on <code>Create account</code> then you will recieve verification mail with link in your inbox.</p> <p></p> <p></p> <p></p> <p>Click on the link received on your mail for complete the email verification. Once the email verification is completed, login to https://github.com</p>"},{"location":"git/how-to-create-github-account/#youtube","title":"Youtube","text":""},{"location":"git/how-to-create-private-repository/","title":"How to create private repository","text":""},{"location":"git/how-to-create-private-repository/#how-to-create-private-repository","title":"How to create private repository","text":"<p>Click on <code>new</code></p> <p></p> <p>Give the repository name and click the <code>private</code> check box and <code>Add a Readme file</code> check box</p> <p>Click on <code>Create repository</code></p> <p></p> <p>Next to the repository name, you can see its mentioned as <code>private</code></p> <p></p> <p>For private repository, you need to authenticate to clone the repo.</p> <p>There are two types of authentication,</p> <ul> <li> <p>Using Personal Access Token(PAT)</p> </li> <li> <p>Using SSH public/private keys</p> </li> </ul>"},{"location":"git/how-to-create-private-repository/#how-to-authenticate-using-personal-access-tokenpat","title":"How to authenticate using Personal Access Token(PAT)","text":"<p>Lets generate the token</p>"},{"location":"git/how-to-create-private-repository/#remote-vs-local-repo","title":"Remote vs local repo","text":""},{"location":"git/how-to-create-private-repository/#youtube","title":"Youtube","text":""},{"location":"git/how-to-create-public-repository-in-github/","title":"How to create public repository in github","text":""},{"location":"git/how-to-create-public-repository-in-github/#how-to-create-github-public-repository","title":"How to create Github public repository","text":"<p>After login, click on <code>Create repository</code> to create a first repository in Github.</p> <p>In Github, the repository is used to store the source code files.</p> <p></p> <p>Enter the repository name eg: <code>firstproject</code> and select the repository type as <code>public</code> or <code>private</code></p> <p><code>public</code> \u2192 Anybody can see the repository and its files from github. Anybody can clone you project.</p> <p><code>private</code> \u2192 The repository and its files are only visible to you. Need username and password for cloning.</p> <p></p> <p>Click the check box <code>Add a README file</code></p> <p><code>README.md</code> file is used to tell about your repository, like for what purpose you have created this reposirory.</p> <p></p> <p>The content in your <code>README.md</code> will be shown in your repository home page.</p> <p>Now you have only one file <code>README.md</code> in your repository</p> <p></p>"},{"location":"git/how-to-create-public-repository-in-github/#youtube","title":"Youtube","text":""},{"location":"git/how-to-install-git-in-linux/","title":"How to install git in linux","text":""},{"location":"git/how-to-install-git-in-linux/#how-to-install-git-in-linux-operating-system","title":"How to install git in linux operating system","text":"<p><code>Ubuntu</code> Run the following command to install git in ubuntu operating system</p> <pre><code>sudo apt update\nsudo apt install git\n</code></pre> <p><code>Centos</code> Run the following command to install git in Centos operating system</p> <pre><code>sudo yum update\nsudo yum install git\n</code></pre>"},{"location":"git/how-to-install-git-in-linux/#how-to-check-the-version-of-git","title":"How to check the version of git","text":"<pre><code>git --version\n</code></pre>"},{"location":"git/how-to-install-git-in-linux/#youtube","title":"Youtube","text":""},{"location":"git/how-to-push-the-changes-to-github-repository/","title":"How to push the changes to github repository","text":""},{"location":"git/how-to-push-the-changes-to-github-repository/#how-to-make-the-changes-locally-and-push-to-remote-repository","title":"How to make the changes locally and push to remote repository","text":"<p>Lets clone the repository</p> <pre><code>ubuntu@manikandan:~$ git clone https://github.com/devopspilot2/firstproject.git\nCloning into 'firstproject'...\nremote: Enumerating objects: 3, done.\nremote: Counting objects: 100% (3/3), done.\nremote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0\nReceiving objects: 100% (3/3), done.\nubuntu@manikandan:~$ cd firstproject/\nubuntu@manikandan:~/firstproject$ ll\ntotal 4\n-rw-rw-r-- 1 ubuntu ubuntu 14 Jun  2 23:41 README.md\n</code></pre> <p>In this <code>firstproject</code> repository we have only README.md file</p> <p>Lets create new file <code>hello.txt</code></p> <pre><code>ubuntu@manikandan:~/firstproject$ echo \"Created for git demo\" &gt; hello.txt\nubuntu@manikandan:~/firstproject$ ll\ntotal 8\n-rw-rw-r-- 1 ubuntu ubuntu 14 Jun  2 23:41 README.md\n-rw-rw-r-- 1 ubuntu ubuntu 21 Jun  2 23:42 hello.txt\nubuntu@manikandan:~/firstproject$ cat hello.txt \nCreated for git demo\n</code></pre> <p>Run the <code>git status</code> command to check the status of the file</p> <pre><code>ubuntu@manikandan:~/firstproject$ git status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nUntracked files:\n  (use \"git add &lt;file&gt;...\" to include in what will be committed)\n        hello.txt\n\nnothing added to commit but untracked files present (use \"git add\" to track)\n</code></pre> <p>In the untracked files, its showing the newly created file <code>hello.txt</code></p> <p>which means this file is not tracked by the git for versioning this file.</p> <p>And its suggesting the command <code>git add</code> to track the file</p> <p>Run the <code>git add FILE_NAME</code> command to add the file to git index. So git will track this files for changes.</p> <pre><code>ubuntu@manikandan:~/firstproject$ git add hello.txt \nubuntu@manikandan:~/firstproject$ git status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges to be committed:\n  (use \"git restore --staged &lt;file&gt;...\" to unstage)\n        new file:   hello.txt\n</code></pre> <p>Next run the <code>git status</code> command to check the status.</p> <p>Now it is tracked, next we have to commit this file by giving some meaningful message</p> <p>Run the <code>git commit -m \"Some meaningful message\"</code></p> <pre><code>ubuntu@manikandan:~/firstproject$ git commit -m \"Added hello.txt for git demo\"\nAuthor identity unknown\n\n*** Please tell me who you are.\n\nRun\n\n  git config --global user.email \"you@example.com\"\n  git config --global user.name \"Your Name\"\n\nto set your account's default identity.\nOmit --global to set the identity only in this repository.\n\nfatal: unable to auto-detect email address (got 'ubuntu@manikandan.(none)')\n</code></pre> <p>The command has failed, since the author name and email id is not configured.</p> <p>Whenever you commit the change from this system, git will use this author name and email id.</p> <p>This is a one time activity in one server and it will be stored in a file <code>~/.gitconfig</code></p> <p>To see the details</p> <pre><code>ubuntu@manikandan:~/firstproject$ git config -l --global\nuser.email=devopspilot2@gmail.com\nuser.name=Vignesh Sweekaran\n</code></pre> <p>Or you can directly view the <code>.gitconfig</code> file</p> <pre><code>ubuntu@manikandan:~/firstproject$ cat ~/.gitconfig \n</code></pre> <p>[user]</p> <p>email = devopspilot2@gmail.com name = Vignesh Sweekaran</p> <p>Lets continue the commit, rerun the commit command</p> <pre><code>ubuntu@manikandan:~/firstproject$ git commit -m \"Added hello.txt for git demo\"\n[main d26925d] Added hello.txt for git demo\n 1 file changed, 1 insertion(+)\n create mode 100644 hello.txt\n</code></pre> <p>Now this has successfully committed the changes to local repository</p> <p>To see the commits run the <code>git log</code> command</p> <pre><code>ubuntu@manikandan:~/firstproject$ git log\ncommit d26925de77c593d4ac7dafaa07923d2f4a74f55a (HEAD -&gt; main)\nAuthor: Vignesh Sweekaran &lt;devopspilot2@gmail.com&gt;\nDate:   Sat Jun 3 00:00:53 2023 +0000\n\n    Added hello.txt for git demo\n\ncommit 12664f9c74d52f466c2091515e54d2fa2a184647 (origin/main, origin/HEAD)\nAuthor: devopspilot2 &lt;134018546+devopspilot2@users.noreply.github.com&gt;\nDate:   Mon May 22 18:26:49 2023 +0800\n\n    Initial commit\n</code></pre> <p>In the new commit you can see it has used the username and email id, which you have configured and showing the commit message and timestamp when you did the commit</p> <p>Using this you can easily track, when this change was done, who made this changes.</p> <p>Now its a time to push the changes to Remote repository(Github)</p> <p>Run the command <code>git push origin main</code></p> <p>It will ask for username and password.</p> <p>You cannot use the password, which you used for login to https://github.com You have to generate a Personal Access Token(PAT) from github settings.</p> <p>Click your logo on top right corner and click on <code>settings</code></p> <p></p> <p>Click on <code>Developer settings</code></p> <p></p> <p>Click on <code>Personal access tokens</code> and then <code>Tokens(classic)</code></p> <p></p> <p>Click on <code>Generate token</code> and then <code>Generate new token(classic)</code></p> <p></p> <p>Give the name for token and click the <code>repo</code> check box</p> <p></p> <p>Click on <code>Generate token</code></p> <p></p> <p>The Personal access token(PAT) is shown only one time. Copy and save in secure place</p> <p></p> <p>Enter the username and PAT</p> <pre><code>ubuntu@manikandan:~/firstproject$ git push origin main\nUsername for 'https://github.com': devopspilot2\nPassword for 'https://devopspilot2@github.com': \nEnumerating objects: 4, done.\nCounting objects: 100% (4/4), done.\nDelta compression using up to 2 threads\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 322 bytes | 322.00 KiB/s, done.\nTotal 3 (delta 0), reused 0 (delta 0), pack-reused 0\nTo https://github.com/devopspilot2/firstproject.git\n   12664f9..d26925d  main -&gt; main\n</code></pre> <p>The <code>hello.txt</code> is now pushed to Github</p> <p></p>"},{"location":"git/how-to-push-the-changes-to-github-repository/#how-to-see-the-commits-in-github","title":"How to see the commits in Github","text":"<p>Goto Github <code>firstproject</code> repository and click on <code>commits</code></p> <p></p> <p>Here you can see all the commits pushed</p> <p></p> <p>After clicking on one commit, you can see the changes made in the commit</p> <p></p>"},{"location":"git/how-to-push-the-changes-to-github-repository/#youtube","title":"Youtube","text":""},{"location":"git/tutorials/02-basics/","title":"Git basics","text":""},{"location":"git/tutorials/02-basics/#to-see-files-tracked-in-staging-area","title":"To see files tracked in staging area","text":"<p>git ls-files</p>"},{"location":"git/tutorials/02-basics/#to-undo-the-changes-from-staging-area","title":"To undo the changes from staging area","text":"<p>git reset HEAD filename</p>"},{"location":"git/tutorials/02-basics/#git-log","title":"Git log","text":"<p>git log --oneline --graph --decorate</p> <p>--oneline \u2192 will show the logs in one line for each commit</p> <p>--graph \u2192 show the branch in graph</p> <p>--decorate \u2192 shows the tags and branches</p> <p>git log --since=\"3 days ago\"  (To show logs of last 3 days)</p>"},{"location":"git/tutorials/02-basics/#to-see-commits-happend-in-specific-file","title":"To see commits happend in specific file","text":"<p>git log -- fileame</p>"},{"location":"git/tutorials/02-basics/#to-know-the-diff-from-commit-hash","title":"To know the diff from commit hash","text":"<p>git show commit-hash</p>"},{"location":"git/tutorials/02-basics/#to-set-alias-for-git-commands","title":"To set alias for git commands","text":"<p>git config --global alias.ALIAS_NAME(gitlog) \"log --all --oneline --graph --decorate\"</p>"},{"location":"git/tutorials/02-basics/#excluding-unwanted-files-and-folders","title":"Excluding unwanted files and folders","text":"<p>create .gitignore and commit. we can put our filename, foldername or regular expression to ignore the files</p>"},{"location":"git/tutorials/02-basics/#rebase","title":"Rebase","text":"<p>Create two branch master and feature. do 2 commits in each branch, you are currently in feature and not planning to merge the feature branch commits to master, but instead wants the two commits from master branch to be synced with this feature branch.</p> <p>git rebase master</p>"},{"location":"git/tutorials/02-basics/#git-help","title":"Git help","text":"<p>git help command(pull, push, stash)</p>"},{"location":"git/tutorials/02-basics/#cherry-pick-to-take-one-commit-from-one-branch-and-apply-to-another-branch","title":"Cherry-pick (To take one commit from one branch and apply to another branch)","text":"<p>Create two branch master and feature, do one commit in master, switch to feature do two commits, now you want to take the one commit from feature to master branch and dont want to disturb the feature branch, now switch to the master branch run \"git cherry-pick commit_id\" (commit-id from feature branch)</p>"},{"location":"git/tutorials/02-basics/#to-clone-only-the-single-branch","title":"To clone only the single branch","text":"<p>git clone --single-branch --branch branch_name github_url</p> <p>git clone --single-branch --branch release-1.3 https://github.com/rook/rook.git</p>"},{"location":"git/tutorials/03-branching-merging/","title":"Branching and Merging","text":""},{"location":"git/tutorials/03-branching-merging/#to-list-all-branches-from-local-and-remote","title":"To list all branches from local and remote","text":"<p>git branch -a</p>"},{"location":"git/tutorials/03-branching-merging/#to-list-local-branches","title":"To list local branches","text":"<p>git branch</p>"},{"location":"git/tutorials/03-branching-merging/#to-list-remote-branches","title":"To list remote branches","text":"<p>git branch -r</p>"},{"location":"git/tutorials/03-branching-merging/#to-create-branch","title":"To create branch","text":"<p>git branch new_branch_name parent_branch_name (if parent_branch_name is not passed it will automatically take the current branch name)</p>"},{"location":"git/tutorials/03-branching-merging/#to-change-branch","title":"To change branch","text":"<p>git checkout branch_name</p>"},{"location":"git/tutorials/03-branching-merging/#to-create-branch-and-checkout-to-that-branch","title":"To create branch and checkout to that branch","text":"<p>git checkout -b new_branch_name (This will fail, if we pass existing branch name)</p>"},{"location":"git/tutorials/03-branching-merging/#to-delete-a-local-branch","title":"To delete a local branch","text":"<p>git branch -d branch_name (For deleting a branch, we should change to other branch first)</p> <p>\u2192 The -d option will delete the branch only if it has already been pushed and merged with the remote branch.</p> <p>\u2192 Use -D instead if you want to force the branch to be deleted, even if it hasn't been pushed or merged yet.</p>"},{"location":"git/tutorials/03-branching-merging/#to-see-the-diff-between-braches-before-merging","title":"To see the diff between braches before merging","text":"<p>git diff current_branch_name merging_branching_name</p>"},{"location":"git/tutorials/03-branching-merging/#to-merge-branch-by-default-fast-forward","title":"To merge branch (by default Fast-Forward)","text":"<p>git merge merging_branch_name  (1. Change to the main branch and run the command 2. After merging we can delete that branch)</p> <p>Fast-Forward \u2192 Merges all commits from the source branch into the target merge with exact commit log message (If 3 commits are happend in source_branch, then after merging these 3 commits will be shown in target branch)</p>"},{"location":"git/tutorials/03-branching-merging/#disabling-fast-forward-merge","title":"Disabling Fast-Forward merge","text":"<p>git merge merging_branch_name --no-ff (Then we can delete that branch)</p> <p>No Fast-Forward \u2192 Merges all commits from the source branch into the target branch with exact commit log message (If 3 commits are happend in source branch then after merging these 3 commits will be shown in target branch) + (one more commit with messaage \"merge source branch_name to target branch_name\").</p> <p>The source branch will be preserved (we can see in git log --decorate --graph --oneline)</p>"},{"location":"git/tutorials/03-branching-merging/#also-called-as-automatic-mergeif-we-create-new-branch-and-created-3-commits-and-also-in-the-main-branch-2-commits-are-happend-now-if-you-switch-to-main-branch-and-run-git-merge-source-branch_name-by-default-fast-forward-will-be-disabled","title":"(Also called as Automatic Merge)If we create new branch and created 3 commits and also in the main branch 2 commits are happend. Now if you switch to main branch and run \"git merge source branch_name\" by default Fast-Forward will be disabled","text":""},{"location":"git/tutorials/03-branching-merging/#merge-conflit","title":"Merge Conflit","text":"<p>Changed and committed the changes in source branch and then changed to target branch, changed the same file in same line and commited the changes, now try merging, merge conflict will come, since two chnages are there in the same line, we have to manually edit the changes, add and commit.</p>"},{"location":"git/tutorials/03-branching-merging/#to-see-the-branches-merged-to-the-current-branch","title":"To see the branches merged to the current branch","text":"<p>git branch --merged</p>"},{"location":"git/tutorials/03-branching-merging/#to-see-what-are-all-the-branches-not-merged-to-the-current-branch","title":"To see what are all the branches not merged to the current branch","text":"<p>git branch --no-merged</p>"},{"location":"git/tutorials/03-branching-merging/#to-delete-a-remote-branch-from-terminal","title":"To Delete a remote branch from terminal","text":"<p>git push origin --delete branch_name</p>"},{"location":"git/tutorials/04-pull_fetch/","title":"Difference between Pull vs Fetch","text":""},{"location":"git/tutorials/04-pull_fetch/#reference","title":"Reference","text":"<ul> <li> <p>https://www.atlassian.com/git/tutorials/syncing/git-pull#:~:text=The%20git%20pull%20command%20is,Git%2Dbased%20collaboration%20work%20flows.</p> </li> <li> <p>Git Pull The git pull command is used to fetch and download content from a remote repository and immediately update the local repository to match that content. </p> </li> </ul> <p>Merging remote upstream changes into your local repository is a common task in Git-based collaboration work flows. </p> <p>The git pull command is actually a combination of two other commands, git fetch followed by git merge. </p> <p>In the first stage of operation git pull will execute a git fetch scoped to the local branch that HEAD is pointed at. </p> <p>Once the content is downloaded, git pull will enter a merge workflow. A new merge commit will be-created and HEAD updated to point at the new commit.</p> <p>git pull  \u2192 will do git fetch and git merge to local repository it will create a new commit after the commits in the local branch <p>git pull --rebase \u2192 It will fetch the commits from the remote repository and add those commits before the commits in the local branch</p> <p>git fetch will download the remote content and not alter the state of the local repository.</p>"},{"location":"git/tutorials/04-pull_fetch/#to-configure-git-pull-with-rebase-by-default-instaed-of-merge","title":"To configure git pull with rebase by default instaed of merge","text":"<p><pre><code>git config --global branch.autosetuprebase always\n</code></pre> After running that command, all git pull commands will integrate via git rebase instead of git merge.</p>"},{"location":"git/tutorials/05-reset/","title":"Git reset","text":""},{"location":"git/tutorials/05-reset/#to-reset-one-top-local-commit-this-will-only-remove-the-commits-and-the-chnages-are-still-shown-in-local-repository-we-have-to-manaually-remove-the-changes","title":"To reset one top local commit (This will only remove the commits and the chnages are still shown in local repository, we have to manaually remove the changes)","text":"<p>git reset HEAD^1 OR git reset HEAD^</p>"},{"location":"git/tutorials/05-reset/#to-reset-top-two-commits","title":"To reset top two commits","text":"<p>git reset HEAD^^</p>"},{"location":"git/tutorials/05-reset/#to-see-the-recently-executed-git-commandslast-60-days","title":"To see the recently executed git commands(last 60 days)","text":"<p>git reflog</p>"},{"location":"git/tutorials/05-reset/#to-go-back-to-the-commits-from-reflog-which-was-removedreset-earlier-or-back-offing-commits","title":"To go back to the commits from reflog which was removed(reset) earlier  OR back-offing commits","text":"<p>git reset commit_id (commit_is is taken from reflog)</p> <p>OR</p> <p>git reset HEAD@{index_no} (index_no from reflog)</p>"},{"location":"git/tutorials/05-reset/#to-reset-the-commit-and-remove-the-chnages","title":"To reset the commit and remove the chnages","text":"<p>git reset --hard HEAD^</p>"},{"location":"git/tutorials/06-tags/","title":"How to create, list and delete Tag","text":"<p>Tag (Its just a label or marker)</p>"},{"location":"git/tutorials/06-tags/#to-create-a-lightweight-tag","title":"To create a lightweight tag","text":"<p>git tag tag_name</p>"},{"location":"git/tutorials/06-tags/#to-list-all-tag-names","title":"To list all tag names","text":"<p>git tag --list  (we have to pass -- before list or lese it will create a tag with name \"list\")</p>"},{"location":"git/tutorials/06-tags/#to-see-the-commit-at-that-tag","title":"To see the commit at that tag","text":"<p>git show tag_name</p>"},{"location":"git/tutorials/06-tags/#to-delete-a-tag","title":"To delete a tag","text":"<p>git tag --delete tag_name</p>"},{"location":"git/tutorials/06-tags/#annotated-tags-which-means-a-tag-with-message","title":"Annotated tags (which means a tag with message)","text":"<p>-a \u2192 annotated tag <pre><code>git tag -a tag_name --&gt; enter --&gt; we have to write the message in text editor and close\n</code></pre> OR  <pre><code>git tag tag_name -m \"message\"\n</code></pre></p>"},{"location":"git/tutorials/06-tags/#to-compare-two-tags","title":"To compare two tags","text":"<p>git diff first_tag_name second_tag_name</p>"},{"location":"git/tutorials/06-tags/#tagging-a-specific-commit","title":"Tagging a specific commit","text":"<p>git tag -a tag_name commid_id</p>"},{"location":"git/tutorials/06-tags/#updating-the-tag-from-one-commit-to-another","title":"Updating the tag from one commit to another","text":"<p><pre><code>git tag -a tag_name new_commit_is -f\n</code></pre> OR we can delete the tag and create the tag with new commid id</p>"},{"location":"git/tutorials/06-tags/#to-push-one-specific-tag-to-remote-repository","title":"To push one specific tag to remote repository","text":"<p>git push origin tag_name  (The commits associated with that tags will alos be pushed)</p>"},{"location":"git/tutorials/06-tags/#to-push-all-tags-to-remore-repository","title":"To push all tags to remore repository","text":"<p>git push origin branch_name --tags</p>"},{"location":"git/tutorials/06-tags/#to-delete-particular-tag-in-remote-repository","title":"To delete particular tag in remote repository","text":"<p>git push origin :tag_name</p>"},{"location":"git/tutorials/07-stash/","title":"How to create, list and delete Stash","text":"<p>In the current branch we have done some changes in the file and we havent committed those changes, now you want to work on some other idea, but you want to save this changes for future purpose, we can save this chnages locally using stash. </p> <p>Run \"git stash\" and the current branch will become clean and all the chnages what you amd will be stored locally in temporary space.</p> <p>git stash or git stash save (By default if we run git stash it will append the \"save\" keyword to it )</p> <p><pre><code>git stash\n</code></pre> </p> <p><pre><code>git stash save\n</code></pre> </p>"},{"location":"git/tutorials/07-stash/#create-a-stash-with-message","title":"Create a stash with message","text":"<p><pre><code>git stash save \"message\"\n</code></pre> </p>"},{"location":"git/tutorials/07-stash/#to-list-the-stash","title":"To list the stash","text":"<p><pre><code>git stash list\n</code></pre> </p>"},{"location":"git/tutorials/07-stash/#to-apply-the-stash-to-the-current-branch","title":"To apply the stash to the current branch","text":"<p><pre><code>git stash apply\n</code></pre> </p>"},{"location":"git/tutorials/07-stash/#to-apply-the-specific-stash-from-stash-list","title":"To apply the specific stash from stash list","text":"<p><pre><code>git stash apply stash@{index_no}\n</code></pre> </p>"},{"location":"git/tutorials/07-stash/#to-stash-both-tracked-and-untracked-files","title":"To stash both tracked and untracked files","text":"<p>If we do some chnages in the tracked file and also in one untacked file (new file). If we run git stash now, it will only stash the tracked files, it wont stash the untracked files <pre><code>git stash -u                --&gt; to stash both tracked and untracked files\n</code></pre> </p> <p>Other Option : we can add the untracked file and run \"git stash\" also</p>"},{"location":"git/tutorials/07-stash/#to-do-git-stash-apply-and-git-stash-drop-in-a-single-command","title":"To do git stash apply and git stash drop in a single command","text":"<p><pre><code>git stash pop\n</code></pre> </p>"},{"location":"git/tutorials/07-stash/#to-know-the-file-changes-in-stash","title":"To know the file changes in stash","text":"<p><pre><code>git stash show stash@{index_no}\n</code></pre> latest stash will be assigned with index no '0' </p>"},{"location":"git/tutorials/07-stash/#to-take-stash-changes-from-one-branch-to-another-new-branch","title":"To take stash changes from one branch to another new branch","text":"<p>First stash the files/changes in the current branch</p> <p>Then exceute the following command, it will automatically create a new branch, switch to that branch and take all the changes from the top stash to that branch and that stash will be dropped from the stash list <pre><code>git stash branch new_branch_name\n</code></pre> </p>"},{"location":"git/tutorials/07-stash/#to-take-specific-stash-changes-from-one-branch-to-another-new-branch","title":"To take specific stash changes from one branch to another new branch","text":"<p><pre><code>git stash branch new_branch_name stash@{index_no}\n</code></pre> </p>"},{"location":"git/tutorials/07-stash/#to-drop-the-latest-stash-from-list","title":"To drop the latest stash from list","text":"<p><pre><code>git stash drop\n</code></pre> </p>"},{"location":"git/tutorials/07-stash/#to-drop-the-stash-from-stash-list-using-stash-index-number","title":"To drop the stash from stash list using stash index number","text":"<p><pre><code>git stash drop stash@{0}\n</code></pre> </p>"},{"location":"git/tutorials/07-stash/#to-drop-all-stashes-from-list-in-one-shot","title":"To drop all stashes from list in one shot","text":"<p><pre><code>git stash clear\n</code></pre> </p>"},{"location":"git/tutorials/08-issues-faced/","title":"Common Issues in Git","text":"<ol> <li> <p>File permissions in Git bash is different from gerrit remote repo     Check the existing remote file permissions with the following command:     <pre><code>git ls-files --stage\n</code></pre>     Which should return something like 100644</p> <p>Update the permissions with the following command <pre><code>git update-index --chmod=+x 'name-of-shell-script'\n</code></pre> Check the file permission again <pre><code>git ls-files --stage \n</code></pre> Which should return something like 100755</p> <p>Commit changes and push!</p> </li> </ol>"},{"location":"git/tutorials/08-issues-faced/#commonly-faced-issues","title":"Commonly faced Issues","text":""},{"location":"git/tutorials/09-how-to-fix-merge-conflict/","title":"How to Fix Merge Conflicts","text":""},{"location":"git/tutorials/09-how-to-fix-merge-conflict/#how-to-fix-merge-conflict-during-git-pull","title":"How to fix merge conflict during git pull","text":""},{"location":"git/tutorials/09-how-to-fix-merge-conflict/#reference","title":"Reference","text":"<ul> <li>How to create repository in Github</li> </ul>"},{"location":"git/tutorials/09-how-to-fix-merge-conflict/#what-is-merge-conflict","title":"What is Merge Conflict ?","text":"<p>When some changes are done in same line and same file by two engineers, conflict will occur while merging.</p> <p>This is because git is not able to conclude which changes to take.</p> <p>We have to explicitly tell git, which changes it should take to fix the conflict.</p>"},{"location":"git/tutorials/09-how-to-fix-merge-conflict/#what-is-git-pull","title":"What is git pull?","text":"<p>Git pull basically executes two commands git fetch and git merge.</p> <p>Downloads the latest changes from Github(remote repository) and merge to local repository</p>"},{"location":"git/tutorials/09-how-to-fix-merge-conflict/#lets-create-a-conflict-and-fix-it","title":"Lets create a conflict and fix it","text":"<p>First create a repository called <code>mergeconflict</code> in github</p> <p></p> <p>Clone the repo to your system <pre><code>git clone https://github.com/vigneshsweekaran/mergeconflict.git\n</code></pre> </p> <p>Then create a file called <code>cat.txt</code> and paste the following content <pre><code>1. In terms of development, the first year of a cat\u2019s life is equal to the first 15 years of a human life. After its second year, a cat is 25 in human years. And after that, each year of a cat\u2019s life is equal to about 7 human years.\n2. Cats can rotate their ears 180 degrees.\n3. The hearing of the average cat is at least five times keener than that of a human adult.\n4. In the largest cat breed, the average male weighs approximately 20 pounds.\n5. Domestic cats spend about 70 percent of the day sleeping. And 15 percent of the day grooming.\n</code></pre></p> <p>Commit and push the changes to github</p> <p>After pushing the changes, update the <code>cat.txt</code> in line no 2, Change the angle <code>180</code> to <code>150</code> in your local system</p> <p>Commit the changes locally and don't push your changes</p> <p></p> <p>Assume one more Developer changed the angle to 200 and pushed to <code>master</code> branch</p> <p>Lets create this scenario, go to github, edit the <code>cat.txt</code> file and change the angle from <code>180</code> to <code>200</code> and commit the changes from Github UI</p> <p></p> <p></p> <p>Be clear, till now we haven't pushed our local change(angle 150) to github</p> <p>Check your local commits once <pre><code>git log\n</code></pre> </p> <p>Lets pull the latest changes from Github to local repository <pre><code>git pull origin master\n</code></pre> </p> <p>Now we can see the git pull has failed, basically auto-merging failed.</p> <p>This is because, we have updated angle to 150 in line no 2 in cat.txt, similary one more developer has updated the angle to 200 in line no 2 in cat.txt and pushed the changes to github.</p> <p>While we are pulling, git tries to merge the line no 2 from remote cat.txt to local cat.txt file in line 2, but it is not able to update, because local cat.txt also has new changes(150).</p> <p>So its not able to apply the new changes and it failed</p> <p>Now you have to decide, which change you need, manually fix the conflict.</p> <p>I want to keep angle as 200. Lets open the file and see how it looks, now the file will have both remote and local changes</p> <p></p> <p>After fixing the conflict, file looks as below</p> <p></p> <p>Add the <code>cat.txt</code> and run <code>git commit</code> <pre><code>git add cat.txt\ngit commit\n</code></pre> </p> <p>Now check the commit logs </p> <p>Finally push your changes to Github <pre><code>git push origin master\n</code></pre></p>"},{"location":"git/tutorials/10-how-to-create-pull-request-in-github/","title":"How to Create Pull Request in GitHub","text":""},{"location":"git/tutorials/10-how-to-create-pull-request-in-github/#how-to-create-pull-request-in-github","title":"How to create Pull Request in Github","text":""},{"location":"git/tutorials/10-how-to-create-pull-request-in-github/#reference","title":"Reference","text":"<ul> <li>How to create repository in Github</li> </ul>"},{"location":"git/tutorials/10-how-to-create-pull-request-in-github/#what-is-pull-request","title":"What is Pull Request","text":"<p>Pull Request is way of merging two branches from Github UI.</p> <p>It has lot of other features like, * Code approval * Code discussion * Viewing file changes * Deleting the source merge once merge is Done * Block the Merge, till your pipeline passed in feature branch. * Automatic Merge, when pipeline is succeeded in feature branch.</p> <p>It is also called as Merge Request in GitLab</p>"},{"location":"git/tutorials/10-how-to-create-pull-request-in-github/#create-pull-request","title":"Create Pull Request","text":"<p>Create a repo called <code>pullrequest</code></p> <p>Then create a file called <code>cat.txt</code> and paste the following content, <pre><code>1. In terms of development, the first year of a cat\u2019s life is equal to the first 15 years of a human life. After its second year, a cat is 25 in human years. And after that, each year of a cat\u2019s life is equal to about 7 human years.\n2. Cats can rotate their ears 180 degrees.\n3. The hearing of the average cat is at least five times keener than that of a human adult.\n4. In the largest cat breed, the average male weighs approximately 20 pounds.\n5. Domestic cats spend about 70 percent of the day sleeping. And 15 percent of the day grooming.\n</code></pre></p> <p></p> <p></p> <p>Create a new branch called <code>feature</code></p> <p></p> <p>Add one more line in cat.txt in <code>feature</code> branch <pre><code>1. In terms of development, the first year of a cat\u2019s life is equal to the first 15 years of a human life. After its second year, a cat is 25 in human years. And after that, each year of a cat\u2019s life is equal to about 7 human years.\n2. Cats can rotate their ears 180 degrees.\n3. The hearing of the average cat is at least five times keener than that of a human adult.\n4. In the largest cat breed, the average male weighs approximately 20 pounds.\n5. Domestic cats spend about 70 percent of the day sleeping. And 15 percent of the day grooming.\n6. I like cats\n</code></pre></p> <p></p> <p>After pushing your changes, you can see one Notification <code>Compare &amp; pull request</code></p> <p>Click on <code>Compare &amp; pull request</code></p> <p></p> <p>Verify the source branch and target branch</p> <p></p> <p>Scroll down and see the file changes and click on <code>Create pull request</code></p> <p></p> <p>Now pull request is created and it is in <code>open</code> state</p> <p>If you need some more changes in that file, you can add those as a comment, so that devlopers will be notified and they will fix and push the new changes to <code>feature</code> branch and it will reflect in the same Pull request.</p> <p>Click on <code>Merge pull request</code> \u2192 <code>Confirm merge</code></p> <p></p> <p></p> <p>Now you can go to <code>master</code> branch and  see the merged changes.</p> <p></p>"},{"location":"git/tutorials/11-how-to-fix-merge-conflict-in-pull-request/","title":"How to fix merge conflict in Pull Request","text":""},{"location":"git/tutorials/11-how-to-fix-merge-conflict-in-pull-request/#reference","title":"Reference","text":"<ul> <li>How to create repository in Github</li> <li>How to create pull request in Github</li> </ul>"},{"location":"git/tutorials/11-how-to-fix-merge-conflict-in-pull-request/#create-pull-request","title":"Create Pull Request","text":"<p>Create a repository called <code>pullrequest-conflict</code></p> <p>Then create a file called <code>cat.txt</code> and paste the following content, <pre><code>1. In terms of development, the first year of a cat\u2019s life is equal to the first 15 years of a human life. After its second year, a cat is 25 in human years. And after that, each year of a cat\u2019s life is equal to about 7 human years.\n2. Cats can rotate their ears 180 degrees.\n3. The hearing of the average cat is at least five times keener than that of a human adult.\n4. In the largest cat breed, the average male weighs approximately 20 pounds.\n5. Domestic cats spend about 70 percent of the day sleeping. And 15 percent of the day grooming.\n</code></pre></p> <p></p> <p>Create a new branch called <code>feature</code> </p> <p>Change the angle to <code>150</code> in second line of cat.txt in <code>feature</code> branch</p> <p></p> <p>Assume, one more Developer has updated the angle to <code>200</code> in cat.txt raised the pull request and merged to <code>master</code> branch.</p> <p>Lets create this scenario, go to github, change the branch to <code>master</code> edit the <code>cat.txt</code> file and change the angle from <code>180</code> to <code>200</code> and commit the changes from Github UI</p> <p></p> <p>Now create a pull request from <code>feature</code> to <code>master</code> branch and you will see merge conflict</p> <p>Click on <code>Pull Requests</code> tab and then click on <code>compare &amp; pull request</code></p> <p></p> <p>Github clearly showing, it has conflict and it cannot merge automatically</p> <p></p> <p>This is because, we have updated angle to 150 in cat.txt in <code>feature</code> branch, similary one more developer has updated the angle to 200 in in cat.txt in <code>master</code> branch and pushed the changes to github.</p> <p>While we are creating the pull request, git executes the dry-run to merge the line no 2 from remote cat.txt in <code>feature</code> branch to cat.txt file in <code>master</code> branch , but it is not able to merge, because cat.txt in <code>master</code> branch also has new changes(200).</p> <p>Lets complete the pull request creation and then we will fix the conflict.</p> <p>Click on <code>Create pull request</code> </p> <p></p> <p>To fix the conflict, clone the repository to local system, switch to <code>feature</code> branch</p> <pre><code>git clone https://github.com/vigneshsweekaran/pullrequest-conflict.git\ncd pullrequest-conflict\ngit checkout feature\n</code></pre> <p></p> <p>Be clear, currently we are in <code>feature</code> branch.</p> <p>Pull the changes from <code>master</code> to fix the conflict <pre><code>git pull origin master\n</code></pre></p> <p>We are trying to take the latest changes from <code>master</code> branch, so that we can clearly merge the <code>feature</code> branch to <code>master</code> branch.</p> <p></p> <p>It has conflict, so automatic merge has failed.</p> <p></p> <p>Update the cat.txt according to your need, I want to keep angle as <code>150</code></p> <p></p> <p>Add and commit the Fix. <pre><code>git add .\ngit commit\n</code></pre></p> <p></p> <p>Check the commit logs, <pre><code>git log\n</code></pre></p> <p></p> <p>Lets push the latest commit to <code>feature</code> branch, <pre><code>git push origin feature\n</code></pre> </p> <p>Go to Github click on <code>Pull requests</code> tab. Click on created pull request.</p> <p>Now we can see, the lastest push to <code>feature</code> branch has been updated here and conflict has been fixed now.</p> <p>Click on <code>Merge pull request</code> \u2192 <code>Confirm merge</code> to merge the <code>feature</code> branch with <code>master</code> branch</p> <p></p> <p></p>"},{"location":"git/tutorials/11-how-to-fix-merge-conflict-in-pull-request/#how-to-fix-pull-request-conflict-from-github-ui-itself","title":"How to fix pull request conflict from Github UI itself","text":"<p>Create a new pull request with merge conflict and Click on <code>Resolve conflicts</code></p> <p></p> <p></p> <p>Fix the conflict and click on <code>Mark as resolved</code></p> <p></p> <p>Click on <code>Commit merge</code></p> <p></p> <p>Click on <code>Merge pull request</code> \u2192 <code>Confirm merge</code></p> <p></p> <p></p>"},{"location":"git/tutorials/12-rebase/","title":"What is git rebase and how to use it","text":"<p>Git rebase is used to synchronize your current bramch with the target-branch / created-branch / any-branch</p> <p>In current branch, the commits comming from target-branch will be kept below the commits done in the current branch.</p> <p>Pros:</p> <ul> <li>Used to reduce one merge commit and have cleaner commit history</li> </ul>"},{"location":"git/tutorials/12-rebase/#example","title":"Example","text":"<p>Lets create a branch called <code>feature-1</code> from <code>dev</code> branch and do two commits in <code>feature-1</code> branch </p> <p></p> <p></p> <p>Go to <code>dev</code> branch and do two commits there</p> <p></p> <p></p> <p>Now go to <code>feature-1</code> branch and run rebase command to bring <code>dev</code> commits below the commits in <code>feature-1</code> branch <pre><code>git rebase dev\n</code></pre></p> <p></p> <p>If you are pushing the <code>feature-1</code> branch for first time then no issue, simple <code>git push origin feature-1</code> should work</p> <p></p> <p>If you have already pushed <code>feature-1</code> branch with some commits and now if you are trying to push it may fail, since we have altered the commit history, we have the push the branch forcefully</p> <pre><code>git push origin feature-1 -f\n</code></pre> <p>Note: You should use git rebase very carefully, since it alters the commit history </p>"},{"location":"git/tutorials/interview_questions/","title":"Git Interview Questions","text":""},{"location":"git/tutorials/interview_questions/#difference-between-git-merge-and-git-rebase","title":"Difference between git merge and git rebase","text":""},{"location":"git/tutorials/interview_questions/#difference-between-git-fetch-and-git-pull","title":"Difference between git fetch and git pull","text":""},{"location":"git/tutorials/interview_questions/#if-you-run-git-pull-whether-it-will-fetch-all-branches","title":"If you run git pull, whether it will fetch all branches ?","text":""},{"location":"git/tutorials/interview_questions/#while-doing-the-git-pull-how-do-you-rebase","title":"While doing the git pull how do you rebase ?","text":""},{"location":"git/tutorials/interview_questions/#how-do-you-do-the-merge-of-feature-branch-and-from-which-branch","title":"How do you do the merge of feature branch and from which branch ?","text":"<p>switch to the merging branch(base branch from where the feature branch was created, mostly master branch), then run <code>git merge feature(branch_name)</code></p>"},{"location":"git/tutorials/interview_questions/#after-merging-whether-it-will-create-a-seperate-commit","title":"After merging whether it will create a seperate commit ?","text":"<p>If there is no commits in the merging branch(from the point the feature branch was created or from the last merge from the same branch), it wont create a new commit(commits from feature branch will be merged to master branch), which is called fast-forward merging.</p> <p>If commits happend in the merging branch, then while merging it will create additional one commit(commits from feature branch + one additional commit for merging) This is referred as 3-way-merge.</p> <p>http://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging</p>"},{"location":"git/tutorials/interview_questions/#how-to-recover-a-deleted-branch-using-sha-value","title":"How to recover a deleted branch using sha value","text":""},{"location":"git/tutorials/interview_questions/#how-to-drop-a-stash-created","title":"How to drop a stash created","text":"<p>git stash drop</p>"},{"location":"git/tutorials/part-1/","title":"Part 1","text":""},{"location":"git/tutorials/part-1/#git","title":"GIT","text":""},{"location":"git/tutorials/part-1/#youtube","title":"Youtube","text":""},{"location":"git/tutorials/part-1/#topics","title":"Topics","text":"<ul> <li>What is git</li> <li>How to create Github account</li> <li>How to create Github public repository</li> <li>How to install git in linux operating system(Ubuntu)</li> <li>How to clone(download) the repository from Github to local computer</li> </ul>"},{"location":"git/tutorials/part-1/#what-is-git","title":"What is git","text":"<p>GIT stands for Global Information Tracker</p> <p>It is a powerful and widely-used version control system commonly used for software development and other collaborative projects</p> <p></p> <p>The model here is pull and push</p> <p>Lets say, the <code>Developer 1</code> created a file <code>file-1</code> in local computer and pushed to file to <code>Remote repository</code></p> <p>Now the <code>Developer 2</code> and <code>3</code> can pull the <code>file-1</code> from the remote repository to the local computer</p> <p>Similarly, if the <code>Developer 3</code> created a file <code>file-3</code> in local computer and pushed to file to <code>Remote repository</code></p> <p>Now, the other developers can get <code>file-3</code> and all other files from the remote repository to the local computer</p>"},{"location":"git/tutorials/part-1/#how-to-create-github-account","title":"How to create Github account","text":"<p><code>Github</code> \u2192 Github is a open source platform to store source code in central place (cloud https://github.com) </p> <p><code>Git</code> \u2192 Git is a command line utility, which needs to be installed in your computer to connect to Github.</p> <p>Go to https://github.com</p> <p>Click on <code>Signup</code> </p> <p>Enter the <code>email id</code>, <code>password</code>, <code>username</code> verify the puzzle and click on <code>Create account</code> then you will recieve verification mail with link in your inbox.</p> <p></p> <p></p> <p></p> <p>Click on the link received on your mail for complete the email verification. Once the email verification is completed, login to https://github.com</p>"},{"location":"git/tutorials/part-1/#how-to-create-github-public-repository","title":"How to create Github public repository","text":"<p>After login, click on <code>Create repository</code> to create a first repository in Github.</p> <p>In Github, the repository is used to store the source code files.</p> <p></p> <p>Enter the repository name eg: <code>firstproject</code> and select the repository type as <code>public</code> or <code>private</code></p> <p><code>public</code> \u2192 Anybody can see the repository and its files from github. Anybody can clone you project.</p> <p><code>private</code> \u2192 The repository and its files are only visible to you. Need username and password for cloning. </p> <p></p> <p>Click the check box <code>Add a README file</code></p> <p><code>README.md</code> file is used to tell about your repository, like for what purpose you have created this reposirory.</p> <p></p> <p>The content in your <code>README.md</code> will be shown in your repository home page.</p> <p>Now you have only one file <code>README.md</code> in your repository</p> <p></p>"},{"location":"git/tutorials/part-1/#how-to-install-git-in-linux-operating-system","title":"How to install git in linux operating system","text":"<p><code>Ubuntu</code> Run the following command to install git in ubuntu operating system <pre><code>sudo apt update\nsudo apt install git\n</code></pre></p> <p><code>Centos</code> Run the following command to install git in Centos operating system <pre><code>sudo yum update\nsudo yum install git\n</code></pre></p>"},{"location":"git/tutorials/part-1/#how-to-check-the-version-of-git","title":"How to check the version of git","text":"<pre><code>git --version\n</code></pre>"},{"location":"git/tutorials/part-1/#how-to-clonedownload-the-repository-from-github-to-local-computer","title":"How to clone(download) the repository from Github to local computer","text":"<p>Go to your repository \u2192 click on <code>code</code> \u2192 make sure <code>https</code> is selected \u2192 copy the url</p> <p></p> <p>In your terminal type  <code>git clone</code> and your copied url <pre><code>git clone https://github.com/vigneshsweekaran/firstproject.git\n</code></pre></p> <p></p> <p>Now we have successfully created the repository in github and cloned that repository to our local computer.</p>"},{"location":"git/tutorials/part-1/#how-to-make-the-changes-locally-and-push-to-remote-repository","title":"How to make the changes locally and push to remote repository","text":"<p>Lets clone the repository <pre><code>ubuntu@manikandan:~$ git clone https://github.com/devopspilot2/firstproject.git\nCloning into 'firstproject'...\nremote: Enumerating objects: 3, done.\nremote: Counting objects: 100% (3/3), done.\nremote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0\nReceiving objects: 100% (3/3), done.\nubuntu@manikandan:~$ cd firstproject/\nubuntu@manikandan:~/firstproject$ ll\ntotal 4\n-rw-rw-r-- 1 ubuntu ubuntu 14 Jun  2 23:41 README.md\n</code></pre></p> <p>In this <code>firstproject</code> repository we have only README.md file</p> <p>Lets create new file <code>hello.txt</code> <pre><code>ubuntu@manikandan:~/firstproject$ echo \"Created for git demo\" &gt; hello.txt\nubuntu@manikandan:~/firstproject$ ll\ntotal 8\n-rw-rw-r-- 1 ubuntu ubuntu 14 Jun  2 23:41 README.md\n-rw-rw-r-- 1 ubuntu ubuntu 21 Jun  2 23:42 hello.txt\nubuntu@manikandan:~/firstproject$ cat hello.txt \nCreated for git demo\n</code></pre></p> <p>Run the <code>git status</code> command to check the status of the file <pre><code>ubuntu@manikandan:~/firstproject$ git status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nUntracked files:\n  (use \"git add &lt;file&gt;...\" to include in what will be committed)\n        hello.txt\n\nnothing added to commit but untracked files present (use \"git add\" to track)\n</code></pre></p> <p>In the untracked files, its showing the newly created file <code>hello.txt</code></p> <p>which means this file is not tracked by the git for versioning this file.</p> <p>And its suggesting the command <code>git add</code> to track the file</p> <p>Run the <code>git add FILE_NAME</code> command to add the file to git index. So git will track this files for changes.</p> <pre><code>ubuntu@manikandan:~/firstproject$ git add hello.txt \nubuntu@manikandan:~/firstproject$ git status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges to be committed:\n  (use \"git restore --staged &lt;file&gt;...\" to unstage)\n        new file:   hello.txt\n</code></pre> <p>Next run the <code>git status</code> command to check the status.</p> <p>Now it is tracked, next we have to commit this file by giving some meaningful message</p> <p>Run the <code>git commit -m \"Some meaningful message\"</code></p> <pre><code>ubuntu@manikandan:~/firstproject$ git commit -m \"Added hello.txt for git demo\"\nAuthor identity unknown\n\n*** Please tell me who you are.\n\nRun\n\n  git config --global user.email \"you@example.com\"\n  git config --global user.name \"Your Name\"\n\nto set your account's default identity.\nOmit --global to set the identity only in this repository.\n\nfatal: unable to auto-detect email address (got 'ubuntu@manikandan.(none)')\n</code></pre> <p>The command has failed, since the author name and email id is not configured.</p> <p>Whenever you commit the change from this system, git will use this author name and email id.</p> <p>This is a one time activity in one server and it will be stored in a file <code>~/.gitconfig</code></p> <p>To see the details <pre><code>ubuntu@manikandan:~/firstproject$ git config -l --global\nuser.email=devopspilot2@gmail.com\nuser.name=Vignesh Sweekaran\n</code></pre></p> <p>Or you can directly view the <code>.gitconfig</code> file <pre><code>ubuntu@manikandan:~/firstproject$ cat ~/.gitconfig \n[user]\n        email = devopspilot2@gmail.com\n        name = Vignesh Sweekaran\n</code></pre></p> <p>Lets continue the commit, rerun the commit command <pre><code>ubuntu@manikandan:~/firstproject$ git commit -m \"Added hello.txt for git demo\"\n[main d26925d] Added hello.txt for git demo\n 1 file changed, 1 insertion(+)\n create mode 100644 hello.txt\n</code></pre></p> <p>Now this has successfully committed the changes to local repository</p> <p>To see the commits run the <code>git log</code> command <pre><code>ubuntu@manikandan:~/firstproject$ git log\ncommit d26925de77c593d4ac7dafaa07923d2f4a74f55a (HEAD -&gt; main)\nAuthor: Vignesh Sweekaran &lt;devopspilot2@gmail.com&gt;\nDate:   Sat Jun 3 00:00:53 2023 +0000\n\n    Added hello.txt for git demo\n\ncommit 12664f9c74d52f466c2091515e54d2fa2a184647 (origin/main, origin/HEAD)\nAuthor: devopspilot2 &lt;134018546+devopspilot2@users.noreply.github.com&gt;\nDate:   Mon May 22 18:26:49 2023 +0800\n\n    Initial commit\n</code></pre></p> <p>In the new commit you can see it has used the username and email id, which you have configured and showing the commit message and timestamp when you did the commit</p> <p>Using this you can easily track, when this change was done, who made this changes.</p> <p>Now its a time to push the changes to Remote repository(Github)</p> <p>Run the command <code>git push origin main</code></p> <p>It will ask for username and password.</p> <p>You cannot use the password, which you used for login to https://github.com You have to generate a Personal Access Token(PAT) from github settings.</p> <p>Click your logo on top right corner and click on <code>settings</code> </p> <p>Click on <code>Developer settings</code> </p> <p>Click on <code>Personal access tokens</code> and then <code>Tokens(classic)</code> </p> <p>Click on <code>Generate token</code> and then <code>Generate new token(classic)</code> </p> <p>Give the name for token and click the <code>repo</code> check box </p> <p>Click on <code>Generate token</code> </p> <p>The Personal access token(PAT) is shown only one time. Copy and save in secure place </p> <p>Enter the username and PAT</p> <pre><code>ubuntu@manikandan:~/firstproject$ git push origin main\nUsername for 'https://github.com': devopspilot2\nPassword for 'https://devopspilot2@github.com': \nEnumerating objects: 4, done.\nCounting objects: 100% (4/4), done.\nDelta compression using up to 2 threads\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 322 bytes | 322.00 KiB/s, done.\nTotal 3 (delta 0), reused 0 (delta 0), pack-reused 0\nTo https://github.com/devopspilot2/firstproject.git\n   12664f9..d26925d  main -&gt; main\n</code></pre> <p>The <code>hello.txt</code> is now pushed to Github</p> <p></p>"},{"location":"git/tutorials/part-1/#how-to-see-the-commits-in-github","title":"How to see the commits in Github","text":"<p>Goto Github <code>firstproject</code> repository and click on <code>commits</code> </p> <p>Here you can see all the commits pushed </p> <p>After clicking on one commit, you can see the changes made in the commit </p>"},{"location":"git/tutorials/part-2/","title":"Part 2","text":""},{"location":"git/tutorials/part-2/#git","title":"GIT","text":""},{"location":"git/tutorials/part-2/#youtube","title":"Youtube","text":""},{"location":"git/tutorials/part-2/#how-to-create-private-repository","title":"How to create private repository","text":"<p>Click on <code>new</code> </p> <p>Give the repository name and click the <code>private</code> check box and <code>Add a Readme file</code> check box</p> <p>Click on <code>Create repository</code> </p> <p>Next to the repository name, you can see its mentioned as <code>private</code> </p> <p>For private repository, you need to authenticate to clone the repo.</p> <p>There are two types of authentication,</p> <ul> <li>Using Personal Access Token(PAT)</li> <li>Using SSH public/private keys</li> </ul>"},{"location":"git/tutorials/part-2/#how-to-authenticate-using-personal-access-tokenpat","title":"How to authenticate using Personal Access Token(PAT)","text":"<p>Lets generate the token</p>"},{"location":"git/tutorials/part-2/#remote-vs-local-repo","title":"Remote vs local repo","text":""},{"location":"git/tutorials/visual_diff_merge/","title":"Git Visual Diff and Merge Tools","text":"<ol> <li> <p>Install p4merge for windows</p> </li> <li> <p>configure git git config --global merge.tool p4merge git config --global mergetool.p4merge.path \"C:/Program Files/Perforce/p4merge.exe\" git config --global diff.tool p4merge git config --global difftool.p4merge.path \"C:/Program Files/Perforce/p4merge.exe\" git config --global difftool.prompt false git config --global mergetool.prompt false</p> </li> <li> <p>To see the diff using p4merge   git difftool</p> </li> <li> <p>To see diff between working directory and last commit   git diff HEAD   git difftool HEAD</p> </li> <li> <p>To see diff between staging area and last commit   git diff --staged HEAD (HEAD means last commit in current branch)</p> </li> <li> <p>To see diff between two commits   git diff commit-hash commit-hash   git diff HEAD HEAD^ (HEAD \u2192 means top commit, HEAD^ \u2192 top commit minus 1)   git difftool commit-hash commit-hash (difftool will show one file at a time, press q to close it and open the next diff file )</p> </li> <li> <p>To see diff between local repo and remote repo   git diff master origin/master</p> </li> </ol>"},{"location":"helm/basics/","title":"Helm Chart Basics","text":""},{"location":"helm/basics/#how-to-add-a-helm-repository","title":"How to add a helm repository","text":"<p>By default, helm will not have the repos added, we have to add the helm official repo like this</p> <pre><code>helm repo add stable https://charts.helm.sh/stable\n</code></pre>"},{"location":"helm/basics/#how-to-define-dependency-charts","title":"How to define dependency charts","text":"<p>In Helm chart we can define the dependency helm charts, while installing the parent helm chart the dependencies are downloaded from repos and stored in charts/ folder. We can also manually download and put the chart.tgz in charts/ folder</p> <p>Defining the dependency helm chart in parent Charts.yaml</p> <pre><code># parentchart/Chart.yaml\napiVesrion: v2\nname: parentchart\nversion: 1.0.0\ndependencies:\n  - name: apache\n    version: 1.2.3\n    repository: https://example.com/charts\n  - name: mysql\n    version: 3.2.1\n    repository: https://another.example.com/charts\n</code></pre> <p>we can use \"alias\" option to rename the chart and store in /charts folder</p> <pre><code>### parentchart/Chart.yaml\napiVesrion: v2\nname: parentchart\nversion: 1.0.0\ndependencies:\n  - name: subchart\n    repository: http://localhost:10191\n    version: 0.1.0\n    alias: new-subchart-1\n  - name: subchart\n    repository: http://localhost:10191\n    version: 0.1.0\n    alias: new-subchart-2\n  - name: subchart\n    repository: http://localhost:10191\n    version: 0.1.0\n</code></pre>"},{"location":"helm/basics/#how-to-use-tags-and-condition-in-chartyaml","title":"How to use tags and condition in chart.yaml","text":"<p>we can use \"tags\" and \"condition\" option to control the installation of dependency charts.</p> <ul> <li> <p>condition has higher preference than tags.</p> </li> <li> <p>The first condition path that exists wins and subsequent ones for that chart are ignored.</p> </li> <li> <p>If the \"condition\" values are not defined in the values.yaml, then the defined \"condition\" has no effect.</p> </li> <li> <p>Tags and conditions values must be set in the top parent's values.</p> </li> <li> <p>The tags: key in values must be a top level key. Globals and nested tags: tables are not currently supported.</p> </li> </ul> <pre><code># parentchart/Chart.yaml\ndependencies:\n  - name: subchart1\n    repository: http://localhost:10191\n    version: 0.1.0\n    condition: subchart1.enabled, global.subchart1.enabled\n    tags:\n      - front-end\n      - subchart1\n  - name: subchart2\n    repository: http://localhost:10191\n    version: 0.1.0\n    condition: subchart2.enabled,global.subchart2.enabled\n    tags:\n      - back-end\n      - subchart2\n</code></pre> <pre><code># parentchart/values.yaml\nsubchart2:\n  enabled: true\ntags:\n  front-end: false\n  back-end: true\n</code></pre>"},{"location":"helm/basics/#the-set-parameter-can-be-used-as-usual-to-alter-tag-and-condition-values","title":"The --set parameter can be used as usual to alter tag and condition values.","text":"<pre><code>helm install --set tags.front-end=true --set subchart2.enabled=false\n</code></pre>"},{"location":"helm/basics/#how-to-import-values-from-child-to-parent","title":"How to import values from child to parent","text":"<p>we can get/import the values from child values.yaml to parent values.yaml. If the child values are already present in parent values.yaml, it will be overwritten in parent values.yaml https://helm.sh/docs/topics/charts/#chart-dependencies</p>"},{"location":"helm/basics/#helm-creates-kubernetes-resources-in-the-following-order-and-uninstall-its-in-reverse-order","title":"Helm creates kubernetes resources in the following order and uninstall its in reverse order,","text":"<pre><code>\"Namespace\",\n\"NetworkPolicy\",\n\"ResourceQuota\",\n\"LimitRange\",\n\"PodSecurityPolicy\",\n\"PodDisruptionBudget\",\n\"Secret\",\n\"ConfigMap\",\n\"StorageClass\",\n\"PersistentVolume\",\n\"PersistentVolumeClaim\",\n\"ServiceAccount\",\n\"CustomResourceDefinition\",\n\"ClusterRole\",\n\"ClusterRoleList\",\n\"ClusterRoleBinding\",\n\"ClusterRoleBindingList\",\n\"Role\",\n\"RoleList\",\n\"RoleBinding\",\n\"RoleBindingList\",\n\"Service\",\n\"DaemonSet\",\n\"Pod\",\n\"ReplicationController\",\n\"ReplicaSet\",\n\"Deployment\",\n\"HorizontalPodAutoscaler\",\n\"StatefulSet\",\n\"Job\",\n\"CronJob\",\n\"Ingress\",\n\"APIService\"\n</code></pre>"},{"location":"helm/basics/#the-chart-can-be-deprecated-by-specifying-the-deprecated-true-in-chartsyaml","title":"The chart can be deprecated by specifying the \"deprecated: true\" in Charts.yaml","text":""},{"location":"helm/basics/#predefined-values","title":"Predefined Values","text":"<ul> <li> <p>Release.Name: The name of the release (not the chart)</p> </li> <li> <p>Release.Namespace: The namespace the chart was released to.</p> </li> <li> <p>Release.Service: The service that conducted the release.</p> </li> <li> <p>Release.IsUpgrade: This is set to true if the current operation is an upgrade or rollback.</p> </li> <li> <p>Release.IsInstall: This is set to true if the current operation is an install.</p> </li> <li> <p>Chart: The contents of the Chart.yaml. Thus, the chart version is obtainable as Chart.Version and the maintainers are in Chart.Maintainers.</p> </li> </ul>"},{"location":"helm/basics/#global-is-a-special-variable-to-pass-the-values-to-dependency-charts","title":"\"global\" is a special variable to pass the values to dependency charts.","text":"<ul> <li> <p>By default dependency chart cannot read values from parent root values</p> </li> <li> <p>we can pass values to dependency charts from parent values.yaml</p> </li> </ul> <pre><code>title: \"My WordPress Site\" # Sent to the WordPress template\n\nglobal:\n  app: MyWordPress\n\nmysql: # Dependency chart name\n  max_connections: 100 # Sent to MySQL\n  password: \"secret\"\n\napache: # Dependency chart name\n  port: 8080 # Passed to Apache  \n</code></pre>"},{"location":"helm/basics/#use-of-valuesschemajson-in-helm-chart","title":"Use of values.schema.json in helm chart","text":"<p>The schema file \"values.schema.json\" in chart root folder is used the enforce the chart values, define a structure, make some values as required value (eg. string type for specific value in values.yaml)</p> <pre><code>{\n  \"$schema\": \"https://json-schema.org/draft-07/schema#\",\n  \"properties\": {\n    \"image\": {\n      \"description\": \"Container Image\",\n      \"properties\": {\n        \"repo\": {\n          \"type\": \"string\"\n        },\n        \"tag\": {\n          \"type\": \"string\"\n        }\n      },\n      \"type\": \"object\"\n    },\n    \"name\": {\n      \"description\": \"Service name\",\n      \"type\": \"string\"\n    },\n    \"port\": {\n      \"description\": \"Port\",\n      \"minimum\": 0,\n      \"type\": \"integer\"\n    },\n    \"protocol\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"protocol\",\n    \"port\"\n  ],\n  \"title\": \"Values\",\n  \"type\": \"object\"\n}\n</code></pre>"},{"location":"helm/basics/#template-directives-or-templating-feature-not-available-for-crd-yaml-files-defined-in-crds-folder","title":"\"template directives\" or templating feature not available for CRD yaml files defined in crds/ folder","text":"<pre><code>kind: CustomResourceDefinition\nmetadata:\n  name: crontabs.stable.example.com\nspec:\n  group: stable.example.com\n  versions:\n    - name: v1\n      served: true\n      storage: true\n  scope: Namespaced\n  names:\n    plural: crontabs\n    singular: crontab\n    kind: CronTab\n</code></pre>"},{"location":"helm/basics/#limitations-on-crds","title":"Limitations on CRDs","text":"<ul> <li> <p>Unlike most objects in Kubernetes, CRDs are installed globally. For that reason, Helm takes a very cautious approach in managing CRDs. CRDs are subject to the following limitations:</p> </li> <li> <p>CRDs are never reinstalled. If Helm determines that the CRDs in the crds/ directory are already present (regardless of version), Helm will not attempt to install or upgrade.</p> </li> <li> <p>CRDs are never installed on upgrade or rollback. Helm will only create CRDs on installation operations.</p> </li> <li> <p>CRDs are never deleted. Deleting a CRD automatically deletes all of the CRD's contents across all namespaces in the cluster. Consequently, Helm will not delete CRDs.</p> </li> </ul>"},{"location":"helm/basics/#chart-repositories","title":"Chart Repositories","text":"<p>A repository is characterized primarily by the presence of a special file called index.yaml that has a list of all of the packages supplied by the repository, together with metadata that allows retrieving and verifying those packages.</p>"},{"location":"helm/commands/","title":"Helm commands","text":""},{"location":"helm/commands/#to-install-helm-chart","title":"To install helm chart","text":"<pre><code>helm install -f myvalues.yaml myredis ./redis\nor helm install --set name=prod myredis ./redis\nor helm install --set-string long_int=1234567890 myredis ./redis\nor helm install --set-file my_script=dothings.sh myredis ./redis\n</code></pre>"},{"location":"helm/commands/#to-install-helm-charts-on-specific-namespace","title":"To install helm charts on specific namespace","text":"<pre><code>helm install -f myvalues.yaml myredis ./redis -n nemespace_name\n</code></pre>"},{"location":"helm/commands/#which-has-highest-precedence-if-we-pass-multiple-valuesyaml","title":"Which has highest Precedence if we pass multiple values.yaml","text":"<p>we can pass multiple values.yaml or --set , but which is the rightmost will have the precedence</p> <pre><code>helm install -f myvalues.yaml -f override.yaml  myredis ./redis\n</code></pre>"},{"location":"helm/commands/#dry-run","title":"Dry-run","text":"<pre><code>helm install -f myvalues.yaml myredis ./redis --dry-run\n</code></pre>"},{"location":"helm/commands/#to-delete-helm-chart","title":"To delete helm chart","text":"<pre><code>helm uninstall release_name\nhelm uninstall release_name --dry-run\nhelm uninstall release_name -n namespace_name (To delete helm chart which was installed on specific namespace)\n</code></pre>"},{"location":"helm/commands/#to-list-the-installed-charts","title":"To list the installed charts","text":"<pre><code>helm list\nhelm list -n namespace_name (To list installed helm charts on specific namespace)\n</code></pre>"},{"location":"helm/commands/#to-timeout-the-helm-install-command","title":"To timeout the helm install command","text":"<pre><code>helm install -f values.yaml test . -n cnf --timeout 20s  (Default is 5 minutes if we didn't pass the --timeout parameter)\n</code></pre>"},{"location":"helm/commands/#to-get-the-config-filemanifest-which-we-used-during-helm-install","title":"To get the config file(manifest) which we used during helm install","text":"<pre><code>helm get manifest release_name\nhelm get manifest release_name -n namespace_name\n</code></pre>"},{"location":"helm/commands/#to-add-a-helm-chart-repo","title":"To add a helm chart repo","text":"<pre><code>helm repo add [NAME] [URL] [flags]\nhelm repo add bitnami https://charts.bitnami.com/bitnami\n\nhelm repo add - add a chart repository\nhelm repo index - generate an index file given a directory containing packaged charts\nhelm repo list - list chart repositories\nhelm repo remove - remove one or more chart repositories\nhelm repo update - update information of available charts locally from chart repositories\n</code></pre>"},{"location":"helm/commands/#to-search-helm-charts-in-that-repo","title":"To search helm charts in that repo","text":"<pre><code>helm search repo repo-name (eg. helm search repo bitnami/)\n</code></pre>"},{"location":"helm/commands/#to-search-for-mongodb-chart","title":"To search for mongodb chart","text":"<pre><code>helm search repo bitnami/mango\n</code></pre>"},{"location":"helm/commands/#to-install-helm-plugin","title":"To install helm plugin","text":"<pre><code>helm plugin install https://github.com/helm/helm-2to3\n</code></pre>"},{"location":"helm/commands/#to-list-installed-plugin","title":"To list installed plugin","text":"<pre><code>helm plugin list\n</code></pre>"},{"location":"helm/commands/#to-add-helm-official-stable-repo","title":"To add helm official stable repo","text":"<pre><code>helm repo add stable https://charts.helm.sh/stable\n</code></pre>"},{"location":"helm/commands/#to-download-only-the-valuesyaml-from-chart","title":"To download only the values.yaml from chart","text":"<pre><code>helm inspect values repo_name/chart_name &gt; /tmp/values.yam (eg. helm inspect values stable/jenkins &gt; /tmp/values.yaml)\n</code></pre>"},{"location":"interview-questions/ansible/","title":"Ansible Interview Questions","text":""},{"location":"interview-questions/ansible/#dependency-for-using-ansible","title":"Dependency for using Ansible.","text":"<pre><code>Python should be installed in both ansible host and also in all target servers\nssh agent should be up and running in all linux target servers\n</code></pre>"},{"location":"interview-questions/ansible/#where-the-default-ansible-configuration-file-and-hostinventory-file-is-located","title":"Where the default ansible configuration file and host/inventory file is located","text":"<pre><code>/etc/ansible/ansible.cfg\n/etc/ansible/hosts\n</code></pre>"},{"location":"interview-questions/ansible/#executing-the-ansible-module-using-command-line","title":"Executing the ansible module using command-line","text":"<pre><code>ansible host_name/group_name -m ping -i inventory.txt\n\nhost_name/group_name -&gt; from inventory file (/etc/ansible/hosts)\n-m ping              -&gt; module name (here module name ping is passed)\n-i inventory.txt     -&gt; To pass custom inventory file (Here inventory file named inventory.txt in current directory is passed)\n</code></pre>"},{"location":"interview-questions/ansible/#how-host-key-checking-can-be-disabledenabled-in-ansible","title":"How Host key checking can be disabled/enabled in ansible ?","text":"<pre><code>By default host_key_checking is enabled\nIn ansible.cfg          -&gt; host_key_checking = False\nIn inventory file       -&gt; ansible_ssh_user=vagrant ansible_ssh_port=2222 ansible_ssh_host=127.0.0.1 host_key_checking=false\nIn ansible.cfg          -&gt; ansible_ssh_common_args='-o StrictHostKeyChecking=no'\nAs environment variable -&gt; export ANSIBLE_HOST_KEY_CHECKING=False  (This might not work on newer ansible versions)\n</code></pre>"},{"location":"interview-questions/ansible/#what-is-the-difference-between-defaults-and-vars-folder-in-ansible-role","title":"what is the difference between defaults and vars folder in ansible role","text":""},{"location":"interview-questions/ansible/#what-is-ansible-collection","title":"What is ansible collection ?","text":"<pre><code>Collections are a distribution format for Ansible content that can include playbooks, roles, modules, and plugins. As modules move from the core Ansible repository into collections, the module documentation will move to the collections pages.\n</code></pre>"},{"location":"interview-questions/ansible/#types-of-inventories","title":"Types of Inventories","text":"<pre><code>-&gt; static inventory -&gt; All the Ip are defined in the static file (/etc/ansible/hosts)\n-&gt; Dynamic inventory -&gt; It will fetch the Ip's dynamically using the scripts shell,python/plugins\n\nIn the earlier version of ansible,  we have to write the python script and we have to pass like below for dynamic Inventory\n\nansible-playbook -i inventory.py playbook.yaml\n\nNow this dynamic inventory scripts are already written for some cloud providers\naws ec2, azure, openstack, gcp, space walk, jails etc..\n\nUpdate: use aws_ec2 plugin from amazon.aws collection\n</code></pre>"},{"location":"interview-questions/ansible/#what-is-dynamic-inventory","title":"What is Dynamic inventory ?","text":"<p>Ansible dynamic inventory - AWS</p>"},{"location":"interview-questions/ansible/#where-ansiblecfg-is-located-and-what-location-of-ansiblecfg-has-higher-precedence","title":"Where ansible.cfg is located and what location of ansible.cfg has higher precedence ?","text":"<pre><code>Changes can be made and used in a configuration file which will be searched for in the following order:\n\nANSIBLE_CONFIG (environment variable if set)\nansible.cfg (in the current directory)\n~/.ansible.cfg (in the home directory)\n/etc/ansible/ansible.cfg\n\nAnsible will process the above list and use the first file found, all others are ignored.\n</code></pre>"},{"location":"interview-questions/ansible/#what-is-the-default-ssh-authentication-type-in-ansible","title":"What is the default ssh authentication type in ansible ?","text":"<pre><code>SSH using private key\n</code></pre>"},{"location":"interview-questions/ansible/#what-is-the-use-of-host_vars-directory","title":"What is the use of host_vars directory ?","text":"<pre><code>Used for keeping different values for each host.\nFor each host one dedicated file needs to be created with the host name in host_vars directory\n\nhost_vars\n    db01\n    db02\n</code></pre>"},{"location":"interview-questions/ansible/#how-to-run-only-specific-tasks-on-ansible-playbook","title":"How to run only specific tasks on ansible playbook ?","text":"<pre><code>Using ansible tags feature we can run only specific tasks\n\nansible-playbook playbook.yaml --tags=install,config,deploy\n</code></pre>"},{"location":"interview-questions/ansible/#how-you-can-run-all-tasks-except-one-task-in-ansible-playbook","title":"How you can run all tasks except one task in ansible playbook ?","text":"<pre><code>Using ansible tags feature we can skip one task and run all other tasks\n\nansible-playbook playbook.yaml --skip-tags=install\n</code></pre>"},{"location":"interview-questions/ansible/#what-are-the-special-tags-in-ansible","title":"What are the special tags in ansible ?","text":"<pre><code>always and never\n</code></pre>"},{"location":"interview-questions/ansible/#what-is-always-tag-in-ansible","title":"What is always tag in ansible ?","text":"<pre><code>If you assign a always tag to tasks or play, ansible will always run that task or play.\n\nIf you even want to skip that tag, we can use --skip-tags=always\n</code></pre>"},{"location":"interview-questions/ansible/#what-is-never-tag-in-ansible","title":"What is never tag in ansible ?","text":"<pre><code>If you assign a never tag to tasks or play, ansible will skip that task or play.\n\nIf you even want to run that tag, we can use --tags=never\n</code></pre>"},{"location":"interview-questions/ansible/#what-is-gathering_facts-in-ansible-is-it-enabled-by-default","title":"What is gathering_facts in ansible ? Is it enabled by default ?","text":"<pre><code>This module takes care of executing the configured facts modules, the default is to use the ansible.builtin.setup module.\n\nThis module is automatically called by playbooks to gather useful variables about remote hosts that can be used in playbooks.\n\nIt can also be executed directly by /usr/bin/ansible to check what variables are available to a host.\n\nAnsible provides many facts about the system, automatically.\n\nYes its enabled by default. We can disable by setting gatherings_facts: false in playbook\n</code></pre>"},{"location":"interview-questions/ansible/#how-you-can-check-which-ansible-conf-file-used","title":"How you can check which ansible conf file used ?","text":"<pre><code>By running \"ansible --version\" will show the ansible version and also the configuration file location which is used\n</code></pre>"},{"location":"interview-questions/ansible/#what-are-the-default-host-group-in-inventory","title":"What are the default host group in inventory","text":"<pre><code>\"all\" - includes every host in the inventory\n\"ungrouped\" - includes every host in \"all\" group that is not a member of another group\n</code></pre>"},{"location":"interview-questions/ansible/#how-you-can-save-output-to-a-variable-and-printing-that-variable","title":"How you can save output to a variable and printing that variable","text":"<pre><code>- name: print to stdout\n  command: echo \"hello\"\n  register: out\n- debug: msg=\"{{ out.stdout }}\"\n- debug: msg=\"{{ out.stderr }}\"\n- debug: var=out.stdout_lines\n</code></pre>"},{"location":"interview-questions/ansible/#to-install-package-based-on-distroos-family","title":"To install package based on distro/os-family","text":"<pre><code>[Older way]\n- name: install the latest version of Apache on CentOS\n  yum: name=httpd state=latest\n  when: ansible_os_family == \"RedHat\"\n\n- name: install the latest version of Apache on Debian\n  apt: pkg=apache2 state=latest \n  when: ansible_os_family == \"Debian\"\n\n[Newer way]\n- name: Install foo\n  package: name=httpd state=latest\n\nWhen the package name differs across OS families, we can handle it with distribution or OS family specific vars files:\nHere the package name \"httpd\" is different for each distro, in Redhat it is \"httpd\", but for Ubuntu it is \"apache2\"\n\n---\n\n- hosts: all\n  remote_user: root\n  vars_files:\n    - \"vars/common.yml\"\n    - [ \"vars/{{ ansible_os_family }}.yml\", \"vars/os_defaults.yml\" ]\n  tasks:\n    - name: Install the apache package\n      package:\n        name: \"{{ apache }}\"\n        state: present\n</code></pre>"},{"location":"interview-questions/ansible/#what-is-handler","title":"What is handler ?","text":"<pre><code>From one handler we can notify the other handler, but the problem, it is not returning \"True\" it wont notify the other handlers. After ansible 2.3 version,\n\nThe better way is to group the tasks inside \"block\" (block is also one module)\n\nIn block we define the become, remote_user, when condition as common and it will be automatically applied to each task under this block\n\nBy default the all the tasks inside the will be executed if the before tasks are suucess. If the last task is returning OK, still it will run the next tasks.\n\nIf we want the next task to be executed only if the last task is success, then capture the task status to a variable and use that variable in when condition in the next task\n\n - name: Installing apache2 on Debian(ubuntu)\n      block:\n        - name: Installing apache2 on Debian(Ubuntu)\n          apt: name=apache2 state=present\n          register: result\n\n        - name: Start apache2\n          service: name=apache2 state=started\n          register: resultStartingApache2\n          when: result is succeeded\n</code></pre>"},{"location":"interview-questions/ansible/#how-to-define-nested-groups-in-inventory","title":"How to define Nested groups in inventory ?","text":"<pre><code>[mumbai]\nexample1.com\nexample2.com\n</code></pre> <p>[delhi]</p> <p>example3.com example4.com</p> <p>[india:children]</p> <p>mumbai delhi</p>"},{"location":"interview-questions/ansible/#how-you-use-use-ranges-in-ip-address-in-invemtory-file","title":"How you use use ranges in ip-address in invemtory file ?","text":"<pre><code>192.168.[4:7].[0:255]       -&gt;  192.168.4.0 to 192.168.7.255\nserver[01:20].example.com   -&gt;  server01.example.com to server20.example.com\n[a:c].dns.example.com       -&gt; a.dns.example.com to c.dns.example.com\nserver[01:20].example.com   -&gt; will match server01.example.com and not server1.example.com\n</code></pre>"},{"location":"interview-questions/ansible/#how-to-list-the-hosts-from-inventory-file","title":"How to list the hosts from inventory file ?","text":"<pre><code>ansible-inventory --list              -&gt; To list the hosts from configured inventory file\nansible-inventory -i inventory --list -&gt; To list the hosts from custom inventory file\n</code></pre>"},{"location":"interview-questions/ansible/#how-you-can-convert-the-inventory-file-from-ini-to-yaml-format","title":"How you can convert the inventory file from INI to YAML format ?","text":"<pre><code>ansible-inventory --list -y\n</code></pre>"},{"location":"interview-questions/ansible/#how-you-can-encrypt-a-files-in-ansible","title":"How you can encrypt a files in ansible ?","text":""},{"location":"interview-questions/ansible/#structure-of-roles","title":"Structure of roles ?","text":"<pre><code>roles/\n    common/               # this hierarchy represents a \"role\"\n        tasks/            #\n            main.yml      #  &lt;-- tasks file can include smaller files if warranted\n        handlers/         #\n            main.yml      #  &lt;-- handlers file\n        templates/        #  &lt;-- files for use with the template resource\n            ntp.conf.j2   #  &lt;------- templates end in .j2\n        files/            #\n            bar.txt       #  &lt;-- files for use with the copy resource\n            foo.sh        #  &lt;-- script files for use with the script resource\n        vars/             #\n            main.yml      #  &lt;-- variables associated with this role\n        defaults/         #\n            main.yml      #  &lt;-- default lower priority variables for this role\n        meta/             #\n            main.yml      #  &lt;-- role dependencies\n        library/          # roles can also include custom modules\n        module_utils/     # roles can also include custom module_utils\n        lookup_plugins/   # or other types of plugins, like lookup in this case\n\n    webtier/              # same kind of structure as \"common\" was above, done for the webtier role\n    monitoring/           # \"\"\n    fooapp/               # \"\"\n</code></pre>"},{"location":"interview-questions/ansible/#how-you-can-call-the-role-from-ansible-playbook","title":"How you can call the role from ansible playbook ?","text":"<pre><code>---\n\n- hosts: webservers\n  roles:\n    - common\n    - webservers\n</code></pre>"},{"location":"interview-questions/ansible/#how-you-can-pass-varibales-to-roles-from-playbook","title":"How you can pass varibales to roles from playbook ?","text":"<pre><code>---\n\n- hosts: webservers\n  roles:\n    - common\n    - role: foo_app_instance\n      vars:\n        dir: '/opt/a'\n        app_port: 5000\n      tags: typeA\n    - role: foo_app_instance\n      vars:\n        dir: '/opt/b'\n        app_port: 5001\n      tags: typeB\n</code></pre>"},{"location":"interview-questions/ansible/#how-to-check-if-the-host-is-available-in-the-inventory-file","title":"How to check if the host is available in the inventory file ?","text":"<pre><code>ansible example.com --list-hosts\n\nIf with have same name for both host and group, it will print the host and ignore the group and it will show the warning\n</code></pre>"},{"location":"interview-questions/ansible/#in-inventory-file-you-have-10-hosts-but-you-want-to-execute-the-module-on-only-one-host-how-to-do-it","title":"In inventory file you have 10 hosts, but you want to execute the module on only one host, how to do it ?","text":"<pre><code>ansible all --limit server1.example.com -m ping\n</code></pre>"},{"location":"interview-questions/ansible/#how-you-can-check-what-are-the-ansible-configuration-you-have-overwritten","title":"How you can check, what are the ansible configuration, you have overwritten ?","text":"<pre><code>ansible-config dum --only-changed\n</code></pre>"},{"location":"interview-questions/ansible/#how-you-can-list-all-modules-available-in-ansible","title":"How you can list all modules available in Ansible ?","text":"<pre><code>ansible-doc -l\n</code></pre>"},{"location":"interview-questions/ansible/#how-you-can-get-more-details-of-the-module-using-ansible-cli","title":"How you can get more details of the module using ansible cli ?","text":"<pre><code>To know more details about ping module\n\nansible-doc ping\n</code></pre>"},{"location":"interview-questions/ansible/#information","title":"Information","text":"<ul> <li> <p>Nearly all parameters can be overridden in ansible-playbook or with command line flags.</p> </li> <li> <p>To list all options of ansible</p> <pre><code>ansible-config list\n</code></pre> </li> <li> <p>Group names in inventory should not include dashes, but underscore is fine</p> </li> <li> <p>Avoid confusion, do not give a group the same name as host</p> </li> <li> <p>Inventory files are also supported in yaml format. INI and YAML</p> </li> <li> <p>Most modules are idempotent, which means they only make changes if a change is needed. Idempotent modules can be run safely multiple times.</p> </li> </ul>"},{"location":"interview-questions/docker/","title":"Docker Interview Questions","text":""},{"location":"interview-questions/docker/#docker-image","title":"Docker Image","text":""},{"location":"interview-questions/docker/#how-you-can-pull-a-mysql-docker-image-from-docker-hub-to-your-local-machine","title":"How you can pull a mysql docker image from docker hub to your local machine ?","text":"<pre><code>docker pull mysql\n</code></pre>"},{"location":"interview-questions/docker/#how-you-can-pull-a-docker-image-from-private-repository-in-docker-hub-the-username-is-test-repositoryimage-name-is-myimage-and-the-tag-is-100","title":"How you can pull a docker image from private repository in docker hub. The username is <code>test</code>, repository/image name is <code>myimage</code> and the tag is 1.0.0","text":"<p>Since its a private repository, first we have to login to the registry.</p> <pre><code>docker login -u test -p ***************\n</code></pre> <p>Then we can pull the image with the following image name format username/imagename:tag</p> <pre><code>docker pull test/myimage:1.0.0\n</code></pre>"},{"location":"interview-questions/docker/#what-is-the-image-name-format-to-pull-a-docker-image-from-jfrog-docker-registry-or-any-registry-apart-from-docker-hub","title":"What is the image name format to pull a docker image from Jfrog docker registry or any registry apart from docker hub ?","text":"<p>registry-url/registry-name/image-name:tag</p> <p>Example for pulling a docker image from Jfrog Docker Registry.</p> <pre><code>username.jfrog.io/default-docker-local/hello-world:tag\n</code></pre>"},{"location":"interview-questions/docker/#docker-container","title":"Docker Container`","text":""},{"location":"interview-questions/docker/#can-you-write-a-command-to-create-a-nginx-docker-container","title":"Can you write a command to create a nginx docker container","text":"<pre><code>docker run -d --name nginx nginx:latest\n</code></pre>"},{"location":"interview-questions/docker/#why-ubuntu-docker-container-stops-immediately","title":"Why ubuntu docker container stops immediately ?","text":"<p>When we create a container, the combination of ENTRYPOINT and CMD from Dockerfile will be executed.</p> <p>For ubuntu docker container the CMD in Dockerfile is <code>bash</code> command. The bash command is not a background process, it just starts and stop immediately, thats why the ubuntu container stops immediately.</p> <p>Dockerfile of Ubuntu docker image : https://hub.docker.com/layers/ubuntu/library/ubuntu/latest/images/sha256-3f7c2c6e153e218a10ff78b3868811795fa09cc5d01be28296390ac75ab018b0?context=explore</p>"},{"location":"interview-questions/docker/#docker-command-to-forward-specific-port","title":"Docker command to forward specific port","text":"<pre><code>docker run -d --name nginx -p 80:80 nginx:latest\n</code></pre>"},{"location":"interview-questions/docker/#how-do-you-persist-some-specific-files-or-folder-from-docker-container","title":"How do you persist some specific files or folder from docker container","text":"<p>By creating the volumes</p> <p>Example: mysql docker container</p> <pre><code>docker run --name some-mysql -v /my/own/datadir:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql\n</code></pre>"},{"location":"interview-questions/docker/#how-to-pass-a-dockerfile-which-is-in-different-folder-to-the-docker-build-command","title":"How to pass a dockerfile which is in different folder to the docker build command","text":"<pre><code>docker build -f dockerfiles/Dockerfile -t sample .\n</code></pre>"},{"location":"interview-questions/docker/#how-you-can-create-and-persist-the-environment-variable-in-docker-container","title":"How you can create and persist the Environment variable in docker container","text":"<pre><code>FROM ubuntu\nENV VERSION=1.0.0\n</code></pre>"},{"location":"interview-questions/docker/#how-you-can-define-environment-variables-to-persist-only-in-that-particular-layer-during-docker-build","title":"How you can define environment variables to persist only in that particular layer during docker build","text":"<pre><code>FROM ubuntu\nRUN export VERSION=1.0.0 &amp;&amp; echo $VERSION\n</code></pre>"},{"location":"interview-questions/docker/#you-have-defined-one-environment-variable-app_colorred-in-dockerfile-and-while-creating-the-container-you-can-passed-arguments-e-app_colorblue-which-value-will-it-take-inside-a-container","title":"You have defined one Environment variable APP_COLOR=red in Dockerfile and while creating the container you can passed arguments -e APP_COLOR=blue. Which value will it take inside a container ?","text":"<p>Environment variable defined during docker run command will be taken.</p> <p>Environment variable defined during docker run command has the highest priority, when compared to environment variable defined in Dockerfile.</p>"},{"location":"interview-questions/docker/#how-to-reuse-the-dockerfile-or-how-to-templatise-the-dockerfile-or-how-to-define-the-commands-commonly-in-one-dockerfile","title":"How to reuse the Dockerfile or how to templatise the Dockerfile or How to define the commands commonly in one dockerfile","text":"<p>Using onbuild in base Dockerfile. Which will be executed in the child dockerfile during build time</p>"},{"location":"interview-questions/docker/#how-namespace-and-cgroups-helps-in-creating-the-docker-container","title":"How namespace and cgroups helps in creating the docker container","text":""},{"location":"interview-questions/docker/#what-is-multistage-dockerfile","title":"What is multistage dockerfile ?","text":"<p>How to write multistage dockerfile</p>"},{"location":"interview-questions/docker/#when-you-will-use-cmd-and-entrypoint","title":"When you will use CMD and ENTRYPOINT ?","text":"<p>In our container, if our executable is not going to change very frequently, we can put excutable in ENTRYPOINT and their arguments in CMD.</p> <p>And if you want to change only your arguments you can override the CMD during container creation.</p> <p>If we are not sure about the executable to be used. In that case we can put both executable and their arguments in CMD itself.</p> <p>During container creation, if we override the CMD, basically we are overriding both executables and arguments.</p> <p>Official Documentation CMD ENTRYPOINT</p>"},{"location":"interview-questions/docker/#you-have-defined-two-cmd-instructions-in-dockerfile-which-will-be-taken","title":"You have defined two CMD instructions in Dockerfile, which will be taken ?","text":"<p>The last defined CMD will be considered.</p>"},{"location":"interview-questions/docker/#is-is-possible-to-define-two-entrypoint-in-dockerfile","title":"Is is possible to define two ENTRYPOINT in Dockerfile ?","text":"<p>Yes we can define two ENTRYPOINTs in Dockerfile, last ENTRYPOINT will be considered.</p>"},{"location":"interview-questions/docker/#it-it-possible-to-override-entrypoint-while-creating-container","title":"It it possible to override ENTRYPOINT while creating container ?","text":"<p>Yes, its possible to override the ENTRYPOINT during container creation.</p> <pre><code>docker run -it --entrypoint /bin/bash nginx\n</code></pre>"},{"location":"interview-questions/docker/#have-you-worked-on-any-docker-scanning-tools-in-your-cicd-pipeline","title":"Have you worked on any docker scanning tools in your CI/CD pipeline ?","text":"<p>Yes, I can worked on docker scanning tools like Anchore, Mcafee, snyk and Jfrog Xray</p>"},{"location":"interview-questions/docker/#you-want-to-build-a-dockerfile-whether-you-will-keep-a-dockerfile-in-root-directory-or-in-some-other-directory-why","title":"You want to build a Dockerfile, whether you will keep a Dockerfile in root directory or in some other directory? why?","text":"<p>Its a best practice to not keep a Dockerfile in root directory, because lot of other files will be there in the root directory, while during the docker build all these file contexts will be sent to docker daemon. So the build process will take some time.</p> <p>But if we need the Dokcerfile in some different folder, only that specific will be sent as context to docker daemon, so the build process will be much faster.</p> <p>Due to some scenario, if you still want to keep your Dockerfile on root directory. We can use .dockerignore file to ignore the other files and directories that are not required during docker build.</p>"},{"location":"interview-questions/docker/#whats-the-difference-between-docker-kill-and-docker-stop","title":"Whats the difference between <code>docker kill</code> and <code>docker stop</code> ?","text":"<p><code>docker stop</code> The main process inside the container will receive SIGTERM and after a grace period, SIGKILL Official Documentation</p> <p><code>docker kill</code> The main process inside the container is sent SIGKILL signal (default), or the signal that is specified with the --signal option Official Documentation</p> <pre><code>docker kill --signal=SIGHUP  my_container\n</code></pre>"},{"location":"interview-questions/docker/#how-to-clean-up-unused-images-stopped-containers-and-unused-networks-using-single-command","title":"How to clean up unused images, stopped containers and unused networks using single command?","text":""},{"location":"interview-questions/docker/#you-want-to-transfer-the-docker-image-from-one-server-to-another-server-but-you-have-only-ssh-access-is-it-possible","title":"You want to transfer the Docker image from one server to another server, but you have only ssh access. Is it possible ?","text":"<p>Yes, First we have to convert the docker image to tar file and copy the file to another server and convert the tar file to docker image</p> <p>Command to convert docker image to tar file</p> <pre><code>docker save busybox &gt; busybox.tar\nor\ndocker save --output busybox.tar busybox\nor\ndocker save -o fedora-latest.tar fedora:latest\n</code></pre> <p>official Documentation</p> <p>Command to convert tar file to docker image</p> <pre><code>docker load &lt; busybox.tar\nor\ndocker load --input fedora-latest.tar\n</code></pre> <p>official Documentation</p>"},{"location":"interview-questions/docker/#can-we-host-windows-containers-on-linux-machine","title":"Can we host windows containers on linux machine?","text":"<p>No. Containers are using the underlying Operating System resources and drivers, so Windows containers can run only on Windows OS, and Linux containers can run only on Linux OS</p>"},{"location":"interview-questions/docker/#whats-in-intermediate-container","title":"Whats in Intermediate container ?","text":"<p>During the docker build process, it will create intermediate container for RUN,COPY,ADD instructions in Dockerfile.</p> <p>The intermediate container will use previous layer as base image, executes the Instructions and then save this container as a layer.</p>"},{"location":"interview-questions/docker/#you-have-couple-of-docker-containers-running-in-a-server-you-have-restarted-the-server-now-you-are-checking-the-docker-containers-but-all-the-containers-are-in-stopped-state-why","title":"You have couple of docker containers running in a server. You have restarted the server, now you are checking the docker containers, but all the containers are in stopped state. why ?","text":"<p>By default the restart policy for all containers are set to <code>no</code></p> <p>If we want to start our docker containers automatically during system reboot, We should set the restart policy to <code>always</code> while creating the container.</p> <pre><code>docker run -d --restart always nginx\n</code></pre> <p>Official Documentation</p>"},{"location":"interview-questions/docker/#how-you-can-copy-a-file-to-running-container-without-stopping-it","title":"How you can copy a file to running container without stopping it ?","text":"<pre><code>docker cp hello.txt mycontainer:/hello.txt\n</code></pre> <p>Official Documentation</p>"},{"location":"interview-questions/docker/#how-will-you-check-the-live-cpu-and-memory-usage-of-containers","title":"How will you check the live cpu and memory usage of containers ?","text":"<pre><code>docker stats\n</code></pre> <p>Official Documentation</p>"},{"location":"interview-questions/docker/#is-it-possible-to-rename-your-container","title":"Is it possible to rename your container ?","text":"<p>Yest its possible to rename the container</p> <pre><code>docker rename old_container_name new_container_name\n</code></pre>"},{"location":"interview-questions/git/","title":"Git Interview Questions","text":""},{"location":"interview-questions/git/#difference-between-git-merge-and-git-rebase","title":"Difference between git merge and git rebase","text":""},{"location":"interview-questions/git/#difference-between-git-fetch-and-git-pull","title":"Difference between git fetch and git pull","text":""},{"location":"interview-questions/git/#if-you-run-git-pull-whether-it-will-fetch-all-branches","title":"If you run git pull, whether it will fetch all branches ?","text":""},{"location":"interview-questions/git/#while-doing-the-git-pull-how-do-you-rebase","title":"While doing the git pull how do you rebase ?","text":""},{"location":"interview-questions/git/#how-do-you-do-the-merge-of-feature-branch-and-from-which-branch","title":"How do you do the merge of feature branch and from which branch ?","text":"<p>switch to the merging branch(base branch from where the feature branch was created, mostly master branch), then run <code>git merge feature(branch_name)</code></p>"},{"location":"interview-questions/git/#after-merging-whether-it-will-create-a-separate-commit","title":"After merging whether it will create a separate commit ?","text":"<p>If there is no commits in the merging branch(from the point the feature branch was created or from the last merge from the same branch), it wont create a new commit(commits from feature branch will be merged to master branch), which is called fast-forward merging.</p> <p>If commits happened in the merging branch, then while merging it will create additional one commit(commits from feature branch + one additional commit for merging) This is referred as 3-way-merge.</p> <p>http://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging</p>"},{"location":"interview-questions/git/#how-to-recover-a-deleted-branch-using-sha-value","title":"How to recover a deleted branch using sha value","text":""},{"location":"interview-questions/git/#how-to-drop-a-stash-created","title":"How to drop a stash created","text":"<p>git stash drop</p>"},{"location":"interview-questions/helm/","title":"Helm Interview Questions","text":""},{"location":"interview-questions/helm/#what-is-the-folder-structure-of-helm-chart","title":"What is the folder structure of Helm chart?","text":"<p>|Chart.yaml |A YAML file containing information about the chart| |LICENSE |OPTIONAL: A plain text file containing the license for the chart| |README.md |OPTIONAL: A human-readable README file| |values.yaml |The default configuration values for this chart| |values.schema.json|OPTIONAL: A JSON Schema for imposing a structure on the values.yaml file| |charts/ |A directory containing any charts upon which this chart depends.| |crds/ |Custom Resource Definitions| |templates/ |A directory of templates that, when combined with values, will generate valid Kubernetes manifest files.| |templates/NOTES.txt|OPTIONAL: A plain text file containing short usage notes|</p> <p>Official Documentation</p>"},{"location":"interview-questions/helm/#how-you-can-mark-the-helm-chart-as-deprecated","title":"How you can mark the Helm chart as Deprecated ?","text":"<p><code>deprecated</code> field in Chart.yaml can be used to mark a chart as deprecated.</p> <p>Official Documentation</p>"},{"location":"interview-questions/helm/#how-you-can-add-the-helm-chart-repository-to-the-helm-client","title":"How you can add the helm chart repository to the helm client ?","text":"<pre><code>helm repo add devopspilot https://devopspilot.com/helm/charts/\nhelm repo update\n</code></pre> <p><code>devopspilot</code> \u2192 alias repo name to point to the Helm chart repository.</p> <p><code>https://devopspilot.com/helm/charts/</code> \u2192 Helm chart repository url.</p>"},{"location":"interview-questions/helm/#how-you-can-install-the-helm-chart-to-specific-namespace","title":"How you can install the helm chart to specific namespace ?","text":"<p>By passing cli flag <code>-n</code> or <code>--namespace</code></p> <pre><code>helm install mysql devopspilot/mysql -n database\n</code></pre>"},{"location":"interview-questions/helm/#you-have-installed-helm-chart-somebody-from-the-team-updated-pod-manifest-manually-after-which-when-you-update-the-same-release-what-will-happen","title":"You have installed Helm chart, somebody from the team updated pod manifest manually, after which when you update the same Release what will happen?","text":""},{"location":"interview-questions/helm/#can-we-have-same-release-names-in-different-namespaces","title":"Can we have same Release names in different namespaces?","text":"<p>Yes we can have same release name in two different namespaces.</p> <p>Eg: Lets install mysql chart with same Release name <code>mysql</code> in two different namespaces <code>database1</code> and <code>database2</code></p> <pre><code>helm install mysql devopspilot/mysql -n database1\n</code></pre> <pre><code>Output:\nNAME: mysql\nLAST DEPLOYED: Tue Jul 20 20:58:55 2021\nNAMESPACE: database1\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\n</code></pre> <pre><code>helm install mysql devopspilot/mysql -n database2\n</code></pre> <pre><code>Output:\nNAME: mysql\nLAST DEPLOYED: Tue Jul 20 21:01:21 2021\nNAMESPACE: database2\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\n</code></pre>"},{"location":"interview-questions/helm/#you-are-installing-mysql-chart-in-database-namespace-but-you-havent-created-the-database-namespace-before-installing-what-will-happen","title":"You are installing mysql chart in <code>database</code> namespace. But you haven't created the database namespace before installing, what will happen ?","text":"<p>Helm install will fail with an error. Namespace should be created before installing chart.</p> <p>Eg: Here we are installing mysql chart in database namespace. But database namespace is not created</p> <pre><code>helm install mysql devopspilot/mysql -n database \n</code></pre> <pre><code>Output:\nError: create: failed to create: namespaces \"database\" not found\n</code></pre>"},{"location":"interview-questions/helm/#is-it-possible-to-create-namespace-using-helm-commands-while-installing-the-chart","title":"Is it possible to create namespace using helm commands while installing the chart ?","text":"<p>Yes, its possible to create the namespace using helm install command by passing argument <code>--create-namespace</code></p> <pre><code>helm install mysql devopspilot/mysql -n database --create-namespace\n</code></pre>"},{"location":"interview-questions/helm/#what-functions-have-you-used-in-helm-charts-can-you-list-down-some-functions","title":"What functions have you used in helm charts? Can you list down some functions ?","text":"<p>default, lookup, eq, ne, lt, gt, and, or</p> <p>Official Documentation</p>"},{"location":"interview-questions/helm/#how-will-you-manage-environment-specific-valuesyaml","title":"How will you manage environment specific values.yaml?","text":"<p>Maintain one values.yaml for each environment.</p>"},{"location":"interview-questions/helm/#what-is-the-use-of-_helperstpl","title":"What is the use of _helpers.tpl?","text":"<p>It is used to define some templates or functions and then it can be referred in Kubernetes manifest files in templates folder.</p>"},{"location":"interview-questions/helm/#did-you-work-on-any-flow-controls-if-yes-where-did-you-use","title":"Did you work on any flow controls, if yes where did you use?","text":"<p><code>if/else</code> for creating conditional blocks</p> <p><code>with</code> to specify a scope</p> <p><code>range</code> which provides a \"for each\"-style loop</p> <p>Official Documentation</p>"},{"location":"interview-questions/helm/#you-have-installed-the-chart-which-has-crds-now-you-are-updating-the-same-release-with-updated-chart-what-will-happen-to-the-crds","title":"You have installed the chart which has CRDs. Now you are updating the same Release with updated chart, what will happen to the CRDs ?","text":"<p>CRDs are never reinstalled. If Helm determines that the CRDs in the crds/ directory are already present (regardless of version), Helm will not attempt to install or upgrade.</p> <p>CRDs are never installed on upgrade or rollback. Helm will only create CRDs on installation operations.</p>"},{"location":"interview-questions/helm/#you-have-installed-the-chart-which-has-crd-now-you-have-uninstalled-the-chart-what-will-happen-to-the-created-crds","title":"You have installed the chart which has CRD. Now you have uninstalled the chart, what will happen to the created CRDs ?","text":"<p>The created CRDs will not be deleted automatically during helm uninstall. We have to explicitly delete the CRDs.</p>"},{"location":"interview-questions/helm/#what-is-the-default-timeout-wile-installing-each-kubernetes-object-using-helm","title":"What is the default timeout wile installing each kubernetes object using Helm ?","text":"<p>The default duration time to wait for any individual Kubernetes operation (like Jobs for hooks) (default 5m0s).</p> <p>We are override this timeout limit by passing the cli flag <code>--timeout</code> to helm install/update command.</p> <pre><code>helm install mysql devopspilot/mysql -n database --timeout 10m\n</code></pre>"},{"location":"interview-questions/helm/#you-are-going-to-install-the-chart-which-has-some-hooks-while-installing-the-chart-you-want-to-skip-those-hooks-is-it-possible","title":"You are going to install the chart which has some hooks. While installing the chart you want to skip those hooks. Is it possible ?","text":"<p>Yes its possible to skip the helm hooks during installation by passing the cli flag <code>--no-hooks</code></p> <pre><code>helm install easyclaim-backend devopspilot/easyclaim-backend --no-hooks\n</code></pre>"},{"location":"interview-questions/helm/#while-installing-the-chart-you-have-passed-two-valuesyaml-file-for-the-helm-install-command-which-has-the-highest-priority","title":"While installing the chart, you have passed two values.yaml file for the helm install command, which has the highest priority ?","text":"<p>The rightmost values.yaml file passed as cli flag to helm install command has highest priority.</p> <pre><code>helm install mysql devopspilot/mysql -f values.yaml -f values-dev.yaml\n</code></pre>"},{"location":"interview-questions/helm/#while-installing-the-chart-you-have-specified-both-valuesyaml-and-set-cli-flag-for-the-helm-install-command-what-will-happen-now","title":"While installing the chart, you have specified both values.yaml and <code>--set</code> cli-flag for the helm install command, what will happen now ?","text":"<p>If both are passed, <code>--set</code> values are merged into passed values.yaml and then the values.yaml file is passed to helm install command.</p> <pre><code>helm install mysql devopspilot/mysql --set deploymentType=statefulset -f values.yaml\n</code></pre>"},{"location":"interview-questions/helm/#how-will-you-define-dependency-charts","title":"How will you define dependency charts ?","text":"<p>We can define dependency chart in parent Chart.yaml under <code>dependencies</code> field.</p> <pre><code>apiVersion: v2\nname: easyclaim\nversion: 1.0.0\ndescription: Helm chart for deploying Easyclaim application\nappVersion: 1.0.0\n\ndependencies:\n  - name: easyclaim-frontend\n    version: 1.0.0\n    repository: https://devopspilot.com/helm/charts\n  - name: easyclaim-backend\n    version: 1.0.0\n    repository: https://devopspilot.com/helm/charts\n  - name: mysql\n    version: 1.0.0\n    repository: https://devopspilot.com/helm/charts\n</code></pre> <p>Official Documentation</p>"},{"location":"interview-questions/helm/#you-have-a-chart-locally-and-defined-couple-of-dependency-charts-in-chartyaml-file-whether-you-can-directly-install-the-chart-or-you-have-to-run-any-other-commands-before-running-helm-install-command","title":"You have a chart locally and defined couple of dependency charts in Chart.yaml file. Whether you can directly install the chart or you have to run any other commands before running helm install command ?","text":"<p>We have to run <code>helm dependency update</code> command so that the dependency charts will be downloaded and stored in <code>charts</code> directory and then we can install the chart.</p> <pre><code>helm dependency update\n</code></pre> <pre><code>Output:\nHang tight while we grab the latest from your chart repositories...\n...Successfully got an update from the \"devopspilot\" chart repository\nUpdate Complete. \u2388Happy Helming!\u2388\nSaving 3 charts\nDownloading easyclaim-frontend from repo https://devopspilot.com/helm/charts\nDownloading easyclaim-backend from repo https://devopspilot.com/helm/charts\nDownloading mysql from repo https://devopspilot.com/helm/charts\nDeleting outdated charts\n</code></pre>"},{"location":"interview-questions/helm/#you-have-defined-couple-of-dependency-charts-in-which-order-the-charts-will-be-installed","title":"You have defined couple of dependency charts. In which order the charts will be installed ?","text":"<p>First all the charts will be merged together and then the manifest files will be deployed in the right order.</p> <p>Helm has the intelligence to install all the manifests in right order. We no need to handle it manually.</p>"},{"location":"interview-questions/helm/#how-will-you-push-the-helm-chart-to-chart-museum","title":"How will you push the helm chart to Chart museum ?","text":""},{"location":"interview-questions/helm/#how-will-you-push-the-helm-chart-to-jfrog-artifactory-helm-repository","title":"How will you push the helm chart to Jfrog artifactory helm repository ?","text":""},{"location":"interview-questions/helm/#is-it-possible-to-skip-the-installation-of-crds-while-installing-the-chart","title":"Is it possible to skip the installation of crds while installing the chart ?","text":"<p>Yes, its possible to skip the installation of CRDs while installing the chart by passing argument <code>--skip-crds</code></p> <pre><code>helm install mysql devopspilot/mysql --skip-crds\n</code></pre>"},{"location":"interview-questions/helm/#is-it-possible-to-install-the-chart-using-helm-upgrade-if-possible-how-to-do-it","title":"Is it possible to install the chart using helm upgrade ? If possible how to do it","text":"<p>Yes, its possible to install the chart using the helm upgrade by passing argument <code>--install</code></p> <p>If the chart is already installed it will upgrade or it will install the chart</p> <pre><code>helm upgrade --install mysql devopspilot/mysql\n</code></pre>"},{"location":"interview-questions/helm/#during-the-helm-upgrade-if-the-helm-install-is-failed-will-it-rollback-to-previous-version","title":"During the helm upgrade, if the helm install is failed, will it rollback to previous version ?","text":"<p>By default no, by passing argument --atomic, it can rollback automatically to previous version</p> <pre><code>helm upgrade --atomic --cleanup-on-fail mysql devopspilot/mysql\n</code></pre>"},{"location":"interview-questions/linux-commands/","title":"Linux commands Interview Questions","text":""},{"location":"interview-questions/linux-commands/#basics","title":"Basics","text":""},{"location":"interview-questions/linux-commands/#how-to-find-the-no-of-arguments-passed","title":"How to find the no of arguments passed","text":"<pre><code>$# --&gt; will give the no of arguments passed while invoking the shellscript\n</code></pre>"},{"location":"interview-questions/linux-commands/#how-to-get-the-name-of-the-shell-script-file-inside-the-script","title":"How to get the name of the shell script file inside the script","text":"<pre><code>$0 will give the script name\n</code></pre>"},{"location":"interview-questions/linux-commands/#how-to-know-whether-the-last-command-is-executed-successfully","title":"How to know whether the last command is executed successfully","text":"<pre><code>$? --&gt; will return the status code of the last command executed\n</code></pre>"},{"location":"interview-questions/linux-commands/#how-to-get-the-last-line-from-the-file","title":"How to get the last line from the file","text":"<pre><code>tail -1 file_name (By default tail file_name will return last 10 lines of file, if we pass -3 it will show the last three lines)\n</code></pre>"},{"location":"interview-questions/linux-commands/#how-to-get-the-first-line-from-the-file","title":"How to get the first line from the file","text":"<pre><code>head -1 file_name (By default tail file_name will return first 10 lines of file, if we pass -3 it will show the first 3 lines)\n</code></pre>"},{"location":"interview-questions/linux-commands/#how-to-get-third-element-from-each-line","title":"How to get third element from each line","text":"<pre><code>awk '{print $3}' filename\nps -aux | awk '{print $3}'\n</code></pre>"},{"location":"interview-questions/linux-commands/#how-to-write-a-function-in-shell-script","title":"How to write a function in shell script","text":"<pre><code>#!/bin/sh\n\n# Define your function here\nHello () {\n  echo \"Hello World $1 $2\"\n  return 10\n}\n\n# Invoke your function\nHello Zara Ali\n\n# Capture value returned by last command\nret=$?  # For function it will return return_value, for others it will return status code\necho \"Return value is $ret\"\n</code></pre>"},{"location":"interview-questions/linux-commands/#intermediate","title":"Intermediate:","text":""},{"location":"interview-questions/linux-commands/#the-history-command-cannot-be-executed-from-bash-shell-script-but-it-will-work-in-c-shell","title":"The history command cannot be executed from bash shell script, but it will work in c shell","text":""},{"location":"interview-questions/linux-commands/#how-would-you-compare-the-strings-in-script","title":"How would you compare the strings in script","text":"<pre><code>The test command is used to compare the text strings. The text command compares text strings by comparing each character in each string \n</code></pre>"},{"location":"interview-questions/linux-commands/#how-to-redirect-both-the-standard-output-and-standard-error-to-the-same-location","title":"How to redirect both the standard output and standard error to the same location","text":"<pre><code>command1 &gt; out.txt 2&gt; err.txt\n</code></pre>"},{"location":"interview-questions/linux-commands/#what-are-the-default-permissions-of-the-file-when-it-is-created","title":"what are the default permissions of the file when it is created","text":"<pre><code>-rw-r--r-- 1\n</code></pre>"},{"location":"interview-questions/linux-commands/#determine-the-output-of-the-command","title":"Determine the output of the command","text":"<pre><code>echo ${new:-variable}\noutput: variable\n</code></pre> <p>Here new is the variable name, if this variable name is already defined, it will take that value, else it will pass this default value \"variable\" to the variable name \"new\"</p>"},{"location":"interview-questions/linux-commands/#how-to-get-part-of-the-string-with-echo-command-only","title":"How to get part of the string with echo command only","text":"<pre><code>echo ${variable_name:2:6} \n</code></pre> <p>where 2 is the staring index and 6 is the count of characters after the starting index</p>"},{"location":"interview-questions/linux-commands/#rewrite-the-command-to-print-the-sentence-and-convert-the-variable-to-plural","title":"Rewrite the command to print the sentence and convert the variable to plural","text":"<pre><code>variable=\"plane\"; echo \"I like ${variable}s\"\n</code></pre> <p>OUTPUT:</p> <pre><code>I like planes\n</code></pre>"},{"location":"interview-questions/linux-commands/#to-print-the-first-array-element","title":"To print the first array element","text":"<pre><code>#!/bin/bash\narray={\"Hi\", \"my\", \"name\", \"is\", \"vignesh\"}\necho ${array[0]}\n</code></pre>"},{"location":"interview-questions/linux-commands/#to-print-all-elements-of-array-and-its-index","title":"To print all elements of array and its index","text":"<p>echo ${array[@]} -- &gt;Printing all array elements echo ${!array[@]} \u2192 printing array index</p>"},{"location":"interview-questions/linux-commands/#experienced","title":"Experienced","text":""},{"location":"interview-questions/linux-commands/#what-is-crontab","title":"what is crontab","text":"<p>The crontab is a list of commands that you want to run on a regular schedule and also the name of the command used to manage the list.</p> <ul> <li> <p>Crontab stand for \"cron table\" because it uses the job scheduler cron to execute the tasks</p> </li> <li> <p>The schedule is called the crontab, which is also the name of the program used to edit that schedule.</p> </li> </ul>"},{"location":"interview-questions/linux-commands/#how-many-fields-are-present-in-a-crontab-file-and-what-does-each-field-specify","title":"How many fields are present in a crontab file and what does each field specify?","text":"<p>The crontab file has fix fields,</p> <ul> <li> <p>The first five fields tell cron when to execute the command : minute(0-59), hour(0-23, day(1-31),)  </p> <p>month(1-12), and the day of the week (0-6) 0-sunday</p> </li> <li> <p>The sixth field contains the command to be executed</p> </li> </ul>"},{"location":"interview-questions/linux-commands/#what-are-the-two-files-of-crontab-command","title":"what are the two files of crontab command ?","text":"<ul> <li> <p>cron.allow - It decides which users need to be permitted from using the crontab command</p> </li> <li> <p>cron.deny - It decides which users need to be prevented from using the crontab command  </p> <pre><code>Redhat/centos --&gt; /var/spool/cron directoryDEbian/ubuntu --&gt; /cron/crontab directory\n</code></pre> </li> </ul>"},{"location":"interview-questions/linux-commands/#what-command-needs-to-be-used-to-take-the-backup","title":"what command needs to be used to take the backup?","text":"<p>tar -&gt; tape archive tar -czvf folder_name -&gt; for compressing and creating the package for particular folder tar -xzvf package_name -&gt; for extracting the package</p>"},{"location":"interview-questions/linux-commands/#what-are-the-different-commands-available-to-check-the-disk-usage","title":"What are the different commands available to check the disk usage","text":"<p>df - This command is used to check the free disk space du - This command is used to check the directory wise disk space dfspace - This command is used to check the free disk space in term of MB</p>"},{"location":"interview-questions/linux-commands/#what-are-the-different-communication-commands-available-in-the-shell","title":"what are the different communication commands available in the shell?","text":"<p>mail - which will call the mail binary to send and read mails news - which is used to read the system wide news to standard output wall(write to all) - It is used to send out shutdown messages to all users motd(message of the day) -</p>"},{"location":"interview-questions/linux-commands/#how-to-find-out-the-total-disk-space-used-by-a-specific-user","title":"How to find out the total disk space used by a specific user","text":"<p>du -s /home/user_name</p>"},{"location":"interview-questions/linux-commands/#how-to-debug-the-problems-encountered-in-shell-scriptprogram","title":"How to debug the problems encountered in shell script/program?","text":"<ul> <li> <p>By adding logs</p> </li> <li> <p>By set -x</p> </li> </ul>"},{"location":"interview-questions/linux-commands/#what-is-the-difference-between-and","title":"what is the difference between = and == ?","text":"<ul> <li> <p>= -&gt; used for assigning value to the variable</p> </li> <li> <p>== -&gt; used for string comparison  </p> <p>The = operator in test command or within [] will used for comparison</p> </li> </ul>"},{"location":"interview-questions/linux-commands/#how-to-open-a-read-only-file-in-a-shell","title":"How to open a read only file in a shell","text":"<p>vi -R file_name</p>"},{"location":"interview-questions/linux-commands/#how-can-the-contents-of-a-file-inside-the-jar-be-read-without-extracting-in-a-shell-script","title":"How can the contents of a file inside the jar be read without extracting in a shell script?","text":"<p>tar -tvf package_name.tar</p> <ul> <li> <p>t -&gt; table 0f contents</p> </li> <li> <p>v -&gt; verbose</p> </li> <li> <p>f -&gt; file</p> </li> </ul>"},{"location":"interview-questions/linux-commands/#how-can-you-pass-parameters-to-the-shell-script","title":"How can you pass parameters to the shell script ?","text":"<p>./script.sh param1 param2</p>"},{"location":"interview-questions/linux-commands/#how-to-find-all-the-files-modified-in-less-than-3-days-and-print-the-record-count-odf-each","title":"How to find all the files modified in less than 3 days and print the record count odf each?","text":"<p>find . -type f -mtime -3 -exec ls -l {} ; &gt; last3days.txt</p> <ul> <li> <p>-type f \u2192 search only for files</p> </li> <li> <p>-mtime -3 \u2192 for last three days</p> </li> </ul>"},{"location":"interview-questions/linux-commands/#throw-a-error-message-if-2-arguments-are-not-passed","title":"Throw a error message if 2 arguments are not passed","text":"<pre><code>if [ $# -ne 2]\n    echo \"Enter two parameters\"\n</code></pre> <p>Here $# will get the no of parameters passed</p>"},{"location":"interview-questions/linux-commands/#calculate-a-real-number-calculation-directly-from-terminal-and-not-any-shell-script","title":"Calculate a real number calculation directly from terminal and not any shell script","text":"<p>echo 7.56 + 4.432 | bc</p>"},{"location":"interview-questions/linux-commands/#how-can-you-get-the-value-of-pi-till-a-100-decimal-places","title":"How can you get the value of pi till a 100 decimal places","text":"<p>echo \"scale=100; 4*a(1)\" | bc -l</p>"},{"location":"interview-questions/linux-commands/#for-debugging-use-set-x","title":"For debugging use set -x","text":"<p>will print the actual script and also the errors in the script</p>"},{"location":"interview-questions/linux-commands/#convert-this-format-using-shell-script-yyyymmdd-1st-jan-2021","title":"Convert this format using shell script (YYYYMMDD -&gt; 1<sup>st</sup> jan 2021)","text":"<pre><code>date +'%d %b %Y'\n12 Jan 2021\n</code></pre>"},{"location":"interview-questions/linux-commands/#how-do-you-list-all-the-running-services-in-any-linux-machine","title":"How do you list all the running services in any linux machine","text":""},{"location":"interview-questions/linux-commands/#how-to-clean-up-the-logs-when-the-system-storage-is-getting-full","title":"How to clean up the logs, when the system storage is getting full","text":""},{"location":"jenkins/configuration/global-tool-configurations/","title":"Global Tool Configurations","text":"<p>In linux servers, we can install only one version of the tool at a time eg: we can install only maven 3.6 version and we cannot have both maven 3.6 and 3.7 version in same server.</p> <p>By configuring Global Tool configuration, we can have multiple version of maven, nodejs, gradle, java and ant</p>"},{"location":"jenkins/configuration/global-tool-configurations/#how-to-configure-multiple-versions-of-maven","title":"How to configure multiple versions of maven","text":"<p>From Jenkins dashboard, click on Manage Jenkins</p> <p></p> <p>Click on Global Tool Configurations</p> <p></p> <p>Click on Maven installations..</p> <p></p> <p>Scroll down and click on Add Maven and give unique name in Name feild and select the maven version 3.6.3 from the dropdown</p> <p></p> <p>Now click on Add Maven once again</p> <p></p> <p>Add the name and select the version 3.8.1 and click on save</p> <p></p>"},{"location":"jenkins/configuration/global-tool-configurations/#how-to-define-maven-in-jenkinsfile","title":"How to define maven in Jenkinsfile","text":"<pre><code>tools {\n    maven 'maven-3.6.3'\n}\n</code></pre> <p>maven-3.6.3 is the unique name which we have given in the global tool configurations.</p> <p>When we use maven for first time by referring to this name and run the job, jenkins will automatically download the maven tar file, extract and save it in /var/lib/jenkins/tools/ folder</p> <p>From the next build it will use the maven from that folder, it won't download everytime</p> <p></p> <p></p>"},{"location":"jenkins/configuration/global-tool-configurations/#how-to-configure-multiple-versions-of-nodejs","title":"How to configure multiple versions of nodejs","text":"<p>In Global Tool Configuration scroll down click on NodeJS installations..</p> <p></p> <p>Click on Add NodeJs add the name and selcet the version 10.0.0(As per your requirements)</p> <p></p> <p>Now click on Add NodeJs once again, give the name and select the required version and click on save</p> <p></p>"},{"location":"jenkins/configuration/global-tool-configurations/#how-to-use-nodejs-in-jenkinsfile","title":"How to use nodejs in Jenkinsfile","text":"<pre><code>tools {\n    nodejs \"nodejs-10.0.0\"\n}\n</code></pre> <p>nodejs-10.0.0 is the unique name which we have given in the global tool configurations.</p> <p>When we use nodejs for first time by referring to this name and run the job, jenkins will automatically download the mnodejs tar file, extract and save it in /var/lib/jenkins/tools/ folder</p> <p>From the next build it will use the nodejs from that folder, it won't download everytime</p> <p></p> <p></p>"},{"location":"jenkins/configuration/how-to-install-plugins/","title":"How to install plugins in Jenkins","text":""},{"location":"jenkins/configuration/how-to-install-plugins/#commonly-used-plugins-and-their-uses","title":"Commonly used plugins and their uses","text":"<ul> <li> <p>Artifactory - To interact with Jfrog Artifactory</p> </li> <li> <p>Kubernetes - To create jenkins agents in kubernetes cluster</p> </li> <li> <p>Kubernetes CLI - Allows you to configure kubectl in your job to interact with Kubernetes clusters. To deploy kubernetes configurations/objects/yamls to kubernetes cluster.</p> </li> <li> <p>Deploy to container - To deploy war file to tomcat</p> </li> <li> <p>Docker - To build, run and push docker images in freestyle job</p> </li> <li> <p>Docker Pipeline - To build, run and push docker images in Pipeline job</p> </li> <li> <p>NodeJs - To install multiple versions of nodejs from Global tool configuration</p> </li> <li> <p>Slack Notification - To post message to slack channel, generally we will post build status to slack channel</p> </li> <li> <p>SonarQube Scanner - To connect to the sonarqube server and install the sonarqube scanner from global tool configuration</p> </li> <li> <p>Anchore Container Image Scanner - To connect to Anchore engine for docker image scanning</p> </li> <li> <p>Job Configuration History - This plugin saves a copy of the configuration file of jobs and agents (config.xml) for every change made and of the system configuration. Deleted jobs can be restored.</p> </li> <li> <p>Seed Jenkins - To create Jenkins project automatically from DSL groovy script</p> </li> <li> <p>Declarative Pipeline Migration Assistant - Generate Declarative pipeline script(Jenkinsfile) from freestyle project</p> </li> </ul>"},{"location":"jenkins/configuration/how-to-install-plugins/#install-plugin","title":"Install Plugin","text":"<p>From Jenkins dashboard, click on Manage Jenkins</p> <p></p> <p>Click on Manage Plugins</p> <p></p> <p>Click on Availabe tab and type the plugin name in search box, select the plugin and click on Install without restart</p> <p></p> <p></p>"},{"location":"jenkins/configuration/how-to-restore-deleted-job/","title":"How to restore deleted job in Jenkins","text":""},{"location":"jenkins/configuration/how-to-restore-deleted-job/#prerequisites","title":"Prerequisites","text":"<ul> <li><code>Job Configuration History</code> plugin should be installed in Jenkins.</li> </ul>"},{"location":"jenkins/configuration/how-to-restore-deleted-job/#references","title":"References","text":"<ul> <li>How to install plugins in Jenkins</li> </ul>"},{"location":"jenkins/configuration/how-to-restore-deleted-job/#restore-deleted-jobs","title":"Restore deleted Jobs","text":"<p>Lets delete a job first</p> <p></p> <p>Go to Jenkins Homepage/Dashboard \u2192 click on <code>Job Config History</code></p> <p></p> <p>Click on <code>Show deleted jobs only</code> and click on restore icon next to the Job name</p> <p></p> <p></p> <p>Now Job is restored but not enabled to run the pipeline</p> <p>Click on <code>Enbale</code> to enable the restored job</p> <p></p> <p>Now pipeline is fully enabled and we can run the pipeline now.</p> <p></p>"},{"location":"jenkins/configuration/how-to-store-credentials-in-jenkins/","title":"How to store credentials in Jenkins","text":""},{"location":"jenkins/configuration/how-to-store-credentials-in-jenkins/#to-store-username-and-passsword-of-anything-like-github-dockerhub","title":"To store username and passsword of anything like github, dockerhub","text":"<p>From Jenkins dashboard, click on Manage Jenkins</p> <p></p> <p>Click on Manage Credentials</p> <p></p> <p>Click on Jenkins</p> <p></p> <p>Click on Global credentials</p> <p></p> <p>Click on Add Credentials</p> <p></p> <p>Select kind as Username with password, enter username, password and enter unique id and click on OK</p> <p></p>"},{"location":"jenkins/configuration/how-to-store-credentials-in-jenkins/#to-store-ssh-private-key","title":"To store ssh private key","text":"<p>Click on Add Credentials Select kind as SSH Username with private key enter the username, click on Enter directly and then click on Add and paste your private key and click on ok</p> <p></p> <p></p>"},{"location":"jenkins/configuration/how-to-store-credentials-in-jenkins/#to-store-any-token-eg-gitlab-jfrog-artifactory-and-sonarqube-token","title":"To store any token eg: gitlab, Jfrog, artifactory and sonarqube token","text":"<p>Click on Add Credentials Select kind as Secret text enter the token, id and click on OK</p> <p></p>"},{"location":"jenkins/other-topics/how-to-create-a-job-automatically-using-jobdsl/","title":"How to create a Job automatically using Seed Jenkins plugin and Job DSL script","text":""},{"location":"jenkins/other-topics/how-to-create-a-job-automatically-using-jobdsl/#how-it-works","title":"How it works ?","text":"<p>Create a Freestyle Job called <code>Seed Job</code> and define the Job DSL script.</p> <p>In the Seed JOb use the <code>Process Job DSLs</code> step to execute the Job DSL script to create a required job with all necessary configurations.</p> <p>Job DSL script can be defined in two ways:</p> <ul> <li> <p>Directly hardcoding in the Seed Job</p> </li> <li> <p>Store the Job DSL script in git repository and refer it in</p> </li> </ul> <p>Job DSL script is a groovy script which uses the <code>Job DSL</code> plugin to define the structure.</p> <p>Job DSL script Reference:</p> <ul> <li> <p>Official limited sub-set of the API reference</p> </li> <li> <p>Complete DSL API reference \u2192 /plugin/job-dsl/api-viewer/index.html</p> </li> </ul>"},{"location":"jenkins/other-topics/how-to-create-a-job-automatically-using-jobdsl/#prerequisites","title":"Prerequisites","text":"<ul> <li><code>Seed Jenkins</code> plugin should be installed in Jenkins.</li> </ul>"},{"location":"jenkins/other-topics/how-to-create-a-job-automatically-using-jobdsl/#references","title":"References","text":"<ul> <li>How to install plugins in Jenkins</li> </ul>"},{"location":"jenkins/other-topics/how-to-create-a-job-automatically-using-jobdsl/#creating-seed-job-by-declaring-job-dsl-script-in-job-itself","title":"Creating Seed Job by declaring Job DSL script in Job itself","text":"<p>From Jenkins dashboard click on <code>New Item</code> create one <code>Freeststyle project</code> named <code>Seed JOb</code></p> <pre><code>def gitUrl = \"https://github.com/example/project.git\"\n\njob(\"MyProject-Build\") {\n    description \"Builds MyProject from master branch.\"\n    parameters {\n        stringParam('COMMIT', 'HEAD', 'Commit to build')\n    }\n    scm {\n        git {\n            remote {\n                url gitUrl.\n                branch \"origin/master\"\n            }\n            extensions {\n                wipeOutWorkspace()\n                localBranch master\n            }\n        }\n    }\n    steps {\n        shell \"Look: I'm building master!\"\n    }\n}\n</code></pre>"},{"location":"jenkins/pipelines/how-to-create-pipeline-job/","title":"How to create pipeline job in Jenkins","text":""},{"location":"jenkins/pipelines/how-to-create-pipeline-job/#approach-1-jenkins-pipeline-scriptdeclarative-pipeline-in-jenkins-editor-itself","title":"Approach 1: Jenkins pipeline script(Declarative pipeline) in Jenkins editor itself","text":"<p>This approach is good when we want to test some feature quickly. Now we will create a Job to print \"Hello World\" This approach is not recommended for realtime project.</p> <p>From Jenkins dashboard, click on New Item</p> <p></p> <p>Enter the job name, select Pipeline and click on OK</p> <p></p> <p>Scroll down, go to Pipeline section, in Definition select Pipeline script, from try sample Pipeline... select Hello World sample pipeline script is added. click on Save</p> <p>In this we have Hello stage, which will execute a echo command to print \"Hello World\"</p> <p></p> <p>Click on Build Now</p> <p></p> <p>Click on build no #1</p> <p></p> <p>Click on Console Output Now we can see the Hello World is printed on the screen</p> <p></p>"},{"location":"jenkins/pipelines/how-to-create-pipeline-job/#approach-2-jenkins-pipeline-scriptdeclarative-pipeline-in-jenkinsfile","title":"Approach 2: Jenkins pipeline script(Declarative pipeline) in Jenkinsfile","text":"<p>In this approach, the pipeline script is written to a file called Jenkinsfile then this file is added to the source code repository eg: Github, Gitlab</p> <p>This approach is used in realtime project.</p> <p>The Jenkinsfile can be named to anything like this Jenkinsfile-dev, 01-Jenkinsfile-helloworld</p> <p>While running the pipeline, it will fetch the Jenkinsfile and execute all the stages defined in the Jenkinsfile.</p> <p>I have a sample Jenkinsfile named 01-Jenkinsfile-helloworld in the cicd folder of the following github repo hello-world</p> <pre><code>pipeline {\n    agent any\n    stages {\n        stage ('Build') {\n            steps {\n                sh 'echo Hello Build stage'\n            }\n        }\n        stage ('Test') {\n            steps {\n                sh 'echo hello Test stage'\n            }\n        }\n    }\n}\n</code></pre> <p>In above Jenkinsfile I have created two stages Build and Test, in both the stages for now I am just executing the echo command in sh step</p> <p>Now lets see how to create a pipeline job using Jenkinsfile from github repository.</p> <p>From Jenkins dashboard, click on New Item</p> <p></p> <p>Enter the job name, select Pipeline and click on OK</p> <p></p> <p>Scroll down, go to Pipeline section, in Definition select Pipeline script from SCM, select Git from SCM. In Repository URL give the github url https://github.com/vigneshsweekaran/hello-world.git</p> <p>This is a public repository so credentials are not required. If your reository is private then we need credentials to pull the code. Store the username and password in credentials. Then from the Credentials drop down select your git repository credential.</p> <p>How to store credentials in Jenkins</p> <p></p> <p>Now enter the branch name <code>master</code> in Branches to build field, then enter the Jenkinsfile name <code>cicd/01-Jenkinsfile-helloworld</code> in Script path click on save</p> <p></p> <p>Click on Build Now then go to Console Output</p> <p>From the Console Output first line, we can see first it fetches the cicd/01-Jenkinsfile-helloworld from Github, then clone the source code and executes the steps inside each stage.</p> <p></p> <p>Echo commands from stages are printed to console output</p> <p></p>"},{"location":"jenkins/pipelines/jenkinsfile-to-build-docker-image-push-deploy-to-same-server/","title":"How to write a Jenkinsfile to build a Maven project, build and push docker image to Dockerhub and deploy the container to same server","text":""},{"location":"jenkins/pipelines/jenkinsfile-to-build-docker-image-push-deploy-to-same-server/#prerequisites","title":"Prerequisites","text":"<ul> <li> <p><code>maven</code>, <code>Docker</code> plugins should be installed in Jenkins.</p> </li> <li> <p>Configure specific version of maven in Jenkins <code>Global Tool Configuration</code></p> </li> <li> <p>Store dockerhub credential in Jenkins credentials with type <code>Username with password</code> and give a unique id as <code>docker_credential</code></p> </li> </ul> <p>I have a sample hello-world maven project in github hello-world</p> <p>Fork this project hello-world and update the required feilds in the Jenkinsfile <code>04-Jenkinsfile-docker-build-push-deploy-same-server</code></p> <p>Maven is a build tool used to compile, test and package the application developed using Java programming language.</p> <p>Jenkinsfile</p> <pre><code>pipeline {\n    agent any\n    tools {\n        maven 'maven-3.6.3' \n    }\n    environment {\n        DATE = new Date().format('yy.M')\n        TAG = \"${DATE}.${BUILD_NUMBER}\"\n    }\n    stages {\n        stage ('Build') {\n            steps {\n                sh 'mvn clean package'\n            }\n        }\n        stage('Docker Build') {\n            steps {\n                script {\n                    docker.build(\"vigneshsweekaran/hello-world:${TAG}\")\n                }\n            }\n        }\n        stage('Pushing Docker Image to Dockerhub') {\n            steps {\n                script {\n                    docker.withRegistry('https://registry.hub.docker.com', 'docker_credential') {\n                        docker.image(\"vigneshsweekaran/hello-world:${TAG}\").push()\n                        docker.image(\"vigneshsweekaran/hello-world:${TAG}\").push(\"latest\")\n                    }\n                }\n            }\n        }\n        stage('Deploy'){\n            steps {\n                sh \"docker stop hello-world | true\"\n                sh \"docker rm hello-world | true\"\n                sh \"docker run --name hello-world -d -p 9004:8080 vigneshsweekaran/hello-world:${TAG}\"\n            }\n        }\n    }\n}\n</code></pre> <p>In the <code>tools</code> block we have used <code>maven</code> definition to refer the maven installation maven-3.6.3 configured in Jenkins Global tool configuration.</p> <p>In the <code>environment</code> block we have created two environment variables <code>DATE</code> and <code>TAG</code> The <code>TAG</code> environment varaible is used the tag the generated docker image.</p> <p>In the stages block we have created four stages <code>Build</code>, <code>Docker Build</code>, <code>Pushing Docker Image to Dockerhub</code> and <code>Deploy</code>.</p> <p>In the <code>Build</code> stage we are executing <code>mvn clean package</code> command to compile and package the java application.</p> <p>In the <code>Docker Build</code> stage we have used <code>docker</code> plugin to build the docker image</p> <pre><code>docker.build(\"vigneshsweekaran/hello-world:${TAG}\")\n</code></pre> <p>vigneshsweekaran \u2192 dockerhub account name</p> <p>hello-world \u2192 Repository name/Image name</p> <p>TAG \u2192 Unique tag for the Image, defined in environment variable</p> <p>In the <code>Pushing Docker Image to Dockerhub</code> we are pushing the docker images with two tags unique tag(${TAG}) and the latest tag to dockerhub using credentials stored in Jenkins credentials</p> <pre><code>docker.withRegistry('https://registry.hub.docker.com', 'docker_credential') {\n    docker.image(\"vigneshsweekaran/hello-world:${TAG}\").push()\n    docker.image(\"vigneshsweekaran/hello-world:${TAG}\").push(\"latest\")\n}\n</code></pre> <p>https://registry.hub.docker.com \u2192 Dockerhub registry url</p> <p>docker_credential \u2192 Jenkins credential id, where the dockerhub credentials are stored</p> <p>First we are pushing the docker image with unique tag(${TAG}) to the dockerhub</p> <pre><code>docker.image(\"vigneshsweekaran/hello-world:${TAG}\").push()\n</code></pre> <p>Second we are retagging the generated docker image to latest tag and pushing to dockerhub.</p> <p>Tagging every image to latest tag, will help in get the latest changes everytime.</p> <pre><code>docker.image(\"vigneshsweekaran/hello-world:${TAG}\").push(\"latest\")\n</code></pre> <p>In the <code>Deploy</code> stage we are creating the docker container with the latest docker image in the same Jenkins server.</p> <p>NOTE: Here I am deploying docker container to the same Jenkins server, this is only for testing purpose. In real time scenario, we will be deploying the docker container in diffrent dedicated servers.</p> <pre><code>sh \"docker stop hello-world | true\"\nsh \"docker rm hello-world | true\"\nsh \"docker run --name hello-world -d -p 9004:8080 vigneshsweekaran/hello-world:${TAG}\"\n</code></pre> <p>We are creating the container with unique name <code>hello-world</code>, because we can stop and remove the docker container by referring the container name. The generated container id will be diffrent for each time when we create a container.</p> <p>Inside the docker container we have tomcat, by default tomat is exposed on port 8080. We are mapping the port 9004 of the Jenkins server to the port 8080 of docker container.</p> <p>When we access the application by http://jenkins-server-ip-address:9004/hello-world, the 9004 will be port-forwarded to 8080 of the docker container</p> <p>vigneshsweekaran/hello-world:${TAG} \u2192 Generated docker image name and tag</p> <pre><code>sh \"docker run --name hello-world -d -p 9004:8080 vigneshsweekaran/hello-world:${TAG}\"\n</code></pre> <p>And we are executing the docker stop and rm command to remove the old container by referring the container name <code>hello-world</code>.</p> <pre><code>sh \"docker stop hello-world | true\"\nsh \"docker rm hello-world | true\"\n</code></pre>"},{"location":"jenkins/pipelines/jenkinsfile-to-build-docker-image-push-deploy-to-same-server/#issues","title":"Issues","text":"<ul> <li> <p>If you are getting error like <code>Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post</code> </p> <p> </p> </li> </ul> <p>Add <code>jenkins</code> user to <code>docker</code> group and restart Jenkins</p> <pre><code>sudo usermod -aG docker jenkins\nsudo systemctl restart jenkins\n</code></pre>"},{"location":"jenkins/pipelines/jenkinsfile-to-build-docker-image-push-deploy-to-same-server/#references","title":"References","text":"<ul> <li> <p>How to install plugins in Jenkins</p> </li> <li> <p>How to configure maven in Global Tool Configuration</p> </li> <li> <p>How to store credentials in Jenkins</p> </li> <li> <p>How to create pipeline job in Jenkins</p> </li> <li> <p>How to write a dockerfile for running a java application (*.war) in Apache tomcat webserver</p> </li> </ul>"},{"location":"jenkins/pipelines/jenkinsfile-to-build-docker-image-push-to-artifactory/","title":"How to write a Jenkinsfile to build a Maven project, build and push docker image to Jfrog artifactory and deploy the container to same server","text":""},{"location":"jenkins/pipelines/jenkinsfile-to-build-docker-image-push-to-artifactory/#prerequisites","title":"Prerequisites","text":"<ul> <li> <p><code>maven</code>, <code>Docker</code> plugins should be installed in Jenkins.</p> </li> <li> <p>Configure specific version of maven in Jenkins <code>Global Tool Configuration</code></p> </li> <li> <p>Store dockerhub credential in Jenkins credentials with type <code>Username with password</code> and give a unique id as <code>docker_credential</code></p> </li> </ul> <p>I have a sample hello-world maven project in github hello-world</p> <p>Fork this project hello-world and update the required feilds in the Jenkinsfile <code>05-Jenkinsfile-docker-build-push-to-artifactory</code></p> <p>Maven is a build tool used to compile, test and package the application developed using Java programming language.</p> <p>Jenkinsfile</p> <pre><code>pipeline {\n    agent any\n    tools {\n        maven 'maven-3.6.3' \n    }\n    environment {\n        DATE = new Date().format('yy.M')\n        TAG = \"${DATE}.${BUILD_NUMBER}\"\n    }\n    stages {\n        stage ('Build') {\n            steps {\n                sh 'mvn clean package'\n            }\n        }\n        stage('Docker Build') {\n            steps {\n                script {\n                    docker.build(\"default-docker-local/hello-world:${TAG}\")\n                }\n            }\n        }\n        stage('Pushing Docker Image to Jfrog Artifactory') {\n            steps {\n                script {\n                    docker.withRegistry('https://vigneshsweekaran.jfrog.io', 'artifactory-credential') {\n                        docker.image(\"default-docker-local/hello-world:${TAG}\").push()\n                        docker.image(\"default-docker-local/hello-world:${TAG}\").push(\"latest\")\n                    }\n                }\n            }\n        }\n        stage('Deploy'){\n            steps {\n                sh \"docker stop hello-world | true\"\n                sh \"docker rm hello-world | true\"\n                sh \"docker run --name hello-world -d -p 9004:8080 vigneshsweekaran.jfrog.io/default-docker-local/hello-world:${TAG}\"\n            }\n        }\n    }\n}\n</code></pre> <p>In the <code>tools</code> block we have used <code>maven</code> definition to refer the maven installation maven-3.6.3 configured in Jenkins Global tool configuration.</p> <p>In the <code>environment</code> block we have created two environment variables <code>DATE</code> and <code>TAG</code> The <code>TAG</code> environment varaible is used the tag the generated docker image.</p> <p>In the stages block we have created four stages <code>Build</code>, <code>Docker Build</code>, <code>Pushing Docker Image to Dockerhub</code> and <code>Deploy</code>.</p> <p>In the <code>Build</code> stage we are executing <code>mvn clean package</code> command to compile and package the java application.</p> <p>In the <code>Docker Build</code> stage we have used <code>docker</code> plugin to build the docker image</p> <pre><code>docker.build(\"vigneshsweekaran/hello-world:${TAG}\")\n</code></pre> <p>vigneshsweekaran \u2192 dockerhub account name hello-world \u2192 Repository name / Image name TAG \u2192 Unique tag for the Image, defined in environment variable</p> <p>In the <code>Pushing Docker Image to Dockerhub</code> we are pushing the docker images with two tags unique tag(${TAG}) and the latest tag to dockerhub using credentials stored in Jenkins credentials</p> <pre><code>docker.withRegistry('https://registry.hub.docker.com', 'docker_credential') {\n    docker.image(\"vigneshsweekaran/hello-world:${TAG}\").push()\n    docker.image(\"vigneshsweekaran/hello-world:${TAG}\").push(\"latest\")\n}\n</code></pre> <p>https://registry.hub.docker.com \u2192 Dockerhub registry url docker_credential \u2192 Jenkins credential id, where the dockerhub credentials are stored</p> <p>First we are pushing the docker image with uniwue tag(${TAG}) to the dockerhub</p> <pre><code>docker.image(\"vigneshsweekaran/hello-world:${TAG}\").push()\n``\n\nSecond we are retagging the generated docker image to latest tag and pushing to dockerhub.\n\nTagging every image to latest tag, will help in get the latest changes everytime.\n</code></pre> <p>docker.image(\"vigneshsweekaran/hello-world:${TAG}\").push(\"latest\")</p> <pre><code>In the `Deploy` stage we are creating the docker container with the latest docker image in the same Jenkins server.\n\nNOTE: Here I am deploying docker container to the same Jenkins server, this is only for testing purpose. In real time scenario, we will be deploying the docker container in diffrent dedicated servers.\n</code></pre> <p>sh \"docker stop hello-world | true\" sh \"docker rm hello-world | true\" sh \"docker run --name hello-world -d -p 9004:8080 vigneshsweekaran/hello-world:${TAG}\"</p> <pre><code>We are creating the container with unique name `hello-world`, because we can stop and remove the docker container by referring the container name. The generated container id will be diffrent for each time when we create a container.\n\nInside the docker container we have tomcat, by default tomat is exposed on port 8080. We are mapping the port 9004 of the Jenkins server to the port 8080 of docker container.\n\nWhen we access the application by http://jenkins-server-ip-address:9004/hello-world, the 9004 will be port-forwarded to 8080 of the docker container\n\nvigneshsweekaran/hello-world:${TAG} --&gt; Generated docker image name and tag\n</code></pre> <p>sh \"docker run --name hello-world -d -p 9004:8080 vigneshsweekaran/hello-world:${TAG}\" ``</p> <p>And we are executing the docker stop and rm command to remove the old container by referring the container name <code>hello-world</code>.</p> <pre><code>sh \"docker stop hello-world | true\"\nsh \"docker rm hello-world | true\"\n</code></pre>"},{"location":"jenkins/pipelines/jenkinsfile-to-build-docker-image-push-to-artifactory/#references","title":"References","text":"<ul> <li> <p>How to install plugins in Jenkins</p> </li> <li> <p>How to configure maven in Global Tool Configuration</p> </li> <li> <p>How to store credentials in Jenkins</p> </li> <li> <p>How to create pipeline job in Jenkins</p> </li> <li> <p>How to write a dockerfile for running a java application (*.war) in Apache tomcat webserver</p> </li> </ul>"},{"location":"jenkins/pipelines/jenkinsfile-to-build-maven-project-and-deploy-to-tomcat/","title":"How to write a Jenkinsfile to build a Maven project and deploy to Apache Tomcat webserver","text":""},{"location":"jenkins/pipelines/jenkinsfile-to-build-maven-project-and-deploy-to-tomcat/#prerequisites","title":"Prerequisites","text":"<ul> <li> <p><code>maven</code>, <code>Deploy to container</code> plugins should be installed in Jenkins.</p> </li> <li> <p>Configure specific version of maven in Jenkins <code>Global Tool Configuration</code></p> </li> </ul> <p>I have a sample hello-world maven project in github hello-world</p> <p>Fork this project hello-world and update the required fields in the Jenkinsfile <code>03-Jenkinsfile-deploy-to-tomcat</code></p> <p>Maven is a build tool used to compile, test and package the application developed using Java programming language.</p> <p>Jenkinsfile</p> <pre><code>pipeline {\n  agent any\n  tools {\n    maven 'maven-3.6.3' \n  }\n  stages {\n    stage ('Build') {\n      steps {\n        sh 'mvn clean package'\n      }\n    }\n    stage ('Deploy') {\n      steps {\n        script {\n          deploy adapters: [tomcat9(credentialsId: 'tomcat_credential', path: '', url: 'http://dayal-test.letspractice.tk:8081')], contextPath: '/pipeline', onFailure: false, war: 'webapp/target/*.war' \n        }\n      }\n    }\n  }\n}\n</code></pre> <p>In the <code>tools</code> block we have used <code>maven</code> definition to refer the maven installation maven-3.6.3 configured in Jenkins Global tool configuration.</p> <p>In the stages block we have created two stages <code>Build</code> and <code>Deploy</code>.</p> <p>In the <code>Build</code> stage we are executing <code>mvn clean package</code> command to compile and package the java application.</p> <p>It will compile the java code and generate the package in targets folder.</p> <p></p> <p>In the <code>Deploy</code> stage we are using the <code>Deploy to container</code> plugin to deploy the hello-world.war file to tomcat webserver.</p> <p>Parameters passed to <code>Deploy to container</code> plugin definition.</p> <ul> <li> <p>credentialsId: 'tomcat_credential' \u2192 Store the tomcat username and password in Jenkins credentials and pass the tomcat credential id here. I have stored the tomcat credentials in Jenkins and created the id as <code>tomcat_credential</code> </p> <p>Before storing the credentials in jenkins, create a user in Tomcat with <code>manager-script</code> role.  </p> <p>To create users in Tomcat, open the file /var/lib/tomcat9/conf/tomcat-users.xml </p> <pre><code>sudo vi /var/lib/tomcat9/conf/tomcat-users.xml\n</code></pre> <p>Go to end of the file and paste the following lines inside tomcat-users block and save it.</p> <pre><code>&lt;role rolename=\"manager-script\"/&gt;&lt;user username=\"deployer\" password=\"deployer\" roles=\"manager-script\"/&gt;\n</code></pre> <p> </p> <p>Here we have defined one role manager-script and created one user deployer and assigned the manager-script role to the deployer user.  </p> <p>Then restart the tomcat9</p> <pre><code>sudo systemctl restart tomcat9\n</code></pre> </li> <li> <p>url: 'http://152.70.71.239:8080/' \u2192 Your tomcat url</p> </li> <li> <p>contextPath: '/pipeline' \u2192 Context path to deploy in Tomcat</p> </li> <li> <p>onFailure: false \u2192 Flag used to control the deployment, I dont want to deploy If my pipeline JOb fails, thats why I am setting <code>onFailure</code> flag to <code>false</code></p> </li> <li> <p>war: 'target/*.war' \u2192 Your war file name</p> </li> </ul> <p></p>"},{"location":"jenkins/pipelines/jenkinsfile-to-build-maven-project-and-deploy-to-tomcat/#references","title":"References","text":"<ul> <li> <p>How to install plugins in Jenkins</p> </li> <li> <p>How to configure maven in Global Tool Configuration</p> </li> <li> <p>How to store credentials in Jenkins</p> </li> <li> <p>How to create pipeline job in Jenkins</p> </li> <li> <p>How to install Tomcat</p> </li> <li> <p>How to manually deploy the java application to Tomcat 9 webserver</p> </li> <li> <p>How to deploy the java application to Tomcat 9 webserver using maven</p> </li> </ul>"},{"location":"jenkins/pipelines/jenkinsfile-to-build-maven-project/","title":"How to write a Jenkinsfile to build a Maven project","text":""},{"location":"jenkins/pipelines/jenkinsfile-to-build-maven-project/#prerequisites","title":"Prerequisites","text":"<ul> <li> <p>maven plugin should be installed in Jenkins. By default maven plugin will be installed in Jenkins</p> </li> <li> <p>Configure specific version of maven in Jenkins Global Tool Configuration</p> </li> </ul> <p>I have a sample hello-world maven project in github hello-world</p> <p>Fork this project hello-world and update the required fields in the Jenkinsfile <code>02-Jenkinsfile-maven-build</code></p> <p>Maven is a build tool used to compile, test and package the application developed using Java programming language.</p> <p>Jenkinsfile</p> <pre><code>pipeline {\n  agent any\n  tools {\n    maven 'maven-3.6.3' \n  }\n  stages {\n    stage ('Build') {\n      steps {\n        sh 'mvn clean package'\n      }\n    }\n  }\n}\n</code></pre> <p>In the <code>tools</code> block we have used <code>maven</code> definition to refer the maven installation maven-3.6.3 configured in Jenkins Global tool configuration.</p> <p>We have created one stage called Build, here we are executing the mvn clean package command to compile and package the java application.</p> <p>It will compile the java code and generate the package in targets folder.</p> <p></p>"},{"location":"jenkins/pipelines/jenkinsfile-to-build-maven-project/#references","title":"References","text":"<ul> <li> <p>How to install plugins in Jenkins</p> </li> <li> <p>How to configure maven in Global Tool Configuration</p> </li> <li> <p>How to create pipeline job in Jenkins</p> </li> </ul>"},{"location":"jenkins/tutorials/generate-the-code-for-jenkinsfile-using-declarative-directive-generator/","title":"Generate the code for Jenkinsfile using Declarative Directive Generator","text":"<p>You may use many plugins in Jenkins, and finding the code for those plugins to use in Jenkinsfile is sometimes challenging. Declarative Directive Generator is helpful to generate the code to use in Jenkinsfile for most of the plugins and pipeline steps</p> <p>You can generate code for both Scripted and Declarative Jenkisnfile</p> <p>For Scripted Jenkinsfile use Snippet Generator and for Declarative Jenkisnfile use Declarative Directive Generator</p> <p>Reference: Snippet Generator</p>"},{"location":"jenkins/tutorials/generate-the-code-for-jenkinsfile-using-declarative-directive-generator/#how-to-go-to-snippet-generator","title":"How to go to Snippet Generator","text":"<p>In your Jenkins URL append path /pipeline-syntax E.g. https:jenkins.com/piepline-syntax</p> <p></p>"},{"location":"jenkins/tutorials/generate-the-code-for-jenkinsfile-using-declarative-directive-generator/#how-to-go-to-declarative-directive-generator","title":"How to go to Declarative Directive Generator","text":"<p>In your Jenkins URL append path /directive-generator E.g. https:jenkins.com/directive-generator then click on Declarative Directive Generator</p> <p></p>"},{"location":"jenkins/tutorials/generate-the-code-for-jenkinsfile-using-declarative-directive-generator/#how-to-go-to-declarative-directive-generator-from-pipeline-page","title":"How to go to Declarative Directive Generator from Pipeline Page","text":"<p>From any pipeline page, you can click on Pipeline Syntax to go to Snippet Generator or Declarative Directive Generator</p> <p></p>"},{"location":"jenkins/tutorials/generate-the-code-for-jenkinsfile-using-declarative-directive-generator/#generate-code-for-cron-triggers-using-declarative-directive-generator","title":"Generate code for cron triggers using Declarative Directive Generator","text":"<p>Go to your JENKINS_URL/directive-generator E.g. https:jenkins.com/directive-generator</p> <p>Under Sample Directive choose triggers: Triggers from dropdown</p> <p></p> <p>Click on Add and choose cron: Build periodically</p> <p></p> <p>Enter the cron expression <code>* * * * *</code></p> <p></p> <p>Click on the Generate Declarative Directive to generate the code</p> <p></p> <p>Copy the generated code</p> <pre><code>triggers {\n  cron '* * * * *'\n}\n</code></pre>"},{"location":"jenkins/tutorials/generate-the-code-for-jenkinsfile-using-declarative-directive-generator/#generate-code-for-tools-block-using-declarative-directive-generator","title":"Generate code for tools block using Declarative Directive Generator","text":"<p>Choose <code>tools: Tools</code> from the dropdown under Sample Directive</p> <p>Click on Add and choose <code>maven: Maven</code></p> <p></p> <p>Click on the Generate Declarative Directive to generate the tools block code</p> <p></p> <p>Copy the generated code</p> <pre><code>tools {\n  maven 'maven-3.8.8'\n}\n</code></pre>"},{"location":"jenkins/tutorials/generate-the-code-for-jenkinsfile-using-declarative-directive-generator/#generate-code-to-trigger-other-pipelines-using-declarative-directive-generator","title":"Generate code to trigger other pipelines using Declarative Directive Generator","text":"<p>This feature was available from scripted Jenkinsfile, so it needs to generate it from the Snippet Generator</p> <p>Go to Snippet Generator, choose <code>build: Build a job</code> from Sample Step</p> <p></p> <p>Enter the child pipeline name 01-hello-world-java you want to trigger under Project to Build</p> <p>Enable Wait for completion depends on your needs</p> <p></p> <p>Click on Generate Pipeline Script to generate the code to trigger the child pipeline</p> <p></p> <p>Copy the generated code</p> <pre><code>build '01-hello-world-java'\n</code></pre> <p>Like this you can generate the Jenkinsfile code snippet for most of the plugin use cases</p>"},{"location":"jenkins/tutorials/how-to-complete-the-initial-setup-after-installing-jenkins/","title":"How to complete the initial setup after installing Jenkins","text":"<p>By default, Jenkins starts on port number 8080</p> <p>You can access the Jenkins by opening the ip-address:8080 E.g. localhost:8080 (if it's installed locally) from the browser</p> <p></p> <p>Get the\u00a0initialAdminPassword\u00a0from\u00a0a file located in <code>/var/lib/jenkins/secrets/initialAdminPassword</code></p> <p>Change to root user and open the\u00a0<code>/var/lib/jenkins/secrets/initialAdminPassword</code>\u00a0file to get the password</p> <pre><code>cat /var/lib/jenkins/secrets/initialAdminPassword\n</code></pre> <pre><code>ubuntu@jenkins-test:~$ sudo su\n[sudo] password for ubuntu: \nroot@jenkins-test:/home/ubuntu# cat /var/lib/jenkins/secrets/initialAdminPassword\n\n783013afbc7346199ef273fbb8b831bb\n</code></pre> <p>After entering the password click on\u00a0continue</p> <p>Click on\u00a0Install suggested plugins</p> <p></p> <p>This will automatically install the necessary plugins for Jenkins</p> <p></p> <p>Enter the username, password, Fullme, E-mail address and click on\u00a0Save and Continue</p> <p></p> <p>Click on\u00a0Save and Finish</p> <p></p> <p>Click on\u00a0Start using Jenkins</p> <p></p> <p>Jenkins initial setup is complete, you should see the Jenkins Dashboard now</p> <p></p>"},{"location":"jenkins/tutorials/how-to-create-a-freestyle-project-to-build-a-maven-java-project/","title":"How to create a Freestyle project in Jenkins to build a Maven Java project","text":""},{"location":"jenkins/tutorials/how-to-create-a-freestyle-project-to-build-a-maven-java-project/#install-maven-in-the-jenkins-server","title":"Install Maven in the Jenkins server","text":"<pre><code>sudo apt install maven\n</code></pre> <pre><code>ubuntu@jenkins-test:~$ sudo apt install maven\nReading package lists... Done\nBuilding dependency tree... Done\nReading state information... Done\nThe following additional packages will be installed:\n  libaopalliance-java libapache-pom-java libatinject-jsr330-api-java libcdi-api-java libcommons-cli-java libcommons-io-java\n  libcommons-lang3-java libcommons-parent-java liberror-prone-java libgeronimo-annotation-1.3-spec-java\n  libgeronimo-interceptor-3.0-spec-java libguava-java libguice-java libjansi-java libjsr305-java libmaven-parent-java\n  libmaven-resolver-java libmaven-shared-utils-java libmaven3-core-java libplexus-cipher-java libplexus-classworlds-java\n  libplexus-component-annotations-java libplexus-interpolation-java libplexus-sec-dispatcher-java libplexus-utils2-java\n  libsisu-inject-java libsisu-plexus-java libslf4j-java libwagon-file-java libwagon-http-shaded-java libwagon-provider-api-java\nSuggested packages:\n  libatinject-jsr330-api-java-doc libel-api-java libcommons-io-java-doc libasm-java libcglib-java libjsr305-java-doc\n  libmaven-shared-utils-java-doc liblogback-java libplexus-utils2-java-doc junit4 testng libcommons-logging-java liblog4j1.2-java\nThe following NEW packages will be installed:\n  libaopalliance-java libapache-pom-java libatinject-jsr330-api-java libcdi-api-java libcommons-cli-java libcommons-io-java\n  libcommons-lang3-java libcommons-parent-java liberror-prone-java libgeronimo-annotation-1.3-spec-java\n  libgeronimo-interceptor-3.0-spec-java libguava-java libguice-java libjansi-java libjsr305-java libmaven-parent-java\n  libmaven-resolver-java libmaven-shared-utils-java libmaven3-core-java libplexus-cipher-java libplexus-classworlds-java\n  libplexus-component-annotations-java libplexus-interpolation-java libplexus-sec-dispatcher-java libplexus-utils2-java\n  libsisu-inject-java libsisu-plexus-java libslf4j-java libwagon-file-java libwagon-http-shaded-java libwagon-provider-api-java maven\n0 upgraded, 32 newly installed, 0 to remove and 0 not upgraded.\n</code></pre> <p>Check maven version</p> <pre><code>mvn --version\n</code></pre> <pre><code>ubuntu@jenkins-test:~$ mvn --version\nApache Maven 3.8.7\nMaven home: /usr/share/maven\nJava version: 21.0.3, vendor: Ubuntu, runtime: /usr/lib/jvm/java-21-openjdk-amd64\nDefault locale: en, platform encoding: UTF-8\nOS name: \"linux\", version: \"6.8.0-1009-azure\", arch: \"amd64\", family: \"unix\"\n</code></pre> <p>Installed Maven version is 3.8.7</p> <p>NOTE: To install Maven, Java should be installed first</p>"},{"location":"jenkins/tutorials/how-to-create-a-freestyle-project-to-build-a-maven-java-project/#create-freestyle-project","title":"Create Freestyle Project","text":"<p>Goto Jenkins dashboard, click on\u00a0New Item</p> <p></p> <p>Enter the Freestyle project name freestyle-project-maven, select Freestyle project and then click OK</p> <p></p> <p>Select Source Code Management -&gt; Git Enter your Public GitHub repository https URL where you have the Maven Java Project</p> <p>If you don't have a sample Hello World Maven Java project. Fork this Github repository https://github.com/vigneshsweekaran/hello-world and use your Github repository URL</p> <p>Enter Branch Specifier as main</p> <p></p> <p>Click on Build Steps -&gt; Add build steps -&gt; Execute shell</p> <p></p> <p>Enter <code>mvn clean package</code> command and click on Save</p> <p></p>"},{"location":"jenkins/tutorials/how-to-create-a-freestyle-project-to-build-a-maven-java-project/#build-the-freestyle-project","title":"Build the Freestyle Project","text":"<p>Click on Build Now to run a Freestyle project</p> <p></p> <p>1<sup>st</sup> Build started</p> <p></p> <p>Click on Build Number #1 to see the details</p> <p></p> <p>Here you can see,</p> <ul> <li> <p>Who triggered this Freestyle project</p> </li> <li> <p>GitHub repository URL</p> </li> <li> <p>Github repository Branch</p> </li> <li> <p>Commit id</p> </li> </ul> <p>Now click on Console output to see the Build logs</p> <p></p> <p>Click on Full Log</p> <p></p> <p>Here you can see Jenkins is building this Freestyle project in the Jenkins server from /var/lib/jenkins/workspace/freestyle-project-maven folder</p> <p></p> <ul> <li> <p>Jenkins HOME folder is <code>/var/lib/jenkins</code>, under this folder, Jenkins keeps all the details as files</p> </li> <li> <p>In <code>/var/lib/jenkins/workspace</code> it keeps track of any Freestyle projects or Pipelines created in Jenkins</p> </li> <li> <p>In this case, the Freestyle Project name is freestyle-project-maven so it created a freestyle-project-maven folder in /var/lib/jenkins/workspace E.g. <code>/var/lib/jenkins/workspace/freestyle-project-maven</code></p> </li> </ul> <p>Jenkins will clone the GitHub repository given during the Freestyle project creation in this folder for building</p> <p>You can verify the same in the Jenkins server</p> <p>Change to root user in Jenkins server</p> <pre><code>sudo su\n</code></pre> <pre><code>ubuntu@jenkins-test:~$ sudo su\n[sudo] password for ubuntu: \nroot@jenkins-test:/home/ubuntu#\n</code></pre> <p>Goto /var/lib/jenkins/workspace/freestyle-project-maven and list the files there</p> <pre><code>cd /var/lib/jenkins/workspace/freestyle-project-maven\npwd\nls -l\n</code></pre> <pre><code>root@jenkins-test:/home/ubuntu# cd /var/lib/jenkins/workspace/freestyle-project-maven/\nroot@jenkins-test:/var/lib/jenkins/workspace/freestyle-project-maven# pwd\n/var/lib/jenkins/workspace/freestyle-project-maven\nroot@jenkins-test:/var/lib/jenkins/workspace/freestyle-project-maven# ls -l\ntotal 44\n-rw-r--r-- 1 jenkins jenkins   95 Jul  7 13:01 Dockerfile\n-rw-r--r-- 1 jenkins jenkins 2654 Jul  7 13:16 README.md\n-rw-r--r-- 1 jenkins jenkins  646 Jul  7 13:01 appspec.yml\n-rw-r--r-- 1 jenkins jenkins 2146 Jul  7 13:01 buildspec.yml\ndrwxr-xr-x  3 jenkins jenkins 4096 Jul  7 13:16 cicd\ndrwxr-xr-x  3 jenkins jenkins 4096 Jul  7 13:01 codedeploy\ndrwxr-xr-x  5 jenkins jenkins 4096 Jul  7 13:01 deployment\n-rw-r--r-- 1 jenkins jenkins 1414 Jul  7 13:16 pom.xml\n-rw-r--r-- 1 jenkins jenkins  231 Jul  7 13:01 sonar-project.properties\ndrwxr-xr-x  4 jenkins jenkins 4096 Jul  7 13:01 src\ndrwxr-xr-x 10 jenkins jenkins 4096 Jul  7 13:42 target\n</code></pre> <p>And in the Console Output you can see No credentials specified is mentioned. While creating the Freestyle Project, you have given the Public Github repository URL and you have not selected any github credentials.</p> <p>Next its cloning the repository with latest Git Commit Id from the branch refs/remotes/origin/main</p> <p>Next its executing the command mvn clean package which you have given in the Build Steps -&gt; Execute Shell</p> <p>Once the build is completed, it creates a war file in the path /var/lib/jenkins/workspace/freestyle-project-maven/target/hello-world-1.0-SNAPSHOT.war</p> <p></p>"},{"location":"jenkins/tutorials/how-to-create-a-maven-project-in-jenkins-to-build-a-maven-java-project/","title":"How to create a Maven project in Jenkins to build a Maven Java project","text":""},{"location":"jenkins/tutorials/how-to-create-a-maven-project-in-jenkins-to-build-a-maven-java-project/#create-maven-project","title":"Create Maven Project","text":"<p>Goto Jenkins dashboard, click on\u00a0New Item</p> <p></p> <p>Enter the Maven project name hello-world-maven-project, select\u00a0Maven project,\u00a0and then click\u00a0OK</p> <p>Install the Maven Integration plugin to see the Maven project option.</p> <p></p> <p>Select\u00a0Source Code Management\u00a0-&gt;\u00a0Git\u00a0Enter your Public GitHub repository https URL where you have the Maven Java Project</p> <p>If you do not have a sample Java code, follow these steps to create one</p> <p>How to create a GitHub repository and push a sample Java 21 Maven Project</p> <p></p> <p>Click on Build, under Goals and options enter <code>clean package</code> command and then click on Save</p> <p>Since this is a Maven project, there is no need to put <code>mvn</code> command, only maven goal <code>clean package</code> is sufficient</p> <p></p> <p>Now click on Build Now to build the Maven project Goto Console Output</p> <p>Here you can see, that it's downloading the Apache maven zip file apache-maven-3.8.8-bin.zip from the official maven website, extracting and storing it in the Jenkins tools folder <code>/var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/maven-3.8.8</code> on the first build</p> <p>All the Tools defined are downloaded on the first build and stored in a path /var/lib/jenkins/tools</p> <p></p> <p>You can verify the Maven files downloaded in the Jenkins server</p> <pre><code>cd /var/lib/jenkins/tools/\npwd\nls -l\ncd hudson.tasks.Maven_MavenInstallation/maven-3.8.8/\nls -l\n</code></pre> <pre><code>root@jenkins-test:~# cd /var/lib/jenkins/tools/\nroot@jenkins-test:/var/lib/jenkins/tools# pwd\n/var/lib/jenkins/tools\nroot@jenkins-test:/var/lib/jenkins/tools# ls -l\ntotal 4\ndrwxr-xr-x 3 jenkins jenkins 4096 Jul  8 14:07 hudson.tasks.Maven_MavenInstallation\nroot@jenkins-test:/var/lib/jenkins/tools# cd hudson.tasks.Maven_MavenInstallation/maven-3.8.8/\nroot@jenkins-test:/var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/maven-3.8.8# ls -l\ntotal 48\n-rwxr-xr-x 1 jenkins jenkins 17264 Mar  8  2023 LICENSE\n-rwxr-xr-x 1 jenkins jenkins  5141 Mar  8  2023 NOTICE\n-rwxr-xr-x 1 jenkins jenkins  2612 Mar  8  2023 README.txt\ndrwxr-xr-x 2 jenkins jenkins  4096 Jul  8 14:07 bin\ndrwxr-xr-x 2 jenkins jenkins  4096 Jul  8 14:07 boot\ndrwxr-xr-x 3 jenkins jenkins  4096 Jul  8 14:07 conf\ndrwxr-xr-x 4 jenkins jenkins  4096 Jul  8 14:07 lib\nroot@jenkins-test:/var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/maven-3.8.8# \n</code></pre> <p>Then it executes the maven goal you passed <code>clean package</code></p> <p></p> <p>Once the build is completed, the war file is created in Maven project Workspace /var/lib/jenkins/workspace/hello-world-maven-project/target/hello-world-1.0-SNAPSHOT.war</p> <p></p>"},{"location":"jenkins/tutorials/how-to-create-a-maven-project-in-jenkins-with-private-github-repository/","title":"How to create a Maven project in Jenkins with Private Github Repository","text":""},{"location":"jenkins/tutorials/how-to-create-a-maven-project-in-jenkins-with-private-github-repository/#create-a-private-github-repository","title":"Create a Private Github Repository","text":""},{"location":"jenkins/tutorials/how-to-create-a-maven-project-in-jenkins-with-private-github-repository/#store-the-github-token-in-jenkins-credentials","title":"Store the GitHub Token in Jenkins Credentials","text":"<p>How to store a Github Token in Jenkins Credentials</p>"},{"location":"jenkins/tutorials/how-to-create-a-maven-project-in-jenkins-with-private-github-repository/#create-maven-project","title":"Create Maven Project","text":"<p>Goto Jenkins dashboard, click on\u00a0New Item Enter the Maven project name\u00a0hello-world-maven-project-private, select\u00a0Maven project,\u00a0and then click\u00a0OK</p> <p></p> <p>Select\u00a0Source Code Management\u00a0-&gt;\u00a0Git Enter your Private GitHub repository https URL</p> <p></p> <p>If you are not selecting the credentials, you will see the above error</p> <p>Select the created credential <code>github-credential</code> under Credentials section Enter the GitHub branch name <code>main</code> under Branch Specifier and then click Save</p> <p></p> <p>Build the Maven project and check the logs in Console Output, you can see the credential <code>github-credential</code> is used to clone the Private Github repository</p> <p></p>"},{"location":"jenkins/tutorials/how-to-create-a-pipeline-in-jenkins-using-jenkinsfile/","title":"How to create a Pipeline in Jenkins using Jenkinsfile","text":"<p>Create a GitHub repository with a sample Java Maven project How to create a GitHub repository and push a sample Java 21 Maven Project</p> <p>Jenkinsfile is a file, where you can write all the build commands and store the file in the GitHub repository, then Jenkins Pipeline can reference it to execute the commands</p> <p>Create a Jenkinsfile named 01-Jenkinsfile-helloworld inside cicd</p> <p>The\u00a0Jenkinsfile\u00a0can be named to anything like this\u00a0Jenkinsfile-dev,\u00a001-Jenkinsfile-helloworld</p> <pre><code>mkdir cicd\nls -l\ncd cicd\nvi 01-Jenkinsfile-helloworld\nls -l\n</code></pre> <pre><code>pipeline {\n  agent any\n  stages {\n    stage ('Build') {\n      steps {\n        sh 'echo Hello Build stage'\n      }\n    }\n    stage ('Test') {\n      steps {\n        sh 'echo hello Test stage'\n      }\n    }\n  }\n}\n</code></pre> <p>Reference: Pipeline Syntax</p> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ ll\ntotal 16\n-rw-r--r-- 1 vignesh  staff   762 Jul 12 22:56 README.md\n-rw-r--r-- 1 vignesh  staff  1414 Jul 12 22:56 pom.xml\ndrwxr-xr-x  4 vignesh  staff   128 Jul 12 22:56 src\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ mkdir cicd\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ ls -l\ntotal 24\n-rw-r--r-- 1 vignesh  staff   210 Jul 15 19:31 01-Jenkinsfile-helloworld\n-rw-r--r-- 1 vignesh  staff   762 Jul 12 22:56 README.md\ndrwxr-xr-x  2 vignesh  staff    64 Jul 15 19:32 cicd\n-rw-r--r-- 1 vignesh  staff  1414 Jul 12 22:56 pom.xml\ndrwxr-xr-x  4 vignesh  staff   128 Jul 12 22:56 src\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ cd cicd\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java/cicd [main] $ vi 01-Jenkinsfile-helloworld\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java/cicd [main] $ ls -l\ntotal 8\n-rw-r--r-- 1 vignesh  staff  210 Jul 15 19:34 01-Jenkinsfile-helloworld\n</code></pre> <p>Check Git status</p> <pre><code>cd ..\ngit status\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java/cicd [main] $ cd ..\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ git status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nUntracked files:\n  (use \"git add &lt;file&gt;...\" to include in what will be committed)\n    cicd/\n\nnothing added to commit but untracked files present (use \"git add\" to track)\n</code></pre> <p>Add the file and push it to the GitHub repository</p> <pre><code>git add .\ngit status\ngit commit -m \"Added Jenkinsfile 01-Jenkinsfile-helloworld\"\ngit push origin main\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ git add .\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ git status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges to be committed:\n  (use \"git restore --staged &lt;file&gt;...\" to unstage)\n    new file:   cicd/01-Jenkinsfile-helloworld\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ git commit -m \"Added Jenkinsfile 01-Jenkinsfile-helloworld\" \n[main c548f08] Added Jenkinsfile 01-Jenkinsfile-helloworld\n 1 file changed, 15 insertions(+)\n create mode 100644 cicd/01-Jenkinsfile-helloworld\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java [main] $ git push origin main\nEnumerating objects: 5, done.\nCounting objects: 100% (5/5), done.\nDelta compression using up to 10 threads\nCompressing objects: 100% (4/4), done.\nWriting objects: 100% (4/4), 455 bytes | 455.00 KiB/s, done.\nTotal 4 (delta 1), reused 0 (delta 0), pack-reused 0\nremote: Resolving deltas: 100% (1/1), completed with 1 local object.\nTo https://github.com/devopspilot1/hello-world-java.git\n   27d7fcb..c548f08  main -&gt; main\n</code></pre> <p>Verify cicd/01-Jenkinsfile-helloworld file is pushed to the GitHub repository</p> <p></p> <p></p> <p>Goto Jenkins dashboard, click on\u00a0New Item</p> <p>Enter the Pipeline name\u00a001-hello-world-java, select\u00a0Pipeline,\u00a0and then click\u00a0OK</p> <p></p> <p>Select\u00a0the\u00a0Pipeline\u00a0section, under\u00a0Definition\u00a0choose\u00a0Pipeline script from SCM</p> <p>From SCM choose Git and enter your GitHub repository URL</p> <p></p> <p>Under Branch Specifier change the branch name to main</p> <p>Under Script Path enter the Jenkfinsfile path cicd/01-Jenkinsfile-helloworld and click on Save</p> <p></p> <p>Click on\u00a0Build Now</p> <p>Goto\u00a0Console Output, first it obtained the Jenkinsfile cicd/01-Jenkinsfile-helloworld from the GitHub repository, then clones the GitHub Repository and executed the commands defined in the stages</p> <p></p> <p>In Jenkinsfile you had 2 stages Build and Test, in both the stages it executes the sh step to execute the echo commands</p> <p></p>"},{"location":"jenkins/tutorials/how-to-create-a-pipeline-in-jenkins/","title":"How to create a Pipeline in Jenkins using Pipeline Script","text":"<p>Goto Jenkins dashboard, click on\u00a0New Item</p> <p>Enter the Pipeline name\u00a0hello-world-pipeline, select\u00a0Pipeline,\u00a0and then click\u00a0OK</p> <p></p> <p>Select\u00a0the Pipeline\u00a0section, under\u00a0Definition\u00a0choose\u00a0Pipeline script, and choose Hello World, sample pipeline script is added, and click on\u00a0Save</p> <p>In this, we have\u00a0the Hello\u00a0stage, which will execute an <code>echo</code> command to print Hello World to the Console Output</p> <p></p> <p>Reference: Jenkinsfile Syntax</p> <p>Click on\u00a0Build Now</p> <p>Goto\u00a0Console Output,\u00a0Hello World\u00a0is printed on the logs using the echo command. In this way, you can execute any shell commands from the pipeline script.</p> <p></p> <p>This way of writing the pipeline script in Jenkins UI is used mostly for testing purposes only. Since the script changes are not trackable.</p> <p>The better way is to write the pipeline script in Jenkinsfile and store it in a GitHub repository.</p>"},{"location":"jenkins/tutorials/how-to-enable-github-webhook-to-trigger-the-jenkins-pipeline/","title":"How to enable GitHub Webhook to trigger the Jenkins pipeline","text":"<p>Webhook is a feature in the GitHub repository, that is used to trigger the URL based on GitHub repository events like Create events, Push events, and Delete events Using this feature you can trigger the Jenkins pipeline automatically when you push a commit (any changes)</p> <ul> <li> <p>Create events - Creating a commit, Creating a tag, Creating a branch</p> </li> <li> <p>Push events - Pushing a commit, Pushing a tag, Pushing a branch</p> </li> <li> <p>Delete events - Deleting a commit, Deleting a tag, Deleting a branch</p> </li> </ul>"},{"location":"jenkins/tutorials/how-to-enable-github-webhook-to-trigger-the-jenkins-pipeline/#create-pipeline","title":"Create Pipeline","text":"<p>Create a\u00a0Jenkinsfile\u00a0named\u00a0*04-Jenkinsfile-maven-triggers-webhook\u00a0inside\u00a0the\u00a0cicd*\u00a0folder</p> <pre><code>pipeline {\n  agent any\n  tools {\n    maven 'maven-3.6.3' \n  }\n  stages {\n    stage ('Build') {\n      steps {\n        sh 'mvn clean package'\n      }\n    }\n  }\n}\n</code></pre> <p>If you do not have a sample Java code, follow these steps to create one</p> <p>How to create a GitHub repository and push a sample Java 21 Maven Project</p> <p>Push the\u00a0*04-Jenkinsfile-maven-triggers-webhook*\u00a0file to the GitHub repository</p> <p>Create a Jenkins Pipeline named\u00a004-hello-world-trigger-webhook\u00a0referring to your GitHub repository and enter\u00a0Script Path\u00a0as\u00a0<code>cicd/04-Jenkinsfile-maven-triggers-webhook</code></p> <p>Click on Configure</p> <p></p> <p>Under Build Triggers enable the GitHub hook trigger for GITScm polling and click on Save</p> <p></p>"},{"location":"jenkins/tutorials/how-to-enable-github-webhook-to-trigger-the-jenkins-pipeline/#enable-webhook-in-github-repository","title":"Enable Webhook in GitHub repository","text":"<p>Go to your GitHub repository, click on Settings</p> <p></p> <p>Click on Webhooks</p> <p></p> <p>Click on Add webhook</p> <p></p> <p>Enter your JENKINS_URL/github-webhook/ in Payload URL E.g. http://20.197.20.110:8080/github-webhook/</p> <p>Under Content type\u00a0choose application/json</p> <p></p> <p>Click Disable (not recommended) and click on Add webhook</p> <p>If your Jenkins URL starts with https, you should click Enable SSL verification</p> <p></p> <p>Wait for a couple of seconds, refresh the page, and you should see a green tick</p> <p></p> <p>Make a change in 04-hello-world-trigger-webhook or any File, and commit the changes to trigger the Pipeline automatically</p> <p>Change the stage name to Build Maven and commit the changes</p> <p></p> <p>Commit the changes</p> <p></p> <p>The pipeline is triggered automatically, once the change is committed</p> <p></p> <p>You can verify, who triggered this pipeline by verifying the logs</p> <p></p>"},{"location":"jenkins/tutorials/how-to-enable-github-webhook-to-trigger-the-jenkins-pipeline/#enable-github-webhook-from-jenkinsfile","title":"Enable GitHub Webhook from Jenkinsfile","text":"<p>You have enabled the GitHub hook trigger for GITScm polling from Jenkins Pipeline GUI. You can also do the same from Jenkinsfile using the triggers block</p> <p>Previously you have enabled the\u00a0GitHub hook trigger for GITScm polling\u00a0from\u00a0Jenkins Pipeline GUI. You can also enable the GitHub hook trigger for GITScm polling option and trigger the Jenkins Pipeline using githubPush under the triggers block from\u00a0Jenkinsfile</p> <p></p> <p>Uncheck the option GitHub hook trigger for GITScm polling from Pipeline and click on Save Let's enable it from Jenkinfile</p> <p></p> <p>Add triggers block in Jenkinsfile 04-hello-world-trigger-webhook</p> <p>githubPush() inside the triggers block will enable the GitHub hook trigger for GITScm polling in the pipeline</p> <pre><code>pipeline {\n  agent any\n  triggers {\n    githubPush()\n  }\n  tools {\n    maven 'maven-3.6.3'\n  }\n  stages {\n    stage ('Build Maven') {\n      steps {\n        sh 'mvn clean package'\n      }\n    }\n  }\n}\n</code></pre> <pre><code>git diff\n</code></pre> <p>OUTPUT:</p> <pre><code>vignesh ~/code/devopspilot1/hello-world-java/cicd [main] $ git diff\ndiff --git a/cicd/04-Jenkinsfile-maven-triggers-webhook b/cicd/04-Jenkinsfile-maven-triggers-webhook\nindex 1801267..c343b6b 100644\n--- a/cicd/04-Jenkinsfile-maven-triggers-webhook\n+++ b/cicd/04-Jenkinsfile-maven-triggers-webhook\n@@ -1,5 +1,8 @@\n pipeline {\n   agent any\n+  triggers {\n+    githubPush()\n+  }\n   tools {\n     maven 'maven-3.6.3' \n   }\n</code></pre> <p>Push the changes to your GitHub repository</p> <p>Build the pipeline, and check the pipeline configuration now GitHub hook trigger for GITScm polling should be enabled</p> <p></p>"},{"location":"jenkins/tutorials/how-to-enable-github-webhook-to-trigger-the-jenkins-pipeline/#reference","title":"Reference:","text":"<ul> <li>GitHub Repository</li> </ul>"},{"location":"jenkins/tutorials/how-to-install-jenkins-with-java-21-on-ubuntu/","title":"How to install Jenkins with Java 21 on Ubuntu 24.04","text":""},{"location":"jenkins/tutorials/how-to-install-jenkins-with-java-21-on-ubuntu/#install-java-21-openjdk","title":"Install Java 21 (OpenJDK)","text":"<p>1. Run the following commands to update and install Java 21</p> <pre><code>sudo apt update\nsudo apt install fontconfig openjdk-21-jre\n</code></pre> <p>2. Run the following commands to check the Java version</p> <pre><code>java --version\n</code></pre> <p>Output:</p> <pre><code>ubuntu@jenkins-test:~$ java --version\nopenjdk 21.0.3 2024-04-16\nOpenJDK Runtime Environment (build 21.0.3+9-Ubuntu-1ubuntu1)\nOpenJDK 64-Bit Server VM (build 21.0.3+9-Ubuntu-1ubuntu1, mixed mode, sharing)\n</code></pre>"},{"location":"jenkins/tutorials/how-to-install-jenkins-with-java-21-on-ubuntu/#install-jenkins","title":"Install Jenkins","text":"<p>1. Go to Jenkins's official download page click here</p> <p>2. Click on Linux</p> <p></p> <p>3. Click on Debian/Ubuntu</p> <p></p> <p>4. Copy and run the commands in Long Term Support release section</p> <p></p> <pre><code>sudo wget -O /usr/share/keyrings/jenkins-keyring.asc \\\n  https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key\necho \"deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc]\" \\\n  https://pkg.jenkins.io/debian-stable binary/ | sudo tee \\\n  /etc/apt/sources.list.d/jenkins.list &gt; /dev/null\nsudo apt-get update\nsudo apt-get install jenkins\n</code></pre> <p>5. Run the following command to check the Jenkins' running status</p> <pre><code>sudo systemctl status jenkins\n</code></pre> <p>Output:</p> <pre><code>ubuntu@jenkins-test:~$ sudo systemctl status jenkins\n\u25cf jenkins.service - Jenkins Continuous Integration Server\n     Loaded: loaded (/usr/lib/systemd/system/jenkins.service; enabled; preset: enabled)\n     Active: active (running) since Sat 2024-07-06 14:18:41 UTC; 22s ago\n   Main PID: 6539 (java)\n      Tasks: 50 (limit: 4627)\n     Memory: 1.1G (peak: 1.1G)\n        CPU: 37.256s\n     CGroup: /system.slice/jenkins.service\n             \u2514\u25006539 /usr/bin/java -Djava.awt.headless=true -jar /usr/share/java/jenkins.war --webroot=/var/cache/jenkins/war --httpPor\n</code></pre> <p>6. Run the following command to enable Jenkins to start automatically after reboot</p> <pre><code>sudo systemctl enable jenkins\n</code></pre> <p>Output:</p> <pre><code>ubuntu@jenkins-test:~$ sudo systemctl enable jenkins\nSynchronizing state of jenkins.service with SysV service script with /usr/lib/systemd/systemd-sysv-install.\nExecuting: /usr/lib/systemd/systemd-sysv-install enable jenkins\n</code></pre>"},{"location":"jenkins/tutorials/how-to-install-maven-from-jenkins-tools/","title":"How to install Maven using Jenkins Tools","text":"<p>Goto Jenkins dashboard, click on\u00a0Manage Jenkins</p> <p></p> <p>Click on Tools</p> <p></p> <p>Scroll down, under Maven installations click on Add Maven Enter the name maven-3.8.8 and under version choose 3.8.8 and click on Save</p> <p>Maven will be automatically installed on the Jenkins server in the first build</p> <p></p>"},{"location":"jenkins/tutorials/how-to-install-the-maven-plugin-in-jenkins/","title":"How to install the Maven plugin in Jenkins","text":"<p>Goto Jenkins Dashboard, click on Manage Jenkins</p> <p></p> <p>Click on Plugins</p> <p></p> <p>Click on Available plugins -&gt; Enter maven -&gt; Select Maven Integration -&gt; Click on Install</p> <p></p> <p>Maven Integration plugin is installed, click on Go back to the top page</p> <p></p>"},{"location":"jenkins/tutorials/how-to-replay-the-jenkins-pipeline/","title":"How to Replay the Jenkins Pipeline","text":"<p>Replay Jenkins Pipeline option is very useful for quickly making minor changes in the Jenkinsfile and running the Pipeline without committing the changes in the Jenkinsfile to the GitHub Repository</p>"},{"location":"jenkins/tutorials/how-to-replay-the-jenkins-pipeline/#create-jenkins-pipeline","title":"Create Jenkins Pipeline","text":"<p>Create a\u00a0Jenkinsfile\u00a0named\u00a009-Jenkinsfile-replay\u00a0inside\u00a0the\u00a0cicd\u00a0folder</p> <pre><code>pipeline {\n  agent any\n  tools {\n    maven 'maven-3.6.3' \n  }\n  stages {\n    stage ('Build') {\n      steps {\n        sh 'mvn clean package'\n      }\n    }\n  }\n}\n</code></pre> <p>In this Jenkinsfile, you use the maven-3.6.3 configured tool to build the Java Project. This pipeline will successfully pass.</p> <p>Reference: How to configure maven 3.6.3 in Jenkins Tools</p> <p>If you do not have a sample Java code, follow these steps to create one</p> <p>How to create a GitHub repository and push a sample Java 21 Maven Project</p> <p>Push the\u00a009-Jenkinsfile-replay\u00a0file to the GitHub repository</p> <p>Create a Jenkins Pipeline named\u00a009-hello-world-replay\u00a0referring to your GitHub repository and enter\u00a0Script Path\u00a0as\u00a0<code>cicd/09-Jenkinsfile-replay</code></p> <p>Build the Pipeline</p> <p></p>"},{"location":"jenkins/tutorials/how-to-replay-the-jenkins-pipeline/#create-failure-in-jenkins-pipeline","title":"Create Failure in Jenkins Pipeline","text":"<p>Let's assume, you made a typo in the <code>mvn clean package</code> command, you mistakenly typed <code>packagee</code> instead of a <code>package</code></p> <p>Let's push the typo changes to the GitHub repository</p> <p>Run the git diff command to see the changes</p> <pre><code>git diff\n</code></pre> <p>OUTPUT:</p> <pre><code>vignesh ~/code/devopspilot1/hello-world-java/cicd [main] $ git diff         \ndiff --git a/cicd/09-Jenkinsfile-replay b/cicd/09-Jenkinsfile-replay\nindex 0e3fd6f..687d486 100644\n--- a/cicd/09-Jenkinsfile-replay\n+++ b/cicd/09-Jenkinsfile-replay\n@@ -6,7 +6,7 @@ pipeline {\n   stages {\n     stage ('Build') {\n       steps {\n- sh 'mvn clean package'\n+        sh 'mvn clean packagee'\n       }\n     }\n   }\n</code></pre> <p>Push the\u00a009-Jenkinsfile-replay\u00a0file to the GitHub repository</p> <p>Build the Pipeline, it should fail</p> <p></p>"},{"location":"jenkins/tutorials/how-to-replay-the-jenkins-pipeline/#fix-the-failure-using-the-replay-option","title":"Fix the failure using the Replay option","text":"<p>Go inside the Failed pipeline and click on the Replay option</p> <p></p> <p>You can see the Jenkinsfile in Jenkins GUI</p> <p></p> <p>Correct the spelling mvn clean package and click on Build</p> <p></p> <p>The build is a success now, but the fix is done temporarily.</p> <p></p> <p>You need to again correct the spelling in Jenkinsfile and push it to the GitHub Repository to make the fix permanent</p> <pre><code>git diff\n</code></pre> <p>OUTPUT:</p> <pre><code>vignesh ~/code/devopspilot1/hello-world-java/cicd [main] $ git diff\ndiff --git a/cicd/09-Jenkinsfile-replay b/cicd/09-Jenkinsfile-replay\nindex 687d486..0e3fd6f 100644\n--- a/cicd/09-Jenkinsfile-replay\n+++ b/cicd/09-Jenkinsfile-replay\n@@ -6,7 +6,7 @@ pipeline {\n   stages {\n     stage ('Build') {\n       steps {\n- sh 'mvn clean packagee'\n+        sh 'mvn clean package'\n       }\n     }\n   }\n</code></pre> <p>Push the\u00a009-Jenkinsfile-replay\u00a0file to the GitHub repository</p> <p>Like this, you can debug and fix many issues in real-time.</p>"},{"location":"jenkins/tutorials/how-to-replay-the-jenkins-pipeline/#reference","title":"Reference:","text":"<ul> <li>GitHub Repository</li> </ul>"},{"location":"jenkins/tutorials/how-to-store-a-github-token-safely-in-jenkins-credentials/","title":"How to store a Github Token safely in Jenkins Credentials","text":"<p>Goto Jenkins dashboard, click on\u00a0Manage Jenkins</p> <p></p> <p>Click on Credentials</p> <p></p> <p>Click on System</p> <p></p> <p>Click on Global credentials</p> <p></p> <p>Click on Add Credentials</p> <p></p> <p>Under kind choose Username with password</p> <p>With kind (Username with password ) you can store any credentials which have a username and password/token E.g. Github, DockerHub, Sonarqube, Jfrog Artifactory credentials</p> <p>Select Scope as Global</p> <p>Globally scoped credentials are accessible to any pipelines inside any folder in Jenkins</p> <p>Enter the Username, and GitHub token in the Password section Enter github-credential under ID and Github Credential under Description</p> <p>Click on Create</p> <p></p> <p>Credential is created and the GitHub token is safely stored for use in Jenkins pipelines</p> <p></p>"},{"location":"jenkins/tutorials/how-to-use-tools-block-in-jenkinsfile/","title":"How to use the tools block in Jenkinsfile to refer to Maven","text":"<p>In Manage Jenkins, you use the Tools options to install and configure tools like Git, Maven, Gradle, Java, and Node.js. Jenkins completely manages tools configured in Jenkins.</p> <p>You can install and manage different versions of Git, maven, Gradle, Java, and NodeJs from Tools</p> <p>Using the tools block in Jenkinsfile, you can refer to the tools (maven, gradle) configured in Tools</p>"},{"location":"jenkins/tutorials/how-to-use-tools-block-in-jenkinsfile/#configure-maven-363-in-tools","title":"Configure Maven 3.6.3 in Tools","text":"<p>Goto Jenkins dashboard, click on\u00a0Manage Jenkins</p> <p></p> <p>Click on\u00a0Tools</p> <p></p> <p>Scroll down, under\u00a0Maven installations\u00a0click on\u00a0Add Maven Enter the name\u00a0maven-3.6.3*\u00a0and under version choose\u00a03.6.3 and click on *Save</p> <p></p> <p>The Jenkins will automatically install Maven 3.6.3 during the first build.</p>"},{"location":"jenkins/tutorials/how-to-use-tools-block-in-jenkinsfile/#create-pipeline","title":"Create Pipeline","text":"<p>Create a\u00a0Jenkinsfile\u00a0named\u00a003-Jenkinsfile-maven-build-tools\u00a0inside\u00a0the cicd\u00a0folder</p> <pre><code>pipeline {\n  agent any\n  tools {\n    maven 'maven-3.6.3' \n  }\n  stages {\n    stage ('Build') {\n      steps {\n        sh 'mvn --version'\n        sh 'mvn clean package'\n      }\n    }\n  }\n}\n</code></pre> <p>If you do not have a sample Java code, follow these steps to create one</p> <p>How to create a GitHub repository and push a sample Java 21 Maven Project</p> <p>Here you added the tools block and defined <code>maven 'maven-3.6.3'</code> inside it, which refers to the maven configured in Tools</p> <p>Reference: Jenkins Tools</p> <p>Make sure the Name configured for Maven in Tools matches the same inside the tools block</p> <p>The <code>mvn --version</code> and <code>mvn clean package</code> command is added inside the Build stage</p> <p>Push the\u00a0*03-Jenkinsfile-maven-build-tools*\u00a0file to the GitHub repository</p> <p>Create the Pipeline named\u00a003-hello-world-maven-tools\u00a0referring to your GitHub repository and enter\u00a0Script Path\u00a0as\u00a0<code>cicd/03-Jenkinsfile-maven-build-tools</code></p> <p>Build\u00a0the pipeline and check the\u00a0Console Output</p> <p></p> <p>In the logs, you can see that Jenkins downloads and configures the Maven 3.6.3 zip in the /var/lib/jenkins/tools folder during the first build. Then <code>mvn --version</code> command is executed to print the Maven version 3.6.3</p> <p>You can verify the same in the Jenkins server</p> <pre><code>cd /var/lib/jenkins/tools/\nll\n</code></pre> <pre><code>ubuntu@jenkins-test:~$ cd /var/lib/jenkins/tools/\nubuntu@jenkins-test:/var/lib/jenkins/tools$ ll\ntotal 12\ndrwxr-xr-x  3 jenkins jenkins 4096 Jul  8 14:07 ./\ndrwxr-xr-x 19 jenkins jenkins 4096 Jul 17 14:27 ../\ndrwxr-xr-x  4 jenkins jenkins 4096 Jul 17 14:26 hudson.tasks.Maven_MavenInstallation/\n</code></pre> <pre><code>cd hudson.tasks.Maven_MavenInstallation/\nll\n</code></pre> <pre><code>ubuntu@jenkins-test:/var/lib/jenkins/tools$ cd hudson.tasks.Maven_MavenInstallation/\nubuntu@jenkins-test:/var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation$ ll\ntotal 16\ndrwxr-xr-x 4 jenkins jenkins 4096 Jul 17 14:26 ./\ndrwxr-xr-x 3 jenkins jenkins 4096 Jul  8 14:07 ../\ndrwxr-xr-x 6 jenkins jenkins 4096 Jul 17 14:26 maven-3.6.3/\ndrwxr-xr-x 6 jenkins jenkins 4096 Jul  8 14:07 maven-3.8.8/\n</code></pre> <pre><code>cd maven-3.6.3/\nll\n</code></pre> <pre><code>ubuntu@jenkins-test:/var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation$ cd maven-3.6.3/\nubuntu@jenkins-test:/var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/maven-3.6.3$ ll\ntotal 60\ndrwxr-xr-x 6 jenkins jenkins  4096 Jul 17 14:26 ./\ndrwxr-xr-x 4 jenkins jenkins  4096 Jul 17 14:26 ../\n-rwxr-xr-x 1 jenkins jenkins    99 Jul 17 14:26 .installedFrom*\n-rwxr-xr-x 1 jenkins jenkins 17504 Nov  7  2019 LICENSE*\n-rwxr-xr-x 1 jenkins jenkins  5141 Nov  7  2019 NOTICE*\n-rwxr-xr-x 1 jenkins jenkins  2612 Nov  7  2019 README.txt*\ndrwxr-xr-x 2 jenkins jenkins  4096 Jul 17 14:26 bin/\ndrwxr-xr-x 2 jenkins jenkins  4096 Jul 17 14:26 boot/\ndrwxr-xr-x 3 jenkins jenkins  4096 Jul 17 14:26 conf/\ndrwxr-xr-x 4 jenkins jenkins  4096 Jul 17 14:26 lib/\n</code></pre> <pre><code>cd bin/\nll\n./mvn --version\n</code></pre> <pre><code>ubuntu@jenkins-test:/var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/maven-3.6.3$ cd bin/\nubuntu@jenkins-test:/var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/maven-3.6.3/bin$ ll\ntotal 40\ndrwxr-xr-x 2 jenkins jenkins 4096 Jul 17 14:26 ./\ndrwxr-xr-x 6 jenkins jenkins 4096 Jul 17 14:26 ../\n-rwxr-xr-x 1 jenkins jenkins  228 Nov  7  2019 m2.conf*\n-rwxr-xr-x 1 jenkins jenkins 5741 Nov  7  2019 mvn*\n-rwxr-xr-x 1 jenkins jenkins 6349 Nov  7  2019 mvn.cmd*\n-rwxr-xr-x 1 jenkins jenkins 1485 Nov  7  2019 mvnDebug*\n-rwxr-xr-x 1 jenkins jenkins 1668 Nov  7  2019 mvnDebug.cmd*\n-rwxr-xr-x 1 jenkins jenkins 1532 Nov  7  2019 mvnyjp*\nubuntu@jenkins-test:/var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/maven-3.6.3/bin$ ./mvn --version\nApache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)\nMaven home: /var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/maven-3.6.3\nJava version: 21.0.3, vendor: Ubuntu, runtime: /usr/lib/jvm/java-21-openjdk-amd64\nDefault locale: en, platform encoding: UTF-8\nOS name: \"linux\", version: \"6.8.0-1010-azure\", arch: \"amd64\", family: \"unix\"\n</code></pre>"},{"location":"jenkins/tutorials/how-to-use-tools-block-in-jenkinsfile/#configure-maven-398-in-tools","title":"Configure Maven 3.9.8 in Tools","text":"<p>Enter the name\u00a0maven-3.9.8*\u00a0and under version choose\u00a03.9.8 and click on *Save</p> <p></p> <p>Update maven-3.9.8 in Jenkinsfile 03-Jenkinsfile-maven-build-tools</p> <pre><code>pipeline {\n  agent any\n  tools {\n    maven 'maven-3.9.8' \n  }\n  stages {\n    stage ('Build') {\n      steps {\n        sh 'mvn --version'\n        sh 'mvn clean package'\n      }\n    }\n  }\n}\n</code></pre> <p>Commit and push the\u00a0*03-Jenkinsfile-maven-build-tools*\u00a0file changes to the GitHub repository</p> <pre><code>vignesh ~/code/devopspilot1/hello-world-java/cicd [main] $ git diff                           \ndiff --git a/cicd/03-Jenkinsfile-maven-build-tools b/cicd/03-Jenkinsfile-maven-build-tools\nindex 89d75ab..d5506af 100644\n--- a/cicd/03-Jenkinsfile-maven-build-tools\n+++ b/cicd/03-Jenkinsfile-maven-build-tools\n@@ -1,7 +1,7 @@\n pipeline {\n   agent any\n   tools {\n- maven 'maven-3.6.3' \n+    maven 'maven-3.9.8'\n   }\n   stages {\n     stage ('Build') {\n</code></pre> <p>Build\u00a0the pipeline and check the\u00a0Console Output</p> <p></p> <p>Jenkins downloads the Maven 3.9.8 zip in the /var/lib/jenkins/tools folder and then executes the <code>mvn --version</code> command to print the Maven version 3.9.8.</p> <p>You can verify the same in the Jenkins server</p> <pre><code>cd /var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/maven-3.9.8/bin/\nll\n./mvn --version\n</code></pre> <pre><code>ubuntu@jenkins-test:~$ cd /var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/maven-3.9.8/bin/\nubuntu@jenkins-test:/var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/maven-3.9.8/bin$ ll\ntotal 40\ndrwxr-xr-x 2 jenkins jenkins 4096 Jul 17 14:49 ./\ndrwxr-xr-x 6 jenkins jenkins 4096 Jul 17 14:49 ../\n-rwxr-xr-x 1 jenkins jenkins  327 Jun 13 08:21 m2.conf*\n-rwxr-xr-x 1 jenkins jenkins 5883 Jun 13 08:21 mvn*\n-rwxr-xr-x 1 jenkins jenkins 6324 Jun 13 08:21 mvn.cmd*\n-rwxr-xr-x 1 jenkins jenkins 1684 Jun 13 08:21 mvnDebug*\n-rwxr-xr-x 1 jenkins jenkins 2169 Jun 13 08:21 mvnDebug.cmd*\n-rwxr-xr-x 1 jenkins jenkins 1611 Jun 13 08:21 mvnyjp*\nubuntu@jenkins-test:/var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/maven-3.9.8/bin$ ./mvn --version\nApache Maven 3.9.8 (36645f6c9b5079805ea5009217e36f2cffd34256)\nMaven home: /var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/maven-3.9.8\nJava version: 21.0.3, vendor: Ubuntu, runtime: /usr/lib/jvm/java-21-openjdk-amd64\nDefault locale: en, platform encoding: UTF-8\nOS name: \"linux\", version: \"6.8.0-1010-azure\", arch: \"amd64\", family: \"unix\"\n</code></pre> <p>Like this, you can configure different versions based on your needs.</p>"},{"location":"jenkins/tutorials/how-to-write-jenkinsfile/","title":"How to write a Jenkinsfile","text":"<p>In the Jenkins pipeline, we have two ways of writing Jenkinsfile,</p> <ul> <li> <p>Scripted - The Older way of writing Jenkinsfile, we have to write a lot of logic using Groovy</p> </li> <li> <p>Declarative - Newer and easier way, comes with a lot of inbuilt functions (also called steps)</p> </li> </ul>"},{"location":"jenkins/tutorials/how-to-write-jenkinsfile/#scripted","title":"Scripted","text":"<p>In the Scripted way, the Jenkinsfile starts with the node block</p> <pre><code>node {\n\n}\n</code></pre>"},{"location":"jenkins/tutorials/how-to-write-jenkinsfile/#declarative","title":"Declarative","text":"<p>In the Declarative way, the Jenkinsfile starts with the pipeline block <code>(Mandatory)</code></p> <pre><code>pipeline {\n\n}\n</code></pre>"},{"location":"jenkins/tutorials/how-to-write-jenkinsfile/#declarative-jenkinsfile-in-detail","title":"Declarative Jenkinsfile in detail","text":""},{"location":"jenkins/tutorials/how-to-write-jenkinsfile/#basic-structure","title":"Basic Structure","text":"<ul> <li> <p>Inside the pipeline block, we have an agent block <code>(Mandatory)</code> and stages block <code>(Mandatory)</code></p> </li> <li> <p>Inside the stages block, we should have at least one stage block</p> </li> <li> <p>Inside the stage block, we should have steps block</p> </li> <li> <p>Inside the steps block, we should have at least one step (inbuild function name)     E.g.</p> <ul> <li> <p>sh step to execute any shell commands</p> </li> <li> <p>echo step to print some data</p> </li> </ul> </li> </ul> <pre><code>pipeline {\n    agent any\n\n    stages {\n        stage ('Print') {\n            steps {\n                echo \"Hello Devops Engineers\"\n            }\n        }\n    }\n}\n</code></pre> <ul> <li> <p>agent block is used to tell Jenkins where to execute this Pipeline. It executes in the same Jenkins server ( Controller ) by default.     If we have configured agents for Jenkins ( additional servers only for building the pipelines ), then we can use this agent block to tell Jenkins where to execute this pipeline.</p> </li> <li> <p>stage block is used to group the set of tasks and visualize in the Pipeline Dashboard</p> </li> <li> <p>steps block is used to group the step</p> </li> <li> <p>step is the basic unit that executes the command.</p> </li> </ul> <p>In the above Jenkinsfile, we have created the Print stage which uses the echo step to print Hello Devops Engineers</p>"},{"location":"jenkins/tutorials/how-to-write-jenkinsfile/#post-block-in-jenkinsfile","title":"Post block in Jenkinsfile","text":"<p>The <code>post</code> block is inside a pipeline block. This block is executed once all stages are completed</p> <pre><code>pipeline {\n    agent any\n\n    stages {\n        stage ('Print') {\n            steps {\n                echo \"Hello Devops Engineers\"\n            }\n        }\n    }\n    post {\n        always { \n            echo 'I will always say Hello again!'\n        }\n        success {\n            echo 'I will say Hello only if job is success'\n        }\n        failure {\n            echo 'I will say Hello only if job is failure'\n        }\n    }\n}\n</code></pre> <p>In post block, we have three subblocks always, success and failure</p> <ul> <li> <p>always - If we trigger a job, whether the stage is success or failure, this block will always be executed.</p> </li> <li> <p>success - This block will be executed only if all the stages are passed.</p> </li> <li> <p>failure - This block will be executed if any one of the stages is failed.</p> </li> </ul>"},{"location":"jenkins/tutorials/how-to-write-jenkinsfile/#triggers-block-in-jenkinsfile","title":"Triggers block in Jenkinsfile","text":"<p>The triggers block is inside a pipeline block. Which is used to define how the pipeline should be triggered</p> <p>These are some options for triggers cron, pollSCM, upstream, and githubPush</p>"},{"location":"jenkins/tutorials/how-to-write-jenkinsfile/#cron","title":"cron","text":"<p>Accepts a cron-style string to define a regular interval at which the Pipeline should be triggered</p> <pre><code>triggers { \n  cron('H/15 * * * *')\n}\n</code></pre> <p>This will trigger the pipeline every fifteen minutes</p>"},{"location":"jenkins/tutorials/how-to-write-jenkinsfile/#pollscm","title":"pollSCM","text":"<p>Accepts a cron-style string to define a regular interval at which Jenkins should check for new source code changes.</p> <p>If any new changes exist, the Pipeline will be triggered else skipped.</p> <pre><code>triggers {\n  pollSCM('* * * * *')\n}\n</code></pre> <p>This will check for new source code changes in the Git repository every minute.</p>"},{"location":"jenkins/tutorials/how-to-write-jenkinsfile/#upstream","title":"upstream","text":"<p>Accepts a comma-separated string of jobs and a threshold. When any job in the string finishes with the minimum threshold, the Pipeline will be triggered.</p> <pre><code>triggers {\n  upstream(upstreamProjects: 'Pipeline-1,Pipeline-2', threshold: hudson.model.Result.SUCCESS)\n}\n</code></pre> <p>This will trigger the pipeline if Pipeline-1 or Pipeline-2 is finished with SUCCESS status.</p> <p>Jenkinsfile with cron triggers</p> <pre><code>pipeline {\n    agent any\n\n    triggers {\n        cron('H/15 * * * *')\n    }\n\n    stages {\n        stage ('Print') {\n            steps {\n                echo \"Hello Devops Engineers\"\n            }\n        }\n    }\n\n    post {\n        always { \n            echo 'I will always say Hello again!'\n        }\n        success {\n            echo 'I will say Hello only if job is success'\n        }\n        failure {\n            echo 'I will say Hello only if job is failure'\n        }\n    }\n}\n</code></pre>"},{"location":"jenkins/tutorials/how-to-write-jenkinsfile/#parameters-block-in-jenkinsfile","title":"Parameters block in Jenkinsfile","text":"<p>The parameters block is inside a pipeline block.</p> <p>The parameters block is used to pass dynamic parameters/variables to the Pipeline. It has the following types</p> <ul> <li> <p>string</p> </li> <li> <p>text</p> </li> <li> <p>booleanParam</p> </li> <li> <p>choice</p> </li> <li> <p>password</p> </li> </ul>"},{"location":"jenkins/tutorials/how-to-write-jenkinsfile/#string","title":"string","text":"<p>A parameter of a string type</p> <pre><code>parameters {\n  string(name: 'ENVIRONMENT', defaultValue: 'dev', description: 'Type Environment name to deploy')\n}\n</code></pre>"},{"location":"jenkins/tutorials/how-to-write-jenkinsfile/#text","title":"text","text":"<p>A text parameter can contain multiple lines</p> <pre><code>parameters {\n  text(name: 'DEPLOY_TEXT', defaultValue: 'One\\nTwo\\nThree\\n', description: 'Multi line string')\n}\n</code></pre>"},{"location":"jenkins/tutorials/how-to-write-jenkinsfile/#booleanparam","title":"booleanParam","text":"<p>A boolean parameter</p> <pre><code>parameters {\n  booleanParam(name: 'ENABLE_DEBUG', defaultValue: true, description: 'Enable debugging logs')\n}\n</code></pre>"},{"location":"jenkins/tutorials/how-to-write-jenkinsfile/#choice","title":"choice","text":"<p>A choice parameter</p> <pre><code>parameters {\n  choice(name: 'ENVIRONMENT', choices: ['dev', 'qa', 'prod'], description: 'Choose Environment to deploy')\n}\n</code></pre>"},{"location":"jenkins/tutorials/how-to-write-jenkinsfile/#password","title":"password","text":"<p>A password parameter</p> <pre><code>parameters {\n  password(name: 'SERVER_PASSWORD', defaultValue: '***', description: 'Server SSH password')\n}\n</code></pre> <p>Jenkinsfile with parameters</p> <pre><code>pipeline {\n    agent any\n\n    triggers {\n        cron('H/15 * * * *')\n    }\n\n    parameters {\n        choice(name: 'ENVIRONMENT', choices: ['dev', 'qa', 'prod'], description: 'Select Environment to deploy')\n    }\n\n    stages {\n        stage ('Print') {\n            steps {\n                echo \"Hello Devops Engineers\"\n            }\n        }\n    }\n\n    post {\n        always { \n            echo 'I will always say Hello again!'\n        }\n        success {\n            echo 'I will say Hello only if job is success'\n        }\n        failure {\n            echo 'I will say Hello only if job is failure'\n        }\n    }\n}\n</code></pre>"},{"location":"jenkins/tutorials/how-to-write-jenkinsfile/#environment-block-in-jenkinsfile","title":"Environment block in Jenkinsfile","text":"<p>The environment block specifies a sequence of key-value pairs that will be available as environment variables inside the steps block</p> <p>The environment block can be inside the pipeline block or inside the stage block</p> <pre><code>pipeline {\n    agent any\n\n    environment { \n        DESIGNATION = 'Devops Engineer'\n    }\n\n    triggers {\n        cron('H/15 * * * *')\n    }\n\n    parameters {\n        choice(name: 'ENVIRONMENT', choices: ['dev', 'qa', 'prod'], description: 'Select Environment to deploy')\n    }\n\n    stages {\n        stage ('Print') {\n            environment { \n                MESSAGE = 'Hello Devops Engineers'\n            }\n            steps {\n                echo \"Your Designation is $DESIGNATION\"\n                echo \"$MESSAGE\"\n            }\n        }\n    }\n\n    post {\n        always { \n            echo 'I will always say Hello again!'\n        }\n        success {\n            echo 'I will say Hello only if job is success'\n        }\n        failure {\n            echo 'I will say Hello only if job is failure'\n        }\n    }\n}\n</code></pre> <p>If environment block is defined within the stage block, then those environment variables will be accessible only within that stage.</p>"},{"location":"jenkins/tutorials/jenkinsfile-to-build-a-java-maven-project/","title":"Jenkinsfile to build a Java Maven Project","text":"<p>Create a\u00a0Jenkinsfile\u00a0named\u00a002-Jenkinsfile-maven-build\u00a0inside\u00a0cicd folder</p> <pre><code>pipeline {\n  agent any\n  stages {\n    stage ('Build') {\n      steps {\n        sh 'mvn clean package'\n      }\n    }\n  }\n}\n</code></pre> <p>If you do not have a sample Java code, follow these steps to create one</p> <p>How to create a GitHub repository and push a sample Java 21 Maven Project</p> <p>In this Jenkinsfile, you have a single stage named Build and you have a <code>mvn clean package</code> inside the sh step</p> <p>Use the sh step to define any shell commands.</p> <p>Push a 02-Jenkinsfile-maven-build file to the GitHub repository</p> <p></p> <p>Create the Pipeline named\u00a002-hello-world-maven referring to your GitHub repository and enter Script Path as <code>cicd/02-Jenkinsfile-maven-build</code></p> <p>To create a pipeline follow these steps Click here</p> <p>Build the pipeline and check the Console Output</p> <p>First <code>cicd/02-Jenkinsfile-maven-build</code> is obtained from the GitHub repository</p> <p></p> <p>Then the <code>mvn clean package</code> command is executed</p> <p></p> <p>Finally, Jenkins creates a hello-world-1.0-SNAPSHOT.war file in the /var/lib/jenkins/workspace/02-hello-world-maven/target folder.</p> <p></p>"},{"location":"jenkins/tutorials/jenkinsfile-to-trigger-other-jenkins-pipeline-from-the-stage/","title":"Jenkinsfile to trigger other Jenkins Pipeline from the stage","text":"<p>Depending on your project needs, CI/CD pipelines are usually split into multiple pipelines like\u00a0Build,\u00a0Test,\u00a0Deployment, and\u00a0Verification. The common scenario is to trigger the deployment Jenkins Pipeline from the stage using Jenkinsfile once the build pipeline is completed</p> <p>You can even hold the parent pipeline until the child pipeline finishes.</p>"},{"location":"jenkins/tutorials/jenkinsfile-to-trigger-other-jenkins-pipeline-from-the-stage/#create-child-pipeline","title":"Create Child Pipeline","text":"<p>Create a\u00a0Jenkinsfile\u00a0named\u00a0<code>08-Jenkinsfile-child-pipeline</code> inside\u00a0the\u00a0cicd\u00a0folder</p> <pre><code>pipeline {\n  agent any\n  tools {\n    maven 'maven-3.6.3' \n  }\n  stages {\n    stage ('Build') {\n      steps {\n        sh 'mvn clean package'\n      }\n    }\n  }\n}\n</code></pre> <p>If you do not have a sample Java code, follow these steps to create one</p> <p>How to create a GitHub repository and push a sample Java 21 Maven Project</p> <p>Push the\u00a008-Jenkinsfile-child-pipeline\u00a0file to the GitHub repository</p> <p>Create a Jenkins Pipeline named\u00a008-hello-world-child-pipeline\u00a0referring to your GitHub repository and enter\u00a0Script Path\u00a0as\u00a0<code>cicd/08-Jenkinsfile-child-pipeline</code></p> <p></p>"},{"location":"jenkins/tutorials/jenkinsfile-to-trigger-other-jenkins-pipeline-from-the-stage/#parent-pipeline-to-trigger-child-pipeline","title":"Parent Pipeline to Trigger Child Pipeline","text":"<p>Create a\u00a0Jenkinsfile\u00a0named\u00a0<code>08-Jenkinsfile-parent-pipeline</code> inside\u00a0the\u00a0cicd\u00a0folder</p> <pre><code>pipeline {\n  agent any\n  tools {\n    maven 'maven-3.6.3' \n  }\n  stages {\n    stage ('Build') {\n      steps {\n        sh 'mvn clean package'\n      }\n    }\n  }\n}\n</code></pre> <p>Push the\u00a008-Jenkinsfile-parent-pipeline\u00a0file to the GitHub repository</p> <p>Create a Jenkins Pipeline named\u00a008-hello-world-parent-pipeline\u00a0referring to your GitHub repository and enter\u00a0Script Path\u00a0as\u00a0<code>cicd/08-Jenkinsfile-parent-pipeline</code></p> <p></p> <p>Add new stage Trigger child pipeline after Build stage</p> <pre><code>stage ('Trigger child pipeline') {\n  steps {\n    build job: '08-hello-world-child-pipeline', wait: false\n  }\n}\n</code></pre> <p>Here, the build step is used to trigger the child pipeline, you can pass many parameters to the build step. Mostly used parameters are job and wait</p> <p>Using the job parameter you can pass the child pipeline name E.g. job: '08-hello-world-child-pipeline'</p> <p>wait parameter is used to make the parent pipeline to wait until the child pipeline finishes</p> <p>If you set wait: true it will trigger the child pipeline and the parent pipeline will wait until the child pipeline finishes and then resumes.</p> <p>Similarly, If you set wait: false it will just trigger the child pipeline and finish the parent pipeline</p> <p>Here is an updated Jenkinsfile <code>08-Jenkinsfile-child-pipeline</code></p> <pre><code>pipeline {\n  agent any\n  tools {\n    maven 'maven-3.6.3' \n  }\n  stages {\n    stage ('Build') {\n      steps {\n        sh 'mvn clean package'\n      }\n    }\n    stage ('Trigger child pipeline') {\n      steps {\n        build job: '08-hello-world-child-pipeline', wait: false\n      }\n    }\n  }\n}\n</code></pre> <p>Check the diff using the git diff command</p> <pre><code>git diff\n</code></pre> <p>OUTPUT:</p> <pre><code>vignesh ~/code/devopspilot1/hello-world-java/cicd [main] $ git diff\ndiff --git a/cicd/08-Jenkinsfile-parent-pipeline b/cicd/08-Jenkinsfile-parent-pipeline\nindex 0e3fd6f..ad789d1 100644\n--- a/cicd/08-Jenkinsfile-parent-pipeline\n+++ b/cicd/08-Jenkinsfile-parent-pipeline\n@@ -9,5 +9,10 @@ pipeline {\n         sh 'mvn clean package'\n       }\n     }\n+    stage ('Trigger child pipeline') {\n+      steps {\n+        build job: '08-hello-world-child-pipeline', wait: false\n+      }\n+    }\n   }\n }\n</code></pre> <p>Push the\u00a008-Jenkinsfile-parent-pipeline\u00a0file to the GitHub repository</p> <p>Build the 08-hello-world-parent-pipeline, and it should trigger the 08-hello-world-child-pipeline pipeline and it will not wait, since you set wait: false</p> <p></p> <p>Check the logs of the 08-hello-world-child-pipeline pipeline, it will show it has been triggered by the Upstream pipeline 08-hello-world-parent-pipeline</p> <p></p> <p>Update wait: true in Jenkinsfile <code>08-Jenkinsfile-parent-pipeline</code></p> <pre><code>pipeline {\n  agent any\n  tools {\n    maven 'maven-3.6.3' \n  }\n  stages {\n    stage ('Build') {\n      steps {\n        sh 'mvn clean package'\n      }\n    }\n    stage ('Trigger child pipeline') {\n      steps {\n        build job: '08-hello-world-child-pipeline', wait: true\n      }\n    }\n  }\n}\n</code></pre> <p>Check the diff using the git diff command</p> <pre><code>git diff\n</code></pre> <p>OUTPUT:</p> <pre><code>vignesh ~/code/devopspilot1/hello-world-java/cicd [main] $ git diff\ndiff --git a/cicd/08-Jenkinsfile-parent-pipeline b/cicd/08-Jenkinsfile-parent-pipeline\nindex ad789d1..b8c58ea 100644\n--- a/cicd/08-Jenkinsfile-parent-pipeline\n+++ b/cicd/08-Jenkinsfile-parent-pipeline\n@@ -11,7 +11,7 @@ pipeline {\n     }\n     stage ('Trigger child pipeline') {\n       steps {\n- build job: '08-hello-world-child-pipeline', wait: false\n+        build job: '08-hello-world-child-pipeline', wait: true\n       }\n     }\n   }\n</code></pre> <p>Push the\u00a008-Jenkinsfile-parent-pipeline\u00a0file to the GitHub repository</p> <p>Build the 08-hello-world-parent-pipeline, and it should trigger the 08-hello-world-child-pipeline pipeline and it will wait until the 08-hello-world-child-pipeline pipeline finishes</p> <p></p> <p>In the 08-hello-world-parent-pipeline pipeline logs, you can see, that it has waited until the child pipeline completes and then it resumes and finishes the pipeline</p>"},{"location":"jenkins/tutorials/jenkinsfile-to-trigger-other-jenkins-pipeline-from-the-stage/#reference","title":"Reference:","text":"<ul> <li>GitHub Repository</li> </ul>"},{"location":"jenkins/tutorials/jenkinsfile-to-trigger-the-jenkins-pipeline-using-cron/","title":"Jenkinsfile to trigger the Jenkins Pipeline using Cron","text":"<p>In Software Development, you want to execute the Integration test on a Nightly or weekly basis. To facilitate this requirement Jenkins has the Cron expression to trigger the pipeline on Specific Time and you can pass the CRON expression from Jenkinsfile</p> <p>You can define the CRON syntax like\u00a00 18 * * *\u00a0which will trigger the Jenkins Pipeline at 6 PM daily</p>"},{"location":"jenkins/tutorials/jenkinsfile-to-trigger-the-jenkins-pipeline-using-cron/#create-pipeline","title":"Create Pipeline","text":"<p>Create a\u00a0Jenkinsfile\u00a0named\u00a006-Jenkinsfile-maven-triggers-cron\u00a0inside\u00a0the\u00a0cicd\u00a0folder</p> <pre><code>pipeline {\n  agent any\n  tools {\n    maven 'maven-3.6.3' \n  }\n  stages {\n    stage ('Build') {\n      steps {\n        sh 'mvn clean package'\n      }\n    }\n  }\n}\n</code></pre> <p>If you do not have a sample Java code, follow these steps to create one</p> <p>How to create a GitHub repository and push a sample Java 21 Maven Project</p> <p>Push the\u00a0*06-Jenkinsfile-maven-triggers-cron*\u00a0file to the GitHub repository</p> <p>Create a Jenkins Pipeline named\u00a006-hello-world-trigger-cron\u00a0referring to your GitHub repository and enter\u00a0Script Path\u00a0as\u00a0<code>cicd/06-Jenkinsfile-maven-triggers-cron</code></p> <p>Click on\u00a0Configure</p> <p></p> <p>Under\u00a0Build Triggers\u00a0enable the\u00a0Build periodically, under\u00a0the Schedule\u00a0section enter your required cron expression\u00a0and click on\u00a0Save</p> <p>I have entered 55 12 * * * which will trigger the Jenkins pipeline at 12 55 PM daily</p> <p></p> <p>Wait for the scheduled time and the pipeline will be triggered automatically</p> <p>Check the Console output logs, it printed Started by timer</p> <p></p>"},{"location":"jenkins/tutorials/jenkinsfile-to-trigger-the-jenkins-pipeline-using-cron/#enabling-cron-from-jenkinsfile","title":"Enabling Cron from Jenkinsfile","text":"<p>Previously you have enabled the\u00a0Build periodically\u00a0from\u00a0Jenkins Pipeline GUI. You can also enable the Build periodically option and trigger the Jenkins Pipeline using cron under the triggers block from\u00a0Jenkinsfile</p> <p>Uncheck the option\u00a0Build periodically\u00a0from Pipeline and click on\u00a0Save</p> <p></p> <p>Let\u2019s enable it from Jenkinfile</p> <p>Add\u00a0triggers block\u00a0in Jenkinsfile\u00a006-Jenkinsfile-maven-triggers-cron</p> <p><code>cron '0 18 * * *'</code>\u00a0inside the\u00a0triggers block\u00a0will enable the\u00a0Build periodically\u00a0option and set the Schedule to\u00a0<code>0 18 * * *</code>\u00a0, which will trigger the Jenkins Pipeline at 6 PM daily</p> <pre><code>pipeline {\n  agent any\n  triggers {\n    cron '0 18 * * *'\n  }\n  tools {\n    maven 'maven-3.6.3' \n  }\n  stages {\n    stage ('Build') {\n      steps {\n        sh 'mvn clean package'\n      }\n    }\n  }\n}\n</code></pre> <p>Reference:\u00a0Jenkins Triggers</p> <p>Push the changes to your GitHub repository</p> <pre><code>git diff\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java/cicd [main] $ git diff\ndiff --git a/cicd/06-Jenkinsfile-maven-triggers-cron b/cicd/06-Jenkinsfile-maven-triggers-cron\nindex 0e3fd6f..24c5856 100644\n--- a/cicd/06-Jenkinsfile-maven-triggers-cron\n+++ b/cicd/06-Jenkinsfile-maven-triggers-cron\n@@ -1,5 +1,8 @@\n pipeline {\n   agent any\n+  triggers {\n+    cron '0 18 * * *'\n+  }\n   tools {\n     maven 'maven-3.6.3' \n   }\n</code></pre> <p>Build\u00a0the pipeline, and check the pipeline configuration now\u00a0Build periodically option\u00a0should be enabled</p> <p></p>"},{"location":"jenkins/tutorials/jenkinsfile-to-trigger-the-jenkins-pipeline-using-cron/#reference","title":"Reference:","text":"<ul> <li>GitHub Repository</li> </ul>"},{"location":"jenkins/tutorials/jenkinsfile-to-trigger-the-jenkins-pipeline-using-poll-scm/","title":"Jenkinsfile to trigger the Jenkins Pipeline using Poll SCM","text":"<p>Poll SCM is used to check for\u00a0changes in the source code in the Github repository at regular intervals. If it finds the changes, it will trigger the Jenkins pipeline.</p> <p>This is the reverse way of Webhook. In the GitHub webhook, GitHub will trigger the pipeline whenever the changes happen.</p> <p>In Poll SCM. Jenkins will check for changes at regular intervals in the GitHub repository and will trigger the pipeline only if it has changed.</p> <p>This is mostly useful in the scenario, where Jenkins is installed in a private network. where GitHub cannot reach the Jenkins URL. In this case, only Jenkins can connect to GitHub to check for changes.</p> <p>You can define the CRON syntax like H/5 * * * * to check for changes in the GitHub repository every 5 minutes</p> <p>Reference: Jenkins Triggers</p>"},{"location":"jenkins/tutorials/jenkinsfile-to-trigger-the-jenkins-pipeline-using-poll-scm/#create-pipeline","title":"Create Pipeline","text":"<p>Create a\u00a0Jenkinsfile\u00a0named\u00a0*05-Jenkinsfile-maven-triggers-poll*scm inside\u00a0the\u00a0cicd\u00a0folder</p> <pre><code>pipeline {\n  agent any\n  tools {\n    maven 'maven-3.6.3' \n  }\n  stages {\n    stage ('Build') {\n      steps {\n        sh 'mvn clean package'\n      }\n    }\n  }\n}\n</code></pre> <p>If you do not have a sample Java code, follow these steps to create one</p> <p>How to create a GitHub repository and push a sample Java 21 Maven Project</p> <p>Push the\u00a0*05-Jenkinsfile-maven-triggers-poll*scm\u00a0file to the GitHub repository</p> <p>Create a Jenkins Pipeline named\u00a005-hello-world-trigger-pollscm\u00a0referring to your GitHub repository and enter\u00a0Script Path\u00a0as\u00a0cicd/05-Jenkinsfile-maven-triggers-pollscm</p> <p>Click on\u00a0Configure</p> <p></p> <p>Under\u00a0Build Triggers\u00a0enable the\u00a0Poll SCM, under Schedule enter <code>* * * * *</code>\u00a0and click on\u00a0Save</p> <p>* * * * * -&gt; Every Minute</p> <p>H/2 * * * * -&gt; Every 2 Minute</p> <p></p> <p>Make a change in\u00a0*05-hello-world-trigger-pollscm\u00a0or any File, and\u00a0commit the changes*, so that Jenkins can detect the changes and trigger the pipeline</p> <p>Change the stage name to\u00a0Build Maven\u00a0and commit the changes</p> <p></p> <p>Wait for a minute, the pipeline should be triggered automatically</p> <p></p> <p>You can check the Polling logs from here</p> <p></p>"},{"location":"jenkins/tutorials/jenkinsfile-to-trigger-the-jenkins-pipeline-using-poll-scm/#enabling-poll-scm-from-jenkinsfile","title":"Enabling Poll SCM from Jenkinsfile","text":"<p>You have enabled the\u00a0Poll SCM\u00a0from\u00a0Jenkins Pipeline GUI. You can also do the same from\u00a0Jenkinsfile\u00a0using the\u00a0triggers\u00a0block</p> <p>Previously you have enabled the\u00a0Poll SCM\u00a0from\u00a0Jenkins Pipeline GUI. You can also enable the Poll SCM option and trigger the Jenkins Pipeline using pollSCM under the triggers block from\u00a0Jenkinsfile</p> <p>Uncheck the option\u00a0Poll SCM\u00a0from Pipeline and click on\u00a0Save</p> <p></p> <p>Let's enable it from Jenkinfile</p> <p>Add\u00a0triggers block\u00a0in Jenkinsfile\u00a0**05-hello-world-trigger-pollscm****</p> <p><code>pollSCM 'H/2 * * * *'</code>\u00a0inside the triggers block will enable the\u00a0Poll SCM option and set the Schedule to <code>H/2 * * * *</code>\u00a0, which will check the GitHub repository for changes every 2 minutes</p> <pre><code>pipeline {\n  agent any\n  triggers {\n    pollSCM 'H/2 * * * *'\n  }\n  tools {\n    maven 'maven-3.6.3' \n  }\n  stages {\n    stage ('Build Maven') {\n      steps {\n        sh 'mvn clean package'\n      }\n    }\n  }\n}\n</code></pre> <pre><code>git diff\n</code></pre> <p>OUTPUT:</p> <pre><code>vignesh ~/code/devopspilot1/hello-world-java/cicd [main] $ git diff\ndiff --git a/cicd/05-Jenkinsfile-maven-triggers-pollscm b/cicd/05-Jenkinsfile-maven-triggers-pollscm\nindex 0e3fd6f..41e61ec 100644\n--- a/cicd/05-Jenkinsfile-maven-triggers-pollscm\n+++ b/cicd/05-Jenkinsfile-maven-triggers-pollscm\n@@ -1,5 +1,8 @@\n pipeline {\n   agent any\n+  triggers {\n+    pollSCM 'H/2 * * * *'\n+  }\n   tools {\n     maven 'maven-3.6.3' \n   }\n</code></pre> <p>Push the changes to your GitHub repository</p> <p>Manually Build\u00a0the pipeline once and check the pipeline configuration now\u00a0Poll SCM\u00a0should be enabled with Schedule details</p> <p></p>"},{"location":"jenkins/tutorials/jenkinsfile-to-trigger-the-pipeline-from-the-upstream-pipeline/","title":"Jenkinsfile to trigger the Pipeline from the Upstream Pipeline","text":"<p>Sometimes you want to trigger the pipeline once the upstream pipeline (parent pipeline) finishes. To achieve this, enable the <code>Build after other projects are built</code> option from the Jenkins GUI or use the upstream keyword inside the triggers block in the Jenkinsfile.</p>"},{"location":"jenkins/tutorials/jenkinsfile-to-trigger-the-pipeline-from-the-upstream-pipeline/#create-pipeline","title":"Create Pipeline","text":"<p>Create a\u00a0Jenkinsfile\u00a0named\u00a007-Jenkinsfile-maven-triggers-upstream\u00a0inside\u00a0the\u00a0cicd\u00a0folder</p> <pre><code>pipeline {\n  agent any\n  tools {\n    maven 'maven-3.6.3' \n  }\n  stages {\n    stage ('Build') {\n      steps {\n        sh 'mvn clean package'\n      }\n    }\n  }\n}\n</code></pre> <p>If you do not have a sample Java code, follow these steps to create one</p> <p>How to create a GitHub repository and push a sample Java 21 Maven Project</p> <p>Push the\u00a007-Jenkinsfile-maven-triggers-upstream\u00a0file to the GitHub repository</p> <p>Create a Jenkins Pipeline named\u00a007-hello-world-trigger-upstream\u00a0referring to your GitHub repository and enter\u00a0Script Path\u00a0as\u00a0<code>cicd/07-Jenkinsfile-maven-triggers-upstream</code></p> <p>Click on\u00a0Configure</p> <p></p> <p>Under\u00a0the Build Triggers\u00a0section enable\u00a0<code>Build after other projects are built</code> option, under\u00a0the\u00a0<code>Projects to watch</code>\u00a0section, enter your Upstream Pipeline (Parent Pipeline) name and click on\u00a0Save</p> <p></p> <p>Use the 01-hello-world-java upstream pipeline as a reference and add your upstream pipeline based on your needs.</p> <p>By default, the pipeline triggers only when the upstream pipeline status is successful.</p> <p>If you want to change this behavior, enable the options accordingly</p> <p>To trigger the pipeline even Parent pipeline Fails, enable Trigger even if the build fails option</p> <p></p> <p>Trigger the Pipeline 01-hello-world-java</p> <p></p> <p>Check the logs of the 01-hello-world-java pipeline, it will show the logs of triggering the 07-hello-world-trigger-upstream</p> <p></p> <p>Now check the 07-hello-world-trigger-upstream; it should trigger.</p> <p></p>"},{"location":"jenkins/tutorials/jenkinsfile-to-trigger-the-pipeline-from-the-upstream-pipeline/#enabling-the-upstream-option-from-jenkinsfile-to-trigger-the-pipeline","title":"Enabling the upstream option from Jenkinsfile to trigger the Pipeline","text":"<p>Previously you have enabled the\u00a0<code>Build after other projects are built</code>\u00a0from\u00a0Jenkins Pipeline GUI. You can also enable the\u00a0<code>Build after other projects are built</code>\u00a0option and trigger the Jenkins Pipeline using\u00a0the upstream keyword\u00a0inside the triggers block from\u00a0Jenkinsfile</p> <p>Uncheck the option\u00a0<code>Build after other projects are built</code>\u00a0from Pipeline and click on\u00a0Save</p> <p></p> <p>Let\u2019s enable it from Jenkinfile</p> <p>Add\u00a0triggers block\u00a0in Jenkinsfile\u00a006-Jenkinsfile-maven-triggers-cron</p> <p><code>upstream '01-hello-world-java'</code>\u00a0inside the\u00a0triggers block\u00a0will enable the\u00a0<code>Build after other projects are built</code>\u00a0option and set the Projects to watch as 01-hello-world-java</p> <pre><code>pipeline {\n  agent any\n  triggers {\n    upstream '01-hello-world-java'\n  }\n  tools {\n    maven 'maven-3.6.3'\n  }\n  stages {\n    stage ('Build') {\n      steps {\n        sh 'mvn clean package'\n      }\n    }\n  }\n}\n</code></pre> <p>Reference:\u00a0Jenkins Triggers</p> <p>Push the changes to your GitHub repository</p> <pre><code>git diff\n</code></pre> <pre><code>vignesh ~/code/devopspilot1/hello-world-java/cicd [main] $ git diff\ndiff --git a/cicd/07-Jenkinsfile-maven-triggers-upstream b/cicd/07-Jenkinsfile-maven-triggers-upstream\nindex 0e3fd6f..707de7e 100644\n--- a/cicd/07-Jenkinsfile-maven-triggers-upstream\n+++ b/cicd/07-Jenkinsfile-maven-triggers-upstream\n@@ -1,5 +1,8 @@\n pipeline {\n   agent any\n+  triggers {\n+    upstream '01-hello-world-java'\n+  }\n   tools {\n     maven 'maven-3.6.3' \n   }\n</code></pre> <p>Build\u00a0the pipeline, and check the pipeline configuration now\u00a0<code>Build after other projects are built</code>\u00a0option\u00a0should be enabled</p> <p></p>"},{"location":"jenkins/tutorials/jenkinsfile-to-trigger-the-pipeline-from-the-upstream-pipeline/#reference","title":"Reference:","text":"<ul> <li>GitHub Repository</li> </ul>"},{"location":"jenkins/tutorials/use-of-options-in-jenkinsfile/","title":"How to use Options in Jenkinsfile","text":"<p>Options in Jenkinsfile are used to customize the Jenkins pipeline Configurations, like disabling concurrent builds, disabling Pipeline Resume, removing the old pipelines, and setting a timeout for the pipeline</p> Options Details disableConcurrentBuilds() Used to disable the concurrent running of the Pipeline. Only one pipeline can run at a time disableResume() Do not allow the pipeline to resume if you are restarting the controller buildDiscarder(logRotator(numToKeepStr: '5')) Keeps only the last 5 Pipelines and its logs timeout(time: 1, unit: 'HOURS') Timeout the pipeline if its running for more than 1 Hour <p>Reference: Jenkinsfile Options</p>"},{"location":"jenkins/tutorials/use-of-options-in-jenkinsfile/#create-jenkins-pipeline","title":"Create Jenkins Pipeline","text":"<p>Create a\u00a0Jenkinsfile\u00a0named\u00a010-Jenkinsfile-maven-build-options\u00a0inside\u00a0the\u00a0cicd\u00a0folder</p> <pre><code>pipeline {\n  agent any\n  options {\n    disableConcurrentBuilds()\n    disableResume()\n  }\n  tools {\n    maven 'maven-3.6.3'\n  }\n  stages {\n    stage ('Build') {\n      steps {\n        sh 'mvn clean package'\n      }\n    }\n  }\n}\n</code></pre> <p>Here in the options block, you have added the disableConcurrentBuilds() and disableResume() to disable the concurrent pipeline run and to disable the pipeline to resume when it restarts.</p> <p>If you do not have a sample Java code, follow these steps to create one</p> <p>How to create a GitHub repository and push a sample Java 21 Maven Project</p> <p>Push the\u00a010-Jenkinsfile-maven-build-options\u00a0file to the GitHub repository</p> <p>Create a Jenkins Pipeline named\u00a010-hello-world-options\u00a0referring to your GitHub repository and enter\u00a0Script Path\u00a0as\u00a0<code>cicd/10-Jenkinsfile-maven-build-options</code></p>"},{"location":"jenkins/tutorials/use-of-options-in-jenkinsfile/#testing-disableconcurrentbuilds-option","title":"Testing disableConcurrentBuilds() option","text":"<p>Build the Pipeline and check the Pipeline configuration Do not allow concurrent builds and Do not allow the pipeline to resume if the controller restarts option should be enabled</p> <p></p> <p>Now trigger the pipeline 2 times, only 1 pipeline will run and the other pipeline will wait on the queue</p> <p></p>"},{"location":"jenkins/tutorials/use-of-options-in-jenkinsfile/#testing-builddiscarder-option","title":"Testing buildDiscarder() option","text":"<p>Add buildDiscarder(logRotator(numToKeepStr: '5')) it will keep only last 5 pipelines and remove the old pipelines</p> <pre><code>pipeline {\n  agent any\n  options {\n    disableConcurrentBuilds()\n    disableResume()\n    buildDiscarder(logRotator(numToKeepStr: '5'))\n  }\n  tools {\n    maven 'maven-3.6.3'\n  }\n  stages {\n    stage ('Build') {\n      steps {\n        sh 'mvn clean package'\n      }\n    }\n  }\n}\n</code></pre> <p>Check the diff using the\u00a0git diff\u00a0command</p> <pre><code>git diff\n</code></pre> <p>OUTPUT:</p> <pre><code>vignesh ~/code/devopspilot1/hello-world-java/cicd [main] $ git diff\ndiff --git a/cicd/10-Jenkinsfile-maven-build-options b/cicd/10-Jenkinsfile-maven-build-options\nindex 8063019..d5bd675 100644\n--- a/cicd/10-Jenkinsfile-maven-build-options\n+++ b/cicd/10-Jenkinsfile-maven-build-options\n@@ -3,6 +3,7 @@ pipeline {\n   options {\n     disableConcurrentBuilds()\n     disableResume()\n+    buildDiscarder(logRotator(numToKeepStr: '5'))\n   }\n   tools {\n     maven 'maven-3.6.3'\n</code></pre> <p>Push the\u00a010-Jenkinsfile-maven-build-options\u00a0file to the GitHub repository</p> <p>Trigger the Pipeline and check the Pipeline Configuration</p> <p></p> <p>After the build is completed, the old pipeline runs are deleted and only the last 5 pipeline executions are kept</p> <p></p> <p>You can also set the days to keep the pipeline executions and then delete them. E.g. To delete the Pipeline after 30 days</p> <pre><code>buildDiscarder(logRotator(daysToKeepStr: '30'))\n</code></pre> <p>Similarly, to keep 5 pipeline executions and delete the Pipeline logs after 30 days</p> <pre><code>buildDiscarder(logRotator(daysToKeepStr: '30', numToKeepStr: '5'))\n</code></pre>"},{"location":"jenkins/tutorials/use-of-options-in-jenkinsfile/#testing-timeout-option","title":"Testing timeout() option","text":"<p>Add timeout(time: 20, unit: 'SECONDS') to the Jenkinsfile, which will timeout(Fail) the pipeline, if its not completed within 20 Seconds</p> <p>To test this scenario, add the Linux <code>sleep 60</code> command, which will run the sleep command to make the Build stage sleep for 60 seconds.</p> <pre><code>pipeline {\n  agent any\n  options {\n    disableConcurrentBuilds()\n    disableResume()\n    buildDiscarder(logRotator(numToKeepStr: '5'))\n    timeout(time: 20, unit: 'SECONDS')\n  }\n  tools {\n    maven 'maven-3.6.3'\n  }\n  stages {\n    stage ('Build') {\n      steps {\n        sh 'mvn clean package'\n        sh 'sleep 60'\n      }\n    }\n  }\n}\n</code></pre> <pre><code>git diff\n</code></pre> <p>OUTPUT:</p> <pre><code>vignesh ~/code/devopspilot1/hello-world-java/cicd [main] $ git diff\ndiff --git a/cicd/10-Jenkinsfile-maven-build-options b/cicd/10-Jenkinsfile-maven-build-options\nindex d5bd675..69e8c0e 100644\n--- a/cicd/10-Jenkinsfile-maven-build-options\n+++ b/cicd/10-Jenkinsfile-maven-build-options\n@@ -4,6 +4,7 @@ pipeline {\n     disableConcurrentBuilds()\n     disableResume()\n     buildDiscarder(logRotator(numToKeepStr: '5'))\n+    timeout(time: 20, unit: 'SECONDS')\n   }\n   tools {\n     maven 'maven-3.6.3'\n@@ -12,6 +13,7 @@ pipeline {\n     stage ('Build') {\n       steps {\n         sh 'mvn clean package'\n+        sh 'sleep 60'\n       }\n     }\n   }\n</code></pre> <p>Push the\u00a010-Jenkinsfile-maven-build-options\u00a0file to the GitHub repository</p> <p>Trigger the Pipeline, it will timeout in 20 seconds</p> <p></p> <p></p> <p></p> <p>Like this you can configure many configurations for Pipeline from Jenkinsfile.</p>"},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/","title":"How to Create ConfigMaps and Secrets in Kubernetes","text":"<p>This guide explains how to create and use ConfigMaps and Secrets to manage configuration data and sensitive information in Kubernetes.</p>"},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#configmaps","title":"ConfigMaps","text":"<p>ConfigMaps allow you to decouple configuration artifacts from container image content.</p>"},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#creating-configmaps","title":"Creating ConfigMaps","text":""},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#method-1-from-files","title":"Method 1: From Files","text":"<p>Create a configuration file <code>app-config.properties</code>: <pre><code>app.env=production\napp.debug=false\napp.port=8080\n</code></pre></p> <p>Create ConfigMap: <pre><code>kubectl create configmap app-config --from-file=app-config.properties\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#method-2-from-literal-values","title":"Method 2: From Literal Values","text":"<pre><code>kubectl create configmap app-settings --from-literal=API_HOST=api.example.com --from-literal=API_PORT=8443\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#method-3-using-yaml","title":"Method 3: Using YAML","text":"<p>Create <code>app-config.yaml</code>: <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: app-config\ndata:\n  app.properties: |\n    app.env=production\n    app.debug=false\n    app.port=8080\n  database.properties: |\n    db.host=mysql\n    db.port=3306\n    db.name=myapp\n</code></pre></p> <p>Apply: <pre><code>kubectl apply -f app-config.yaml\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#using-configmaps","title":"Using ConfigMaps","text":""},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#1-as-environment-variables","title":"1. As Environment Variables","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: app-pod\nspec:\n  containers:\n  - name: app-container\n    image: myapp:1.0\n    envFrom:\n    - configMapRef:\n        name: app-settings\n    env:\n    - name: SPECIFIC_KEY\n      valueFrom:\n        configMapKeyRef:\n          name: app-config\n          key: app.port\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#2-as-files-in-a-volume","title":"2. As Files in a Volume","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: app-pod\nspec:\n  containers:\n  - name: app-container\n    image: myapp:1.0\n    volumeMounts:\n    - name: config-volume\n      mountPath: /etc/config\n  volumes:\n  - name: config-volume\n    configMap:\n      name: app-config\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#secrets","title":"Secrets","text":"<p>Secrets let you store and manage sensitive information like passwords, tokens, and keys.</p>"},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#creating-secrets","title":"Creating Secrets","text":""},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#method-1-from-files_1","title":"Method 1: From Files","text":"<p>Create secret files: <pre><code>echo -n 'admin' &gt; username.txt\necho -n 'p@ssw0rd' &gt; password.txt\n\nkubectl create secret generic db-credentials \\\n  --from-file=username.txt \\\n  --from-file=password.txt\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#method-2-from-literal-values_1","title":"Method 2: From Literal Values","text":"<pre><code>kubectl create secret generic api-credentials \\\n  --from-literal=api-key=39528$vdg7Jb \\\n  --from-literal=api-secret=1f4a1bd231231\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#method-3-using-yaml_1","title":"Method 3: Using YAML","text":"<p>First, encode your secrets: <pre><code>echo -n 'admin' | base64\necho -n 'p@ssw0rd' | base64\n</code></pre></p> <p>Create <code>db-secrets.yaml</code>: <pre><code>apiVersion: v1\nkind: Secret\nmetadata:\n  name: db-credentials\ntype: Opaque\ndata:\n  username: YWRtaW4=      # base64 encoded 'admin'\n  password: cEBzc3cwcmQ=  # base64 encoded 'p@ssw0rd'\n</code></pre></p> <p>Apply: <pre><code>kubectl apply -f db-secrets.yaml\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#using-secrets","title":"Using Secrets","text":""},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#1-as-environment-variables_1","title":"1. As Environment Variables","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: app-pod\nspec:\n  containers:\n  - name: app-container\n    image: myapp:1.0\n    env:\n    - name: DB_USERNAME\n      valueFrom:\n        secretKeyRef:\n          name: db-credentials\n          key: username\n    - name: DB_PASSWORD\n      valueFrom:\n        secretKeyRef:\n          name: db-credentials\n          key: password\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#2-as-files-in-a-volume_1","title":"2. As Files in a Volume","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: app-pod\nspec:\n  containers:\n  - name: app-container\n    image: myapp:1.0\n    volumeMounts:\n    - name: secrets-volume\n      mountPath: /etc/secrets\n      readOnly: true\n  volumes:\n  - name: secrets-volume\n    secret:\n      secretName: db-credentials\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#production-example","title":"Production Example","text":""},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#complete-application-configuration","title":"Complete Application Configuration","text":"<pre><code># app-configuration.yaml\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: app-config\n  labels:\n    app: myapp\n    environment: production\ndata:\n  application.properties: |\n    app.name=MyApp\n    app.environment=production\n    app.log.level=INFO\n    app.cache.enabled=true\n    app.cache.ttl=3600\n  nginx.conf: |\n    server {\n      listen 80;\n      server_name myapp.example.com;\n      location / {\n        proxy_pass http://localhost:8080;\n      }\n    }\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: app-secrets\n  labels:\n    app: myapp\n    environment: production\ntype: Opaque\ndata:\n  db-password: ${BASE64_DB_PASSWORD}\n  api-key: ${BASE64_API_KEY}\n  jwt-secret: ${BASE64_JWT_SECRET}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: myapp\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: myapp\n  template:\n    metadata:\n      labels:\n        app: myapp\n    spec:\n      containers:\n      - name: myapp\n        image: myapp:1.0\n        volumeMounts:\n        - name: config-volume\n          mountPath: /etc/myapp/config\n        - name: secrets-volume\n          mountPath: /etc/myapp/secrets\n          readOnly: true\n        env:\n        - name: SPRING_CONFIG_LOCATION\n          value: /etc/myapp/config/application.properties\n        - name: DB_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: app-secrets\n              key: db-password\n        - name: API_KEY\n          valueFrom:\n            secretKeyRef:\n              name: app-secrets\n              key: api-key\n      volumes:\n      - name: config-volume\n        configMap:\n          name: app-config\n      - name: secrets-volume\n        secret:\n          secretName: app-secrets\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#best-practices","title":"Best Practices","text":""},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#configmap-best-practices","title":"ConfigMap Best Practices","text":"<ol> <li>Naming and Organization</li> <li>Use clear, descriptive names</li> <li>Group related configurations</li> <li> <p>Use proper namespaces</p> </li> <li> <p>Version Control</p> </li> <li>Store ConfigMap definitions in git</li> <li>Use environment variables for environment-specific values</li> <li> <p>Document all configuration options</p> </li> <li> <p>Size Limits</p> </li> <li>Keep ConfigMaps small (&lt; 1MB)</li> <li>Split large configurations</li> <li>Use volumes for large files</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#secret-best-practices","title":"Secret Best Practices","text":"<ol> <li>Security</li> <li>Never commit secrets to version control</li> <li>Rotate secrets regularly</li> <li>Use encryption at rest</li> <li> <p>Implement RBAC</p> </li> <li> <p>Management</p> </li> <li>Use external secret management systems</li> <li>Implement secret rotation</li> <li> <p>Monitor secret usage</p> </li> <li> <p>Access Control</p> </li> <li>Limit secret access to necessary pods</li> <li>Use read-only mounts</li> <li>Implement network policies</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#troubleshooting","title":"Troubleshooting","text":""},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"<ol> <li> <p>ConfigMap Changes Not Reflecting <pre><code># Restart pods to pick up changes\nkubectl rollout restart deployment myapp\n</code></pre></p> </li> <li> <p>Secret Mounting Issues <pre><code># Check secret exists\nkubectl get secret secret-name\n\n# Check pod events\nkubectl describe pod pod-name\n</code></pre></p> </li> <li> <p>Permission Issues <pre><code># Check RBAC permissions\nkubectl auth can-i get secrets\nkubectl auth can-i get configmaps\n</code></pre></p> </li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-a-configmap-in-kubernetes/#next-steps","title":"Next Steps","text":"<ol> <li>Learn about external secret management</li> <li>Implement secret rotation</li> <li>Set up configuration validation</li> <li>Implement secure secret handling</li> <li>Study configuration patterns</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/","title":"How to Create a Deployment in Kubernetes","text":"<p>A Deployment in Kubernetes provides declarative updates for Pods and ReplicaSets. This guide will show you how to create, update, and manage deployments effectively.</p>"},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/#prerequisites","title":"Prerequisites","text":"<ul> <li>Running Kubernetes cluster</li> <li>kubectl installed and configured</li> <li>Basic understanding of Pods and YAML</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/#basic-deployment-creation","title":"Basic Deployment Creation","text":""},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/#method-1-using-yaml-file-recommended","title":"Method 1: Using YAML File (Recommended)","text":"<p>Create a file named <code>nginx-deployment.yaml</code>:</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n        resources:\n          requests:\n            cpu: \"100m\"\n            memory: \"128Mi\"\n          limits:\n            cpu: \"200m\"\n            memory: \"256Mi\"\n</code></pre> <p>Apply the deployment: <pre><code>kubectl apply -f nginx-deployment.yaml\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/#method-2-using-command-line","title":"Method 2: Using Command Line","text":"<pre><code># Create deployment directly\nkubectl create deployment nginx-deployment --image=nginx:1.14.2 --replicas=3\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/#verifying-the-deployment","title":"Verifying the Deployment","text":"<pre><code># Get basic deployment info\nkubectl get deployments\n\n# Get detailed deployment info\nkubectl describe deployment nginx-deployment\n\n# Check the rollout status\nkubectl rollout status deployment/nginx-deployment\n\n# Get ReplicaSets created by the deployment\nkubectl get rs\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/#updating-a-deployment","title":"Updating a Deployment","text":""},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/#1-update-image","title":"1. Update Image","text":"<pre><code># Using kubectl set image\nkubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n\n# Or update the YAML file and reapply\nkubectl apply -f nginx-deployment.yaml\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/#2-scale-deployment","title":"2. Scale Deployment","text":"<pre><code># Scale using kubectl scale\nkubectl scale deployment nginx-deployment --replicas=5\n\n# Or update replicas in YAML and reapply\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/#advanced-deployment-configuration","title":"Advanced Deployment Configuration","text":""},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/#deployment-with-rolling-update-strategy","title":"Deployment with Rolling Update Strategy","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  replicas: 3\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1        # Maximum number of pods above desired number\n      maxUnavailable: 0  # Maximum number of pods unavailable during update\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/#deployment-with-health-checks","title":"Deployment with Health Checks","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 80\n          initialDelaySeconds: 3\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 80\n          initialDelaySeconds: 5\n          periodSeconds: 5\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/#deployment-strategies","title":"Deployment Strategies","text":""},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/#1-rolling-update-default","title":"1. Rolling Update (Default)","text":"<pre><code>spec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/#2-recreate-strategy","title":"2. Recreate Strategy","text":"<pre><code>spec:\n  strategy:\n    type: Recreate\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/#managing-deployments","title":"Managing Deployments","text":""},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/#rollback","title":"Rollback","text":"<pre><code># View rollout history\nkubectl rollout history deployment/nginx-deployment\n\n# Rollback to previous version\nkubectl rollout undo deployment/nginx-deployment\n\n# Rollback to specific revision\nkubectl rollout undo deployment/nginx-deployment --to-revision=2\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/#pauseresume-rollout","title":"Pause/Resume Rollout","text":"<pre><code># Pause rollout\nkubectl rollout pause deployment/nginx-deployment\n\n# Resume rollout\nkubectl rollout resume deployment/nginx-deployment\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/#production-ready-deployment-example","title":"Production-Ready Deployment Example","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: production-deployment\n  labels:\n    app: web\n    environment: production\n  annotations:\n    kubernetes.io/change-cause: \"Update to version 1.16.1\"\nspec:\n  replicas: 5\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n  selector:\n    matchLabels:\n      app: web\n  template:\n    metadata:\n      labels:\n        app: web\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.16.1\n        ports:\n        - containerPort: 80\n        resources:\n          requests:\n            cpu: \"250m\"\n            memory: \"256Mi\"\n          limits:\n            cpu: \"500m\"\n            memory: \"512Mi\"\n        livenessProbe:\n          httpGet:\n            path: /healthz\n            port: 80\n          initialDelaySeconds: 5\n          periodSeconds: 5\n        readinessProbe:\n          httpGet:\n            path: /ready\n            port: 80\n          initialDelaySeconds: 3\n          periodSeconds: 3\n        env:\n        - name: ENVIRONMENT\n          value: \"production\"\n      affinity:\n        podAntiAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n          - weight: 100\n            podAffinityTerm:\n              labelSelector:\n                matchExpressions:\n                - key: app\n                  operator: In\n                  values:\n                  - web\n              topologyKey: \"kubernetes.io/hostname\"\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/#troubleshooting","title":"Troubleshooting","text":""},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"<ol> <li> <p>Deployment Not Progressing <pre><code># Check deployment status\nkubectl describe deployment nginx-deployment\n\n# Check pods status\nkubectl get pods -l app=nginx\n</code></pre></p> </li> <li> <p>Image Pull Issues <pre><code># Check pod events\nkubectl describe pod &lt;pod-name&gt;\n\n# Verify image name and registry access\n</code></pre></p> </li> <li> <p>Resource Constraints <pre><code># Check node resources\nkubectl describe nodes\n\n# Check pod resource requests/limits\n</code></pre></p> </li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/#best-practices","title":"Best Practices","text":"<ol> <li>Resource Management</li> <li>Always specify resource requests and limits</li> <li>Set appropriate CPU and memory values</li> <li> <p>Monitor resource usage</p> </li> <li> <p>Update Strategy</p> </li> <li>Use RollingUpdate for zero-downtime updates</li> <li>Set appropriate maxSurge and maxUnavailable</li> <li> <p>Test update strategy in non-production first</p> </li> <li> <p>High Availability</p> </li> <li>Use pod anti-affinity rules</li> <li>Set appropriate number of replicas</li> <li> <p>Implement proper health checks</p> </li> <li> <p>Monitoring and Logging</p> </li> <li>Use labels for better organization</li> <li>Add proper annotations</li> <li>Implement proper monitoring</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-a-deployment-in-kubernetes/#next-steps","title":"Next Steps","text":"<ol> <li>Learn about Services to expose your deployments</li> <li>Implement ConfigMaps and Secrets</li> <li>Set up proper monitoring</li> <li>Explore autoscaling capabilities</li> <li>Study deployment patterns (Blue/Green, Canary)</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/","title":"How to Create a Namespace in Kubernetes","text":"<p>Namespaces provide a mechanism for isolating groups of resources within a single cluster. This guide will show you how to create and manage namespaces effectively.</p>"},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#prerequisites","title":"Prerequisites","text":"<ul> <li>Running Kubernetes cluster</li> <li>kubectl installed and configured</li> <li>Basic understanding of Kubernetes resources</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#creating-namespaces","title":"Creating Namespaces","text":""},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#method-1-using-yaml-file-recommended","title":"Method 1: Using YAML File (Recommended)","text":"<p>Create a file named <code>development-namespace.yaml</code>:</p> <pre><code>apiVersion: v1\nkind: Namespace\nmetadata:\n  name: development\n  labels:\n    name: development\n    environment: dev\n</code></pre> <p>Apply the namespace: <pre><code>kubectl apply -f development-namespace.yaml\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#method-2-using-command-line","title":"Method 2: Using Command Line","text":"<pre><code># Create namespace directly\nkubectl create namespace development\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#working-with-namespaces","title":"Working with Namespaces","text":""},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#list-namespaces","title":"List Namespaces","text":"<pre><code># List all namespaces\nkubectl get namespaces\n\n# Get detailed namespace information\nkubectl describe namespace development\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#set-default-namespace","title":"Set Default Namespace","text":"<pre><code># Change default namespace for current context\nkubectl config set-context --current --namespace=development\n\n# Verify current namespace\nkubectl config view --minify | grep namespace:\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#resource-management-in-namespaces","title":"Resource Management in Namespaces","text":""},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#1-create-resources-in-namespace","title":"1. Create Resources in Namespace","text":"<p>Deploy an application in a specific namespace:</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  namespace: development\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#2-resource-quotas","title":"2. Resource Quotas","text":"<p>Create <code>resource-quota.yaml</code>:</p> <pre><code>apiVersion: v1\nkind: ResourceQuota\nmetadata:\n  name: dev-quota\n  namespace: development\nspec:\n  hard:\n    requests.cpu: \"4\"\n    requests.memory: 4Gi\n    limits.cpu: \"8\"\n    limits.memory: 8Gi\n    pods: \"10\"\n    configmaps: \"10\"\n    persistentvolumeclaims: \"4\"\n    services: \"10\"\n    secrets: \"10\"\n    services.loadbalancers: \"2\"\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#3-limit-range","title":"3. Limit Range","text":"<p>Create <code>limit-range.yaml</code>:</p> <pre><code>apiVersion: v1\nkind: LimitRange\nmetadata:\n  name: dev-limits\n  namespace: development\nspec:\n  limits:\n  - default:\n      cpu: 500m\n      memory: 512Mi\n    defaultRequest:\n      cpu: 200m\n      memory: 256Mi\n    type: Container\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#namespace-isolation","title":"Namespace Isolation","text":""},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#network-policies","title":"Network Policies","text":"<p>Create <code>namespace-network-policy.yaml</code>:</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: namespace-isolation\n  namespace: development\nspec:\n  podSelector: {}\n  policyTypes:\n  - Ingress\n  ingress:\n  - from:\n    - namespaceSelector:\n        matchLabels:\n          environment: dev\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#production-namespace-setup-example","title":"Production Namespace Setup Example","text":"<pre><code># production-namespace-setup.yaml\n---\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: production\n  labels:\n    name: production\n    environment: prod\n    compliance: pci\n---\napiVersion: v1\nkind: ResourceQuota\nmetadata:\n  name: prod-quota\n  namespace: production\nspec:\n  hard:\n    requests.cpu: \"16\"\n    requests.memory: \"32Gi\"\n    limits.cpu: \"32\"\n    limits.memory: \"64Gi\"\n    pods: \"50\"\n---\napiVersion: v1\nkind: LimitRange\nmetadata:\n  name: prod-limits\n  namespace: production\nspec:\n  limits:\n  - default:\n      cpu: \"1\"\n      memory: \"1Gi\"\n    defaultRequest:\n      cpu: \"500m\"\n      memory: \"512Mi\"\n    max:\n      cpu: \"4\"\n      memory: \"8Gi\"\n    type: Container\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#best-practices","title":"Best Practices","text":""},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#1-naming-conventions","title":"1. Naming Conventions","text":"<ul> <li>Use meaningful, descriptive names</li> <li>Follow a consistent naming scheme</li> <li>Add relevant labels</li> </ul> <p>Example: <pre><code>metadata:\n  name: customer-portal-prod\n  labels:\n    environment: production\n    team: customer-portal\n    cost-center: cc123\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#2-resource-organization","title":"2. Resource Organization","text":"<ul> <li>Group related resources in the same namespace</li> <li>Use separate namespaces for different environments</li> <li>Implement proper resource quotas</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#3-security","title":"3. Security","text":"<ul> <li>Implement RBAC per namespace</li> <li>Use network policies for isolation</li> <li>Set appropriate resource limits</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#4-monitoring","title":"4. Monitoring","text":"<ul> <li>Set up monitoring per namespace</li> <li>Configure alerts based on namespace</li> <li>Track resource usage by namespace</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#common-operations","title":"Common Operations","text":""},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#viewing-resources-in-namespace","title":"Viewing Resources in Namespace","text":"<pre><code># List all resources in namespace\nkubectl get all -n development\n\n# Get specific resource type\nkubectl get pods -n development\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#deleting-resources","title":"Deleting Resources","text":"<pre><code># Delete specific resource\nkubectl delete pod pod-name -n development\n\n# Delete all resources in namespace\nkubectl delete all --all -n development\n\n# Delete namespace and all its resources\nkubectl delete namespace development\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#troubleshooting","title":"Troubleshooting","text":""},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"<ol> <li> <p>Namespace Stuck in Terminating State <pre><code># Force delete namespace\nkubectl get namespace development -o json &gt; tmp.json\n# Edit tmp.json and remove \"kubernetes\" from finalizers\ncurl -k -H \"Content-Type: application/json\" -X PUT --data-binary @tmp.json \\\nhttp://localhost:8001/api/v1/namespaces/development/finalize\n</code></pre></p> </li> <li> <p>Resource Quota Exceeded <pre><code># Check quota usage\nkubectl describe resourcequota -n development\n\n# Check pod resource requests/limits\nkubectl describe pod pod-name -n development\n</code></pre></p> </li> <li> <p>Permission Issues <pre><code># Check RBAC permissions\nkubectl auth can-i create pods -n development\n</code></pre></p> </li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-a-namespace-in-kubernetes/#next-steps","title":"Next Steps","text":"<ol> <li>Learn about RBAC for namespace access control</li> <li>Implement monitoring for namespace resources</li> <li>Set up CI/CD pipelines with namespace isolation</li> <li>Configure network policies between namespaces</li> <li>Implement multi-tenancy using namespaces</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/","title":"How to Create a Secret in Kubernetes","text":"<p>This guide explains how to create and manage Secrets in Kubernetes to handle sensitive information like passwords, OAuth tokens, and SSH keys.</p>"},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#prerequisites","title":"Prerequisites","text":"<ul> <li>Running Kubernetes cluster</li> <li>kubectl installed and configured</li> <li>Basic understanding of Kubernetes resources</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#types-of-secrets","title":"Types of Secrets","text":"<ol> <li>Opaque (generic): Arbitrary user-defined data (default)</li> <li>Most commonly used type</li> <li>Suitable for passwords, keys, and configuration</li> <li> <p>Can store any kind of sensitive data</p> </li> <li> <p>kubernetes.io/dockerconfigjson:</p> </li> <li>Docker registry credentials</li> <li>Used for pulling images from private registries</li> <li> <p>Created with <code>kubectl create secret docker-registry</code></p> </li> <li> <p>kubernetes.io/service-account-token:</p> </li> <li>Service account authentication tokens</li> <li>Automatically created for service accounts</li> <li> <p>Used for API authentication</p> </li> <li> <p>kubernetes.io/tls:</p> </li> <li>TLS certificates and private keys</li> <li>Used for securing ingress and services</li> <li> <p>Must contain tls.crt and tls.key</p> </li> <li> <p>kubernetes.io/ssh-auth:</p> </li> <li>SSH private keys</li> <li>Used for git operations or SSH authentication</li> <li>Created from SSH private key files</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#creating-secrets","title":"Creating Secrets","text":""},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#method-1-from-files","title":"Method 1: From Files","text":"<pre><code># Create files containing secrets\necho -n 'admin' &gt; ./username.txt\necho -n 'S3cret!' &gt; ./password.txt\n\n# Create secret from files\nkubectl create secret generic db-credentials \\\n    --from-file=./username.txt \\\n    --from-file=./password.txt\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#method-2-from-literal-values","title":"Method 2: From Literal Values","text":"<pre><code># Create secret directly from command line\nkubectl create secret generic api-credentials \\\n    --from-literal=api-key=myapikey123 \\\n    --from-literal=api-secret=mysecretkey456\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#method-3-using-yaml","title":"Method 3: Using YAML","text":"<p>First, encode your secrets: <pre><code>echo -n 'admin' | base64       # Output: YWRtaW4=\necho -n 'S3cret!' | base64     # Output: UzNjcmV0IQ==\n</code></pre></p> <p>Create <code>secret.yaml</code>: <pre><code>apiVersion: v1\nkind: Secret\nmetadata:\n  name: db-credentials\ntype: Opaque\ndata:\n  username: YWRtaW4=\n  password: UzNjcmV0IQ==\n</code></pre></p> <p>Apply the secret: <pre><code>kubectl apply -f secret.yaml\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#using-secrets","title":"Using Secrets","text":""},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#1-as-environment-variables","title":"1. As Environment Variables","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: secret-env-pod\nspec:\n  containers:\n  - name: myapp-container\n    image: myapp:1.0\n    env:\n    - name: DATABASE_USER\n      valueFrom:\n        secretKeyRef:\n          name: db-credentials\n          key: username\n    - name: DATABASE_PASSWORD\n      valueFrom:\n        secretKeyRef:\n          name: db-credentials\n          key: password\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#2-as-mounted-files","title":"2. As Mounted Files","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: secret-vol-pod\nspec:\n  containers:\n  - name: myapp-container\n    image: myapp:1.0\n    volumeMounts:\n    - name: secret-volume\n      mountPath: /etc/secrets\n      readOnly: true\n  volumes:\n  - name: secret-volume\n    secret:\n      secretName: db-credentials\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#common-secret-types-examples","title":"Common Secret Types Examples","text":""},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#1-docker-registry-credentials","title":"1. Docker Registry Credentials","text":"<pre><code>kubectl create secret docker-registry regcred \\\n    --docker-server=https://index.docker.io/v1/ \\\n    --docker-username=your-username \\\n    --docker-password=your-password \\\n    --docker-email=your-email@domain.com\n</code></pre> <p>Using in Pod: <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: private-image-pod\nspec:\n  containers:\n  - name: private-app\n    image: private-registry/app:1.0\n  imagePullSecrets:\n  - name: regcred\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#2-tls-secret","title":"2. TLS Secret","text":"<pre><code>kubectl create secret tls tls-secret \\\n    --cert=path/to/tls.cert \\\n    --key=path/to/tls.key\n</code></pre> <p>Using in Ingress: <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: tls-ingress\nspec:\n  tls:\n  - hosts:\n    - myapp.example.com\n    secretName: tls-secret\n  rules:\n  - host: myapp.example.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: myapp-service\n            port:\n              number: 80\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#production-secret-example","title":"Production Secret Example","text":"<pre><code># production-secrets.yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: production-secrets\n  namespace: production\n  labels:\n    environment: production\n    app: myapp\ntype: Opaque\nstringData:  # Values will be automatically encoded\n  database-url: \"postgresql://prod-db:5432/myapp\"\n  database-user: \"app_user\"\n  database-password: \"${DB_PASSWORD}\"  # Use environment variable\n  api-key: \"${API_KEY}\"\n  jwt-secret: \"${JWT_SECRET}\"\n  redis-url: \"redis://redis-master:6379/0\"\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#best-practices","title":"Best Practices","text":""},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#1-security-fundamentals","title":"1. Security Fundamentals","text":"<ul> <li>Never store secrets in version control</li> <li>Enable encryption at rest using <code>EncryptionConfiguration</code></li> <li>Use namespaces to isolate secrets</li> <li>Implement strict RBAC policies</li> <li>Rotate secrets regularly (at least every 90 days)</li> <li>Use service accounts with minimal permissions</li> <li>Implement network policies to restrict secret access</li> </ul> <p>Example Encryption Configuration: <pre><code>apiVersion: apiserver.config.k8s.io/v1\nkind: EncryptionConfiguration\nmetadata:\n  name: encryption-config\nspec:\n  resources:\n  - resources:\n    - secrets\n    providers:\n    - aescbc:\n        keys:\n        - name: key1\n          secret: &lt;32-byte-key&gt;\n    - identity: {}\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#2-secret-management","title":"2. Secret Management","text":"<pre><code># Example RBAC for Secret Access\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: secret-reader\nrules:\n- apiGroups: [\"\"]\n  resources: [\"secrets\"]\n  verbs: [\"get\", \"list\"]\n  resourceNames: [\"db-credentials\"]\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#3-mounting-secrets","title":"3. Mounting Secrets","text":"<ul> <li>Mount as read-only</li> <li>Use specific paths</li> <li>Mount only required secrets</li> </ul> <pre><code>spec:\n  containers:\n  - name: app\n    volumeMounts:\n    - name: secrets\n      mountPath: /etc/secrets\n      readOnly: true\n  volumes:\n  - name: secrets\n    secret:\n      secretName: app-secrets\n      defaultMode: 0400  # Read-only for owner\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#secret-rotation","title":"Secret Rotation","text":""},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#1-manual-rotation","title":"1. Manual Rotation","text":"<pre><code># Create new secret\nkubectl create secret generic db-credentials-new \\\n    --from-literal=username=admin \\\n    --from-literal=password=newpassword\n\n# Update deployment to use new secret\nkubectl set env deployment/myapp \\\n    DATABASE_PASSWORD=\\$(kubectl get secret db-credentials-new -o jsonpath='{.data.password}' | base64 --decode)\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#2-automated-rotation","title":"2. Automated Rotation","text":"<p>Using Kubernetes Secrets Store CSI Driver: <pre><code>apiVersion: secrets-store.csi.x-k8s.io/v1\nkind: SecretProviderClass\nmetadata:\n  name: aws-secrets\nspec:\n  provider: aws\n  parameters:\n    objects: |\n      - objectName: \"myapp-secret\"\n        objectType: \"secretsmanager\"\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#troubleshooting","title":"Troubleshooting","text":""},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"<ol> <li> <p>Secret Not Found <pre><code># Verify secret exists\nkubectl get secret secret-name\nkubectl describe secret secret-name\n</code></pre></p> </li> <li> <p>Permission Issues <pre><code># Check RBAC permissions\nkubectl auth can-i get secrets\nkubectl auth can-i create secrets\n</code></pre></p> </li> <li> <p>Mounting Issues <pre><code># Check pod events\nkubectl describe pod pod-name\n\n# Check pod logs\nkubectl logs pod-name\n</code></pre></p> </li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#security-considerations","title":"Security Considerations","text":""},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#1-network-security","title":"1. Network Security","text":"<p>Implement NetworkPolicies to restrict access to pods that use secrets:</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: secret-network-policy\n  namespace: production\nspec:\n  podSelector:\n    matchLabels:\n      role: secret-consumer\n  policyTypes:\n  - Ingress\n  - Egress\n  ingress:\n  - from:\n    - podSelector:\n        matchLabels:\n          role: authorized\n    ports:\n    - port: 443\n      protocol: TCP\n  egress:\n  - to:\n    - namespaceSelector:\n        matchLabels:\n          purpose: production\n    ports:\n    - port: 443\n      protocol: TCP\n</code></pre> <ol> <li>Pod Security <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: secure-pod\nspec:\n  securityContext:\n    runAsNonRoot: true\n    runAsUser: 1000\n  containers:\n  - name: app\n    securityContext:\n      allowPrivilegeEscalation: false\n      readOnlyRootFilesystem: true\n</code></pre></li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-a-secret-in-kubernetes/#next-steps","title":"Next Steps","text":"<ol> <li>Implement external secret management (HashiCorp Vault, AWS Secrets Manager)</li> <li>Set up automated secret rotation</li> <li>Implement secret encryption at rest</li> <li>Configure audit logging for secrets</li> <li>Study advanced security patterns</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-a-simple-pod-in-kubernetes/","title":"How to Create a Simple Pod in Kubernetes","text":"<p>This guide will walk you through creating and managing pods in Kubernetes. A pod is the smallest deployable unit in Kubernetes that can be created and managed.</p>"},{"location":"kubernetes/tutorials/how-to-create-a-simple-pod-in-kubernetes/#prerequisites","title":"Prerequisites","text":"<ul> <li>Kubernetes cluster (Minikube or any other cluster)</li> <li>kubectl installed and configured</li> <li>Basic understanding of YAML</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-a-simple-pod-in-kubernetes/#creating-your-first-pod","title":"Creating Your First Pod","text":""},{"location":"kubernetes/tutorials/how-to-create-a-simple-pod-in-kubernetes/#method-1-using-yaml-file-recommended","title":"Method 1: Using YAML File (Recommended)","text":"<ol> <li>Create a file named <code>my-first-pod.yaml</code>:</li> </ol> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-pod\n  labels:\n    app: nginx\nspec:\n  containers:\n  - name: nginx\n    image: nginx:latest\n    ports:\n    - containerPort: 80\n</code></pre> <ol> <li>Apply the configuration: <pre><code>kubectl apply -f my-first-pod.yaml\n</code></pre></li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-a-simple-pod-in-kubernetes/#method-2-using-command-line","title":"Method 2: Using Command Line","text":"<pre><code># Create a pod directly from command line\nkubectl run nginx-pod --image=nginx:latest --port=80\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-simple-pod-in-kubernetes/#verifying-pod-creation","title":"Verifying Pod Creation","text":"<pre><code># List all pods\nkubectl get pods\n\n# Get detailed information about the pod\nkubectl describe pod nginx-pod\n\n# View pod logs\nkubectl logs nginx-pod\n\n# Get pod details in YAML format\nkubectl get pod nginx-pod -o yaml\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-simple-pod-in-kubernetes/#pod-with-multiple-containers","title":"Pod with Multiple Containers","text":"<p>Create a file named <code>multi-container-pod.yaml</code>:</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: multi-container-pod\nspec:\n  containers:\n  - name: nginx\n    image: nginx:latest\n    ports:\n    - containerPort: 80\n  - name: redis\n    image: redis:latest\n    ports:\n    - containerPort: 6379\n</code></pre> <p>Apply the configuration: <pre><code>kubectl apply -f multi-container-pod.yaml\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-a-simple-pod-in-kubernetes/#pod-with-resource-limits","title":"Pod with Resource Limits","text":"<p>Create a file named <code>pod-with-resources.yaml</code>:</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: resource-limited-pod\nspec:\n  containers:\n  - name: nginx\n    image: nginx:latest\n    resources:\n      requests:\n        memory: \"64Mi\"\n        cpu: \"250m\"\n      limits:\n        memory: \"128Mi\"\n        cpu: \"500m\"\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-simple-pod-in-kubernetes/#pod-with-environment-variables","title":"Pod with Environment Variables","text":"<p>Create a file named <code>pod-with-env.yaml</code>:</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-with-env\nspec:\n  containers:\n  - name: nginx\n    image: nginx:latest\n    env:\n    - name: DB_HOST\n      value: \"mysql-service\"\n    - name: DB_PORT\n      value: \"3306\"\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-simple-pod-in-kubernetes/#accessing-the-pod","title":"Accessing the Pod","text":"<pre><code># Port forward to access the pod locally\nkubectl port-forward nginx-pod 8080:80\n\n# Execute commands inside the pod\nkubectl exec -it nginx-pod -- /bin/bash\n\n# Copy files to/from pod\nkubectl cp nginx-pod:/etc/nginx/nginx.conf ./nginx.conf\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-simple-pod-in-kubernetes/#pod-lifecycle-management","title":"Pod Lifecycle Management","text":"<pre><code># Delete a pod\nkubectl delete pod nginx-pod\n\n# Delete using YAML file\nkubectl delete -f my-first-pod.yaml\n\n# Force delete a pod\nkubectl delete pod nginx-pod --grace-period=0 --force\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-simple-pod-in-kubernetes/#pod-health-checks","title":"Pod Health Checks","text":"<p>Create a file named <code>pod-with-probes.yaml</code>:</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-with-probes\nspec:\n  containers:\n  - name: nginx\n    image: nginx:latest\n    livenessProbe:\n      httpGet:\n        path: /\n        port: 80\n      initialDelaySeconds: 3\n      periodSeconds: 3\n    readinessProbe:\n      httpGet:\n        path: /\n        port: 80\n      initialDelaySeconds: 5\n      periodSeconds: 5\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-simple-pod-in-kubernetes/#troubleshooting-pods","title":"Troubleshooting Pods","text":""},{"location":"kubernetes/tutorials/how-to-create-a-simple-pod-in-kubernetes/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"<ol> <li> <p>Pod in Pending State <pre><code># Check pod status\nkubectl describe pod nginx-pod\n\n# Check node resources\nkubectl describe nodes\n</code></pre></p> </li> <li> <p>Pod in CrashLoopBackOff <pre><code># Check pod logs\nkubectl logs nginx-pod\n\n# Check previous container logs\nkubectl logs nginx-pod --previous\n</code></pre></p> </li> <li> <p>Pod in ImagePullBackOff <pre><code># Check image name and registry access\nkubectl describe pod nginx-pod\n</code></pre></p> </li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-a-simple-pod-in-kubernetes/#best-practices","title":"Best Practices","text":"<ol> <li>Resource Management</li> <li>Always specify resource requests and limits</li> <li>Monitor resource usage</li> <li> <p>Use appropriate container images</p> </li> <li> <p>Health Checks</p> </li> <li>Implement liveness and readiness probes</li> <li>Set appropriate timing for probes</li> <li> <p>Use proper probe types (HTTP, TCP, Command)</p> </li> <li> <p>Labels and Annotations</p> </li> <li>Use meaningful labels</li> <li>Follow naming conventions</li> <li> <p>Document with annotations</p> </li> <li> <p>Security</p> </li> <li>Use non-root users</li> <li>Implement security contexts</li> <li>Use read-only root filesystem when possible</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-a-simple-pod-in-kubernetes/#example-complete-production-ready-pod","title":"Example: Complete Production-Ready Pod","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: production-pod\n  labels:\n    app: web\n    environment: production\n  annotations:\n    description: \"Production web server pod\"\nspec:\n  containers:\n  - name: nginx\n    image: nginx:latest\n    ports:\n    - containerPort: 80\n    resources:\n      requests:\n        memory: \"64Mi\"\n        cpu: \"250m\"\n      limits:\n        memory: \"128Mi\"\n        cpu: \"500m\"\n    livenessProbe:\n      httpGet:\n        path: /healthz\n        port: 80\n      initialDelaySeconds: 3\n      periodSeconds: 3\n    readinessProbe:\n      httpGet:\n        path: /ready\n        port: 80\n      initialDelaySeconds: 5\n      periodSeconds: 5\n    securityContext:\n      runAsNonRoot: true\n      runAsUser: 1000\n      readOnlyRootFilesystem: true\n    volumeMounts:\n    - name: config-volume\n      mountPath: /etc/nginx/conf.d\n  volumes:\n  - name: config-volume\n    configMap:\n      name: nginx-config\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-a-simple-pod-in-kubernetes/#next-steps","title":"Next Steps","text":"<ol> <li>Learn about Deployments</li> <li>Explore Services</li> <li>Study pod networking</li> <li>Implement pod security policies</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/","title":"How to Create ConfigMaps in Kubernetes","text":"<p>This guide explains how to create and manage ConfigMaps in Kubernetes. ConfigMaps allow you to decouple configuration artifacts from image content to keep containerized applications portable.</p>"},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#prerequisites","title":"Prerequisites","text":"<ul> <li>Running Kubernetes cluster</li> <li>kubectl installed and configured</li> <li>Basic understanding of Kubernetes Pods</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#what-is-a-configmap","title":"What is a ConfigMap?","text":"<p>A ConfigMap is an API object used to store non-confidential data in key-value pairs. Pods can consume ConfigMaps as environment variables, command-line arguments, or configuration files in a volume.</p> <p>Key features: - Store configuration data - Decouple configuration from application code - Can be updated without rebuilding application - Support multiple formats (key-value, files, JSON, YAML)</p>"},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#creating-configmaps","title":"Creating ConfigMaps","text":""},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#1-create-from-literal-values","title":"1. Create from Literal Values","text":"<p><pre><code># Create ConfigMap from literal values\nkubectl create configmap app-config --from-literal=APP_COLOR=blue --from-literal=APP_MODE=prod\n</code></pre> Output: <pre><code>configmap/app-config created\n</code></pre></p> <p><pre><code># Verify ConfigMap\nkubectl get configmap app-config -o yaml\n</code></pre> Output: <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: app-config\n  namespace: default\ndata:\n  APP_COLOR: blue\n  APP_MODE: prod\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#2-create-from-file","title":"2. Create from File","text":"<p>First, create a configuration file: <pre><code># Create properties file\ncat &gt; config.properties &lt;&lt; EOF\napp.color=blue\napp.mode=prod\napp.memory=512m\nEOF\n</code></pre></p> <p>Then create ConfigMap: <pre><code># Create ConfigMap from file\nkubectl create configmap app-config-file --from-file=config.properties\n</code></pre> Output: <pre><code>configmap/app-config-file created\n</code></pre></p> <p><pre><code># View ConfigMap content\nkubectl get configmap app-config-file -o yaml\n</code></pre> Output: <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: app-config-file\ndata:\n  config.properties: |\n    app.color=blue\n    app.mode=prod\n    app.memory=512m\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#3-create-from-yaml-definition","title":"3. Create from YAML Definition","text":"<pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: game-config\ndata:\n  game.properties: |\n    enemies=aliens\n    lives=3\n    secret.code.allowed=true\n  ui.properties: |\n    color.good=purple\n    color.bad=yellow\n    allow.textmode=true\n  env.txt: |\n    ENV=production\n    DEBUG=false\n</code></pre> <p>Apply the configuration: <pre><code># Create ConfigMap from YAML\nkubectl apply -f game-config.yaml\n</code></pre> Output: <pre><code>configmap/game-config created\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#using-configmaps","title":"Using ConfigMaps","text":""},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#1-as-environment-variables","title":"1. As Environment Variables","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: config-env-pod\nspec:\n  containers:\n  - name: test-container\n    image: busybox\n    command: [ \"/bin/sh\", \"-c\", \"env\" ]\n    env:\n    - name: APP_COLOR\n      valueFrom:\n        configMapKeyRef:\n          name: app-config\n          key: APP_COLOR\n</code></pre> <p>Deploy and verify: <pre><code># Create pod\nkubectl apply -f config-env-pod.yaml\n</code></pre> Output: <pre><code>pod/config-env-pod created\n</code></pre></p> <p><pre><code># Check environment variables\nkubectl logs config-env-pod\n</code></pre> Output: <pre><code>PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nHOSTNAME=config-env-pod\nAPP_COLOR=blue\n...\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#2-as-configuration-files","title":"2. As Configuration Files","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: config-volume-pod\nspec:\n  containers:\n  - name: test-container\n    image: busybox\n    command: [ \"/bin/sh\",\"-c\",\"cat /etc/config/game.properties\" ]\n    volumeMounts:\n    - name: config-volume\n      mountPath: /etc/config\n  volumes:\n  - name: config-volume\n    configMap:\n      name: game-config\n</code></pre> <p>Apply and check results: <pre><code># Create pod\nkubectl apply -f config-volume-pod.yaml\n</code></pre> Output: <pre><code>pod/config-volume-pod created\n</code></pre></p> <p><pre><code># View mounted configuration\nkubectl logs config-volume-pod\n</code></pre> Output: <pre><code>enemies=aliens\nlives=3\nsecret.code.allowed=true\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#3-using-all-configmap-keys","title":"3. Using All ConfigMap Keys","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: config-env-all-pod\nspec:\n  containers:\n  - name: test-container\n    image: busybox\n    command: [ \"/bin/sh\", \"-c\", \"env\" ]\n    envFrom:\n    - configMapRef:\n        name: app-config\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#updating-configmaps","title":"Updating ConfigMaps","text":""},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#1-update-using-kubectl-edit","title":"1. Update Using kubectl edit","text":"<p><pre><code># Edit ConfigMap\nkubectl edit configmap app-config\n</code></pre> Output: <pre><code># Please edit the object below. Lines beginning with a '#' will be ignored.\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: app-config\ndata:\n  APP_COLOR: green  # Changed from blue\n  APP_MODE: prod\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#2-update-using-kubectl-patch","title":"2. Update Using kubectl patch","text":"<p><pre><code># Patch ConfigMap\nkubectl patch configmap app-config --patch '{\"data\":{\"APP_COLOR\":\"red\"}}'\n</code></pre> Output: <pre><code>configmap/app-config patched\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#3-verify-updates","title":"3. Verify Updates","text":"<p><pre><code># Check ConfigMap values\nkubectl get configmap app-config -o yaml\n</code></pre> Output: <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: app-config\ndata:\n  APP_COLOR: red\n  APP_MODE: prod\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#best-practices","title":"Best Practices","text":""},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#1-organizing-configmaps","title":"1. Organizing ConfigMaps","text":"<p>Group related configurations together and use comments to separate different sections. This makes the ConfigMap more maintainable and easier to understand:</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: app-config\n  labels:\n    app: myapp\n    environment: production\ndata:\n  # Database Configuration\n  DB_HOST: \"mysql.default.svc.cluster.local\"\n  DB_PORT: \"3306\"\n\n  # Application Settings\n  LOG_LEVEL: \"info\"\n  CACHE_TTL: \"3600\"\n\n  # Feature Flags\n  FEATURE_X_ENABLED: \"true\"\n  FEATURE_Y_ENABLED: \"false\"\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#2-version-control","title":"2. Version Control","text":"<p>Include version information in both the ConfigMap name and labels. This helps track configuration changes and enables rolling back to previous versions:</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: app-config-v1  # Version in name\n  labels:\n    app: myapp\n    version: \"1.0.0\"   # Version in labels\n    environment: production\ndata:\n  APP_VERSION: \"1.0.0\"  # Version in data for application use\n  CONFIG_TIMESTAMP: \"2025-09-23\"\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#3-using-prefix-for-keys","title":"3. Using Prefix for Keys","text":"<p>Use consistent prefixes for ConfigMap keys to avoid naming conflicts and improve clarity. This is especially important when using multiple ConfigMaps:</p> <pre><code>data:\n  # All keys prefixed with APP_\n  APP_DB_HOST: \"mysql\"\n  APP_DB_PORT: \"3306\"\n  APP_CACHE_TTL: \"3600\"\n  APP_LOG_LEVEL: \"info\"\n</code></pre> <p>You can also use different prefixes for different components: <pre><code>data:\n  # Database specific configuration\n  DB_HOST: \"mysql\"\n  DB_PORT: \"3306\"\n\n  # Cache specific configuration\n  CACHE_TTL: \"3600\"\n  CACHE_TYPE: \"redis\"\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#troubleshooting","title":"Troubleshooting","text":""},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"<ol> <li>ConfigMap Not Found</li> </ol> <p>Problem: Pods fail to start because they cannot find the referenced ConfigMap.</p> <p>Solution: <pre><code># Check if ConfigMap exists in the correct namespace\nkubectl get configmap --all-namespaces | grep app-config\n\n# Create ConfigMap if missing\nkubectl create configmap app-config --from-literal=APP_COLOR=blue\n\n# Verify ConfigMap contents\nkubectl get configmap app-config -o yaml\n</code></pre></p> <ol> <li>Pod Can't Read ConfigMap</li> </ol> <p>Problem: Pod starts but cannot access ConfigMap data.</p> <p>Solution: <pre><code># Check pod events for ConfigMap-related issues\nkubectl describe pod config-env-pod\n\n# Verify pod and ConfigMap are in same namespace\nkubectl get pod config-env-pod -o yaml | grep namespace\nkubectl get configmap app-config -o yaml | grep namespace\n\n# Check RBAC permissions if using service accounts\nkubectl auth can-i get configmaps --as=system:serviceaccount:default:default\n</code></pre></p> <ol> <li>ConfigMap Update Not Reflected</li> </ol> <p>Problem: Changes to ConfigMap are not visible in running pods.</p> <p>Solution: <pre><code># Check pod mount details\nkubectl describe pod config-volume-pod\n\n# Verify ConfigMap is properly mounted\nkubectl exec config-volume-pod -- ls -l /etc/config/\n\n# Restart pod to pick up changes\nkubectl delete pod config-volume-pod\n</code></pre></p> <p>Note: ConfigMap updates are not automatically reflected in running pods when using mounted volumes. Consider using a tool like Reloader or implementing pod rolling updates to apply changes.</p>"},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#monitoring-configmaps","title":"Monitoring ConfigMaps","text":""},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#commands-for-configmap-monitoring","title":"Commands for ConfigMap Monitoring","text":"<p><pre><code># List all ConfigMaps\nkubectl get configmaps\n</code></pre> Output: <pre><code>NAME               DATA   AGE\napp-config         2      15m\napp-config-file    1      12m\ngame-config        3      10m\n</code></pre></p> <p><pre><code># Watch ConfigMap changes\nkubectl get configmap app-config -w\n</code></pre> Output: <pre><code>NAME         DATA   AGE\napp-config   2      15m\napp-config   2      15m  # Shows updates when changes occur\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-configmaps-in-kubernetes/#next-steps","title":"Next Steps","text":"<ol> <li>Learn about Secrets for sensitive data</li> <li>Implement dynamic configuration updates</li> <li>Study ConfigMap versioning strategies</li> <li>Explore ConfigMap with different application frameworks</li> <li>Implement configuration validation</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/","title":"How to Create a DaemonSet in Kubernetes","text":"<p>This guide explains how to create and manage DaemonSets in Kubernetes, which ensure that all (or some) nodes run a copy of a pod.</p>"},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#prerequisites","title":"Prerequisites","text":"<ul> <li>Running Kubernetes cluster</li> <li>kubectl installed and configured</li> <li>Administrative access to the cluster</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#what-is-a-daemonset","title":"What is a DaemonSet?","text":"<p>A DaemonSet ensures that all (or some) Nodes run a copy of a Pod. As nodes are added to the cluster, Pods are added to them. As nodes are removed from the cluster, those Pods are garbage collected. Common uses include: - Running cluster storage daemons - Running logs collection daemons - Running node monitoring daemons - Running cluster networking plugins</p>"},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#creating-a-daemonset","title":"Creating a DaemonSet","text":""},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#basic-daemonset-example","title":"Basic DaemonSet Example","text":"<pre><code>apiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: fluentd-elasticsearch\n  namespace: kube-system\n  labels:\n    k8s-app: fluentd-logging\nspec:\n  selector:\n    matchLabels:\n      name: fluentd-elasticsearch\n  template:\n    metadata:\n      labels:\n        name: fluentd-elasticsearch\n    spec:\n      containers:\n      - name: fluentd-elasticsearch\n        image: quay.io/fluentd_elasticsearch/fluentd:v2.5.2\n        resources:\n          limits:\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 200Mi\n        volumeMounts:\n        - name: varlog\n          mountPath: /var/log\n      volumes:\n      - name: varlog\n        hostPath:\n          path: /var/log\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#daemonset-with-node-selection","title":"DaemonSet with Node Selection","text":"<pre><code>apiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: monitoring-agent\nspec:\n  selector:\n    matchLabels:\n      name: monitoring-agent\n  template:\n    metadata:\n      labels:\n        name: monitoring-agent\n    spec:\n      nodeSelector:\n        type: production\n      containers:\n      - name: monitoring-agent\n        image: monitoring/agent:v1\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#common-operations","title":"Common Operations","text":""},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#1-creating-a-daemonset","title":"1. Creating a DaemonSet","text":"<pre><code># Apply the DaemonSet configuration\nkubectl apply -f daemonset.yaml\n\n# Verify the creation\nkubectl get daemonset\n\n# Check pods created by DaemonSet\nkubectl get pods -l name=fluentd-elasticsearch\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#2-updating-a-daemonset","title":"2. Updating a DaemonSet","text":"<pre><code># Update container image\nkubectl set image daemonset/fluentd-elasticsearch \\\n  fluentd-elasticsearch=quay.io/fluentd_elasticsearch/fluentd:v2.5.3\n\n# Check rollout status\nkubectl rollout status daemonset/fluentd-elasticsearch\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#3-deleting-a-daemonset","title":"3. Deleting a DaemonSet","text":"<pre><code># Delete the DaemonSet\nkubectl delete daemonset fluentd-elasticsearch -n kube-system\n\n# Verify deletion\nkubectl get daemonset -n kube-system\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#advanced-configurations","title":"Advanced Configurations","text":""},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#1-daemonset-with-resource-limits","title":"1. DaemonSet with Resource Limits","text":"<pre><code>apiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: node-exporter\nspec:\n  selector:\n    matchLabels:\n      name: node-exporter\n  template:\n    metadata:\n      labels:\n        name: node-exporter\n    spec:\n      containers:\n      - name: node-exporter\n        image: prom/node-exporter:v1.0.1\n        resources:\n          limits:\n            cpu: 100m\n            memory: 100Mi\n          requests:\n            cpu: 50m\n            memory: 50Mi\n        ports:\n        - containerPort: 9100\n          protocol: TCP\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#2-daemonset-with-tolerations","title":"2. DaemonSet with Tolerations","text":"<pre><code>apiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: monitoring-daemon\nspec:\n  selector:\n    matchLabels:\n      name: monitoring-daemon\n  template:\n    metadata:\n      labels:\n        name: monitoring-daemon\n    spec:\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        effect: NoSchedule\n      containers:\n      - name: monitoring-agent\n        image: monitoring/agent:v1\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#best-practices","title":"Best Practices","text":""},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#1-update-strategy","title":"1. Update Strategy","text":"<pre><code>spec:\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#2-pod-security","title":"2. Pod Security","text":"<pre><code>spec:\n  template:\n    spec:\n      securityContext:\n        runAsNonRoot: true\n        runAsUser: 1000\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#3-health-checks","title":"3. Health Checks","text":"<pre><code>spec:\n  template:\n    spec:\n      containers:\n      - name: monitoring-agent\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 8080\n          initialDelaySeconds: 15\n          periodSeconds: 20\n        readinessProbe:\n          httpGet:\n            path: /ready\n            port: 8080\n          initialDelaySeconds: 5\n          periodSeconds: 10\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#production-examples","title":"Production Examples","text":""},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#1-logging-agent-daemonset","title":"1. Logging Agent DaemonSet","text":"<pre><code>apiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: logging-agent\n  namespace: logging\nspec:\n  selector:\n    matchLabels:\n      app: logging-agent\n  template:\n    metadata:\n      labels:\n        app: logging-agent\n    spec:\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        effect: NoSchedule\n      containers:\n      - name: fluentd\n        image: fluent/fluentd-kubernetes-daemonset:v1.14-debian-1\n        env:\n        - name: FLUENT_ELASTICSEARCH_HOST\n          value: \"elasticsearch-logging\"\n        - name: FLUENT_ELASTICSEARCH_PORT\n          value: \"9200\"\n        resources:\n          limits:\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 200Mi\n        volumeMounts:\n        - name: varlog\n          mountPath: /var/log\n        - name: varlibdockercontainers\n          mountPath: /var/lib/docker/containers\n          readOnly: true\n      terminationGracePeriodSeconds: 30\n      volumes:\n      - name: varlog\n        hostPath:\n          path: /var/log\n      - name: varlibdockercontainers\n        hostPath:\n          path: /var/lib/docker/containers\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#2-network-plugin-daemonset","title":"2. Network Plugin DaemonSet","text":"<pre><code>apiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: calico-node\n  namespace: kube-system\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n    spec:\n      hostNetwork: true\n      tolerations:\n      - effect: NoSchedule\n        operator: Exists\n      containers:\n      - name: calico-node\n        image: calico/node:v3.19.1\n        env:\n        - name: DATASTORE_TYPE\n          value: \"kubernetes\"\n        - name: FELIX_LOGSEVERITYSCREEN\n          value: \"info\"\n        securityContext:\n          privileged: true\n        resources:\n          requests:\n            cpu: 250m\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#troubleshooting","title":"Troubleshooting","text":""},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"<ol> <li> <p>Pods Not Starting on All Nodes <pre><code># Check node status\nkubectl get nodes\n\n# Check pod status\nkubectl get pods -l name=your-daemonset -o wide\n\n# Check events\nkubectl get events --field-selector involvedObject.kind=DaemonSet\n</code></pre></p> </li> <li> <p>Resource Constraints <pre><code># Check node resources\nkubectl describe node &lt;node-name&gt;\n\n# Check pod resource requests/limits\nkubectl describe pod &lt;pod-name&gt;\n</code></pre></p> </li> <li> <p>Node Selection Issues <pre><code># Verify node labels\nkubectl get nodes --show-labels\n\n# Check DaemonSet node selector\nkubectl get daemonset &lt;name&gt; -o yaml\n</code></pre></p> </li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#monitoring-daemonsets","title":"Monitoring DaemonSets","text":""},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#commands-for-monitoring","title":"Commands for Monitoring","text":"<pre><code># Get DaemonSet status\nkubectl get ds\nkubectl describe ds &lt;daemonset-name&gt;\n\n# Check pod distribution\nkubectl get pods -l name=&lt;daemonset-label&gt; -o wide\n\n# View DaemonSet events\nkubectl get events --field-selector involvedObject.kind=DaemonSet\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-daemonset-in-kubernetes/#next-steps","title":"Next Steps","text":"<ol> <li>Implement monitoring and logging</li> <li>Configure resource limits</li> <li>Set up security policies</li> <li>Plan for updates and rollbacks</li> <li>Implement node affinity rules</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-deployments-in-kubernetes/","title":"How to Create Deployments in Kubernetes","text":"<p>This guide explains how to create and manage Deployments in Kubernetes. A Deployment provides declarative updates for Pods and ReplicaSets, allowing for easy rolling updates and rollbacks.</p>"},{"location":"kubernetes/tutorials/how-to-create-deployments-in-kubernetes/#prerequisites","title":"Prerequisites","text":"<ul> <li>Running Kubernetes cluster</li> <li>kubectl installed and configured</li> <li>Basic understanding of Pods and ReplicaSets</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-deployments-in-kubernetes/#what-is-a-deployment","title":"What is a Deployment?","text":"<p>A Deployment provides declarative updates for Pods and ReplicaSets. You describe a desired state in a Deployment, and the Deployment Controller changes the actual state to the desired state at a controlled rate.</p> <p>Key features: - Rolling updates and rollbacks - Replica scaling - Pause and resume capabilities - Deployment status tracking - Version control for pod templates</p>"},{"location":"kubernetes/tutorials/how-to-create-deployments-in-kubernetes/#creating-a-deployment","title":"Creating a Deployment","text":""},{"location":"kubernetes/tutorials/how-to-create-deployments-in-kubernetes/#1-basic-deployment-example","title":"1. Basic Deployment Example","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n</code></pre> <p>Deploy and verify:</p> <p><pre><code># Create Deployment\nkubectl apply -f nginx-deployment.yaml\n</code></pre> Output: <pre><code>deployment.apps/nginx-deployment created\n</code></pre></p> <p><pre><code># Check deployment status\nkubectl get deployment nginx-deployment\n</code></pre> Output: <pre><code>NAME               READY   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment   3/3     3            3           45s\n</code></pre></p> <p><pre><code># View rollout status\nkubectl rollout status deployment/nginx-deployment\n</code></pre> Output: <pre><code>deployment \"nginx-deployment\" successfully rolled out\n</code></pre></p> <p><pre><code># Check created pods\nkubectl get pods -l app=nginx\n</code></pre> Output: <pre><code>NAME                               READY   STATUS    RESTARTS   AGE\nnginx-deployment-6b6c4f9f8-7d2fq   1/1     Running   0          45s\nnginx-deployment-6b6c4f9f8-8k9pz   1/1     Running   0          45s\nnginx-deployment-6b6c4f9f8-9p8c5   1/1     Running   0          45s\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-deployments-in-kubernetes/#2-deployment-with-rolling-update-strategy","title":"2. Deployment with Rolling Update Strategy","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  replicas: 5\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-deployments-in-kubernetes/#common-operations","title":"Common Operations","text":""},{"location":"kubernetes/tutorials/how-to-create-deployments-in-kubernetes/#1-updating-a-deployment","title":"1. Updating a Deployment","text":"<p><pre><code># Update container image\nkubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n</code></pre> Output: <pre><code>deployment.apps/nginx-deployment image updated\n\n# Watch rollout progress\nNAME                               READY   STATUS              RESTARTS   AGE\nnginx-deployment-6b6c4f9f8-7d2fq   1/1     Running            0          5m\nnginx-deployment-6b6c4f9f8-8k9pz   1/1     Running            0          5m\nnginx-deployment-6b6c4f9f8-9p8c5   1/1     Running            0          5m\nnginx-deployment-7d4f9f6b8-x2k8r   0/1     ContainerCreating  0          2s\nnginx-deployment-7d4f9f6b8-y3m9s   0/1     ContainerCreating  0          2s\nnginx-deployment-6b6c4f9f8-7d2fq   1/1     Terminating        0          5m\nnginx-deployment-7d4f9f6b8-x2k8r   1/1     Running            0          3s\nnginx-deployment-7d4f9f6b8-z4n7t   0/1     ContainerCreating  0          1s\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-deployments-in-kubernetes/#2-rolling-back-a-deployment","title":"2. Rolling Back a Deployment","text":"<p><pre><code># Check rollout history\nkubectl rollout history deployment/nginx-deployment\n</code></pre> Output: <pre><code>deployments \"nginx-deployment\"\nREVISION  CHANGE-CAUSE\n1         &lt;none&gt;\n2         kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n</code></pre></p> <p><pre><code># Rollback to previous version\nkubectl rollout undo deployment/nginx-deployment\n</code></pre> Output: <pre><code>deployment.apps/nginx-deployment rolled back\n\n# Watch rollback progress\nNAME                               READY   STATUS              RESTARTS   AGE\nnginx-deployment-7d4f9f6b8-x2k8r   1/1     Running            0          2m\nnginx-deployment-7d4f9f6b8-y3m9s   1/1     Running            0          2m\nnginx-deployment-7d4f9f6b8-z4n7t   1/1     Running            0          2m\nnginx-deployment-6b6c4f9f8-a1b2c   0/1     ContainerCreating  0          2s\nnginx-deployment-6b6c4f9f8-c3d4e   0/1     ContainerCreating  0          2s\nnginx-deployment-7d4f9f6b8-x2k8r   1/1     Terminating        0          2m\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-deployments-in-kubernetes/#3-scaling-a-deployment","title":"3. Scaling a Deployment","text":"<p><pre><code># Scale up deployment\nkubectl scale deployment nginx-deployment --replicas=10\n</code></pre> Output: <pre><code>deployment.apps/nginx-deployment scaled\n\n# Watch scaling progress\nNAME                               READY   STATUS              RESTARTS   AGE\nnginx-deployment-6b6c4f9f8-7d2fq   1/1     Running            0          10m\nnginx-deployment-6b6c4f9f8-8k9pz   1/1     Running            0          10m\nnginx-deployment-6b6c4f9f8-9p8c5   1/1     Running            0          10m\nnginx-deployment-6b6c4f9f8-b2wzl   0/1     ContainerCreating  0          2s\nnginx-deployment-6b6c4f9f8-c3d4e   0/1     ContainerCreating  0          2s\nnginx-deployment-6b6c4f9f8-f7t6r   0/1     ContainerCreating  0          2s\nnginx-deployment-6b6c4f9f8-h8j9k   0/1     ContainerCreating  0          2s\nnginx-deployment-6b6c4f9f8-k9p2x   0/1     ContainerCreating  0          2s\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-deployments-in-kubernetes/#advanced-configurations","title":"Advanced Configurations","text":""},{"location":"kubernetes/tutorials/how-to-create-deployments-in-kubernetes/#1-deployment-with-resource-limits","title":"1. Deployment with Resource Limits","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: resource-demo\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: resource-demo\n  template:\n    metadata:\n      labels:\n        app: resource-demo\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        resources:\n          requests:\n            memory: \"64Mi\"\n            cpu: \"250m\"\n          limits:\n            memory: \"128Mi\"\n            cpu: \"500m\"\n</code></pre> <p>Apply and verify:</p> <p><pre><code># Create deployment\nkubectl apply -f resource-demo.yaml\n</code></pre> Output: <pre><code>deployment.apps/resource-demo created\n</code></pre></p> <p><pre><code># Check resource allocation\nkubectl get pods -l app=resource-demo -o yaml | grep -A 5 resources:\n</code></pre> Output: <pre><code>    resources:\n      limits:\n        cpu: 500m\n        memory: 128Mi\n      requests:\n        cpu: 250m\n        memory: 64Mi\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-deployments-in-kubernetes/#2-deployment-with-health-checks","title":"2. Deployment with Health Checks","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: health-check-demo\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: health-check\n  template:\n    metadata:\n      labels:\n        app: health-check\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 80\n          initialDelaySeconds: 3\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 80\n          initialDelaySeconds: 5\n          periodSeconds: 5\n</code></pre> <p>Deploy and monitor health checks:</p> <p><pre><code># Create deployment\nkubectl apply -f health-check-demo.yaml\n</code></pre> Output: <pre><code>deployment.apps/health-check-demo created\n</code></pre></p> <p><pre><code># Monitor probe status\nkubectl describe pods -l app=health-check | grep -A 5 Liveness:\n</code></pre> Output: <pre><code>    Liveness:  http-get http://:80/ delay=3s timeout=1s period=3s #success=1 #failure=3\n    Readiness: http-get http://:80/ delay=5s timeout=1s period=5s #success=1 #failure=3\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-deployments-in-kubernetes/#troubleshooting","title":"Troubleshooting","text":""},{"location":"kubernetes/tutorials/how-to-create-deployments-in-kubernetes/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"<ol> <li>Failed Rollout <pre><code># Check rollout status\nkubectl rollout status deployment/nginx-deployment\n</code></pre> Output: <pre><code>Waiting for rollout to finish: 2 out of 3 new replicas have been updated...\nerror: deployment \"nginx-deployment\" exceeded its progress deadline\n</code></pre></li> </ol> <p><pre><code># Check deployment conditions\nkubectl get deployment nginx-deployment -o yaml | grep -A 5 conditions:\n</code></pre> Output: <pre><code>status:\n  conditions:\n  - lastTransitionTime: \"2025-09-23T10:30:00Z\"\n    lastUpdateTime: \"2025-09-23T10:35:00Z\"\n    message: ReplicaSet \"nginx-deployment-7d4f9f6b8\" has timed out progressing.\n    reason: ProgressDeadlineExceeded\n    status: \"False\"\n    type: Progressing\n</code></pre></p> <ol> <li>Image Pull Errors <pre><code># Check pod events\nkubectl describe pod -l app=nginx\n</code></pre> Output: <pre><code>Events:\n  Type     Reason     Age   From               Message\n  ----     ------     ----  ----               -------\n  Normal   Scheduled  1m    default-scheduler   Successfully assigned default/nginx-deployment-6b6c4f9f8-7d2fq to worker-node1\n  Warning  Failed     1m    kubelet            Failed to pull image \"nginx:1.16.1\": rpc error: code = Unknown desc = Error response from daemon: manifest for nginx:1.16.1 not found\n</code></pre></li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-deployments-in-kubernetes/#best-practices","title":"Best Practices","text":"<ol> <li>Use Rolling Updates</li> <li>Set appropriate maxSurge and maxUnavailable</li> <li>Use readiness probes</li> <li> <p>Set appropriate update strategy</p> </li> <li> <p>Resource Management <pre><code>resources:\n  requests:\n    cpu: \"250m\"\n    memory: \"64Mi\"\n  limits:\n    cpu: \"500m\"\n    memory: \"128Mi\"\n</code></pre></p> </li> <li> <p>Labels and Selectors <pre><code>metadata:\n  labels:\n    app: myapp\n    environment: production\n    tier: frontend\n    version: v1.0.0\n</code></pre></p> </li> <li> <p>Health Checks <pre><code>livenessProbe:\n  httpGet:\n    path: /healthz\n    port: 8080\n  initialDelaySeconds: 15\n  periodSeconds: 10\nreadinessProbe:\n  httpGet:\n    path: /ready\n    port: 8080\n  initialDelaySeconds: 5\n  periodSeconds: 5\n</code></pre></p> </li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-deployments-in-kubernetes/#next-steps","title":"Next Steps","text":"<ol> <li>Learn about StatefulSets for stateful applications</li> <li>Explore Horizontal Pod Autoscaling</li> <li>Implement custom deployment strategies</li> <li>Study blue-green and canary deployments</li> <li>Set up monitoring and alerts for deployments</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-ingress-in-kubernetes/","title":"How to Create and Configure Ingress in Kubernetes","text":"<p>This guide explains how to implement and manage Ingress resources in Kubernetes for routing external HTTP/HTTPS traffic to your services.</p>"},{"location":"kubernetes/tutorials/how-to-create-ingress-in-kubernetes/#prerequisites","title":"Prerequisites","text":"<ul> <li>Running Kubernetes cluster</li> <li>NGINX Ingress Controller installed</li> <li>Basic understanding of DNS and HTTP routing</li> <li>(Optional) cert-manager for SSL/TLS certificates</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-ingress-in-kubernetes/#what-is-ingress","title":"What is Ingress?","text":"<p>Ingress exposes HTTP and HTTPS routes from outside the cluster to services within the cluster. Traffic routing is controlled by rules defined on the Ingress resource.</p> <p>Key features: - Path-based routing - Host-based routing - SSL/TLS termination - Load balancing - Name-based virtual hosting</p>"},{"location":"kubernetes/tutorials/how-to-create-ingress-in-kubernetes/#basic-ingress-configurations","title":"Basic Ingress Configurations","text":""},{"location":"kubernetes/tutorials/how-to-create-ingress-in-kubernetes/#1-simple-path-based-routing","title":"1. Simple Path-based Routing","text":"<pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: simple-routing\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  ingressClassName: nginx\n  rules:\n  - http:\n      paths:\n      - path: /app1\n        pathType: Prefix\n        backend:\n          service:\n            name: app1-service\n            port:\n              number: 80\n      - path: /app2\n        pathType: Prefix\n        backend:\n          service:\n            name: app2-service\n            port:\n              number: 80\n</code></pre> <p>Apply and verify: <pre><code>kubectl apply -f simple-ingress.yaml\nkubectl get ingress simple-routing\n</code></pre></p> <p>Output: <pre><code>NAME             CLASS   HOSTS   ADDRESS          PORTS   AGE\nsimple-routing   nginx   *       192.168.1.100    80      30s\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-ingress-in-kubernetes/#2-host-based-routing","title":"2. Host-based Routing","text":"<pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: host-routing\nspec:\n  ingressClassName: nginx\n  rules:\n  - host: app1.example.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: app1-service\n            port:\n              number: 80\n  - host: app2.example.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: app2-service\n            port:\n              number: 80\n</code></pre> <p>Check the status: <pre><code>kubectl describe ingress host-routing\n</code></pre></p> <p>Output: <pre><code>Name:             host-routing\nNamespace:        default\nAddress:          192.168.1.100\nDefault backend:  default-http-backend:80 (&lt;error: endpoints \"default-http-backend\" not found&gt;)\nRules:\n  Host              Path  Backends\n  ----              ----  --------\n  app1.example.com  \n                    /   app1-service:80 (10.244.0.23:80)\n  app2.example.com  \n                    /   app2-service:80 (10.244.0.24:80)\nEvents:\n  Type    Reason  Age   From                      Message\n  ----    ------  ----  ----                      -------\n  Normal  CREATE  45s   nginx-ingress-controller  Ingress default/host-routing\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-ingress-in-kubernetes/#advanced-configurations","title":"Advanced Configurations","text":""},{"location":"kubernetes/tutorials/how-to-create-ingress-in-kubernetes/#1-ssltls-configuration","title":"1. SSL/TLS Configuration","text":"<pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: tls-example\n  annotations:\n    cert-manager.io/cluster-issuer: \"letsencrypt-prod\"\nspec:\n  ingressClassName: nginx\n  tls:\n  - hosts:\n    - secure.example.com\n    secretName: example-tls\n  rules:\n  - host: secure.example.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: secure-service\n            port:\n              number: 80\n</code></pre> <p>Check TLS status: <pre><code>kubectl get certificate example-tls\n</code></pre></p> <p>Output: <pre><code>NAME          READY   SECRET        AGE\nexample-tls   True    example-tls   2m\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-ingress-in-kubernetes/#2-rate-limiting","title":"2. Rate Limiting","text":"<pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: rate-limit\n  annotations:\n    nginx.ingress.kubernetes.io/limit-rps: \"10\"\n    nginx.ingress.kubernetes.io/limit-connections: \"5\"\nspec:\n  ingressClassName: nginx\n  rules:\n  - host: api.example.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: api-service\n            port:\n              number: 80\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-ingress-in-kubernetes/#3-session-persistence","title":"3. Session Persistence","text":"<pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: sticky-session\n  annotations:\n    nginx.ingress.kubernetes.io/affinity: \"cookie\"\n    nginx.ingress.kubernetes.io/session-cookie-name: \"route\"\n    nginx.ingress.kubernetes.io/session-cookie-expires: \"172800\"\n    nginx.ingress.kubernetes.io/session-cookie-max-age: \"172800\"\nspec:\n  ingressClassName: nginx\n  rules:\n  - host: app.example.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: web-service\n            port:\n              number: 80\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-ingress-in-kubernetes/#production-examples","title":"Production Examples","text":""},{"location":"kubernetes/tutorials/how-to-create-ingress-in-kubernetes/#1-multi-domain-application","title":"1. Multi-domain Application","text":"<pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: multi-domain\n  annotations:\n    cert-manager.io/cluster-issuer: \"letsencrypt-prod\"\n    nginx.ingress.kubernetes.io/proxy-body-size: \"50m\"\n    nginx.ingress.kubernetes.io/proxy-connect-timeout: \"60\"\nspec:\n  ingressClassName: nginx\n  tls:\n  - hosts:\n    - api.example.com\n    - web.example.com\n    secretName: multi-domain-tls\n  rules:\n  - host: api.example.com\n    http:\n      paths:\n      - path: /v1\n        pathType: Prefix\n        backend:\n          service:\n            name: api-v1-service\n            port:\n              number: 80\n      - path: /v2\n        pathType: Prefix\n        backend:\n          service:\n            name: api-v2-service\n            port:\n              number: 80\n  - host: web.example.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: web-service\n            port:\n              number: 80\n</code></pre> <p>Check multi-domain status: <pre><code>kubectl get ingress multi-domain -o wide\n</code></pre></p> <p>Output: <pre><code>NAME           CLASS   HOSTS                           ADDRESS         PORTS     AGE\nmulti-domain   nginx   api.example.com,web.example.com 192.168.1.100  80, 443  1m\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-ingress-in-kubernetes/#monitoring-and-troubleshooting","title":"Monitoring and Troubleshooting","text":""},{"location":"kubernetes/tutorials/how-to-create-ingress-in-kubernetes/#1-check-ingress-status","title":"1. Check Ingress Status","text":"<pre><code>kubectl describe ingress &lt;ingress-name&gt;\n</code></pre> <p>Example Output: <pre><code>Name:             web-ingress\nNamespace:        default\nAddress:          192.168.1.100\nDefault backend:  default-http-backend:80\nRules:\n  Host        Path  Backends\n  ----        ----  --------\n  *           /     web-service:80 (10.244.0.25:80)\nAnnotations:  nginx.ingress.kubernetes.io/rewrite-target: /\nEvents:\n  Type    Reason  Age   From                      Message\n  ----    ------  ----  ----                      -------\n  Normal  CREATE  1m    nginx-ingress-controller  Ingress default/web-ingress\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-ingress-in-kubernetes/#2-view-ingress-controller-logs","title":"2. View Ingress Controller Logs","text":"<pre><code>kubectl logs -n ingress-nginx -l app.kubernetes.io/name=ingress-nginx\n</code></pre> <p>Example Output: <pre><code>I0923 10:20:30.123456       7 event.go:282] Event(v1.ObjectReference{Kind:\"Ingress\", ...})\nI0923 10:20:30.234567       7 controller.go:155] Configuration changes detected, backend reload required\nI0923 10:20:30.345678       7 controller.go:172] Backend successfully reloaded\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-ingress-in-kubernetes/#3-test-ingress-rules","title":"3. Test Ingress Rules","text":"<pre><code># Using curl\ncurl -H \"Host: app.example.com\" http://&lt;ingress-ip&gt;/path\n</code></pre> <p>Example Output: <pre><code>HTTP/1.1 200 OK\nServer: nginx/1.21.1\nDate: Mon, 23 Sep 2025 10:20:35 GMT\nContent-Type: application/json\nContent-Length: 42\n\n{\"message\": \"Successfully accessed through Ingress\"}\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-ingress-in-kubernetes/#best-practices","title":"Best Practices","text":"<ol> <li>Always use TLS in production</li> <li>Implement rate limiting for APIs</li> <li>Set appropriate timeouts</li> <li>Use proper health checks</li> <li>Monitor Ingress controller metrics</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-ingress-in-kubernetes/#troubleshooting-common-issues","title":"Troubleshooting Common Issues","text":"<ol> <li>404 Not Found</li> <li>Check service name and port</li> <li>Verify path configuration</li> <li> <p>Check if service endpoints exist</p> </li> <li> <p>502 Bad Gateway</p> </li> <li>Check if backend pods are running</li> <li>Verify service selectors</li> <li> <p>Check pod health</p> </li> <li> <p>SSL Certificate Issues</p> </li> <li>Verify cert-manager configuration</li> <li>Check certificate status</li> <li>Ensure DNS records are correct</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-ingress-in-kubernetes/#next-steps","title":"Next Steps","text":"<ol> <li>Set up monitoring and alerting</li> <li>Implement canary deployments</li> <li>Configure WAF rules</li> <li>Set up automated testing</li> <li>Implement blue-green deployments</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-pods-in-kubernetes/","title":"How to Create Pods in Kubernetes","text":"<p>This guide explains how to create and manage Pods in Kubernetes. A Pod is the smallest deployable unit in Kubernetes that can be created and managed.</p>"},{"location":"kubernetes/tutorials/how-to-create-pods-in-kubernetes/#prerequisites","title":"Prerequisites","text":"<ul> <li>Running Kubernetes cluster</li> <li>kubectl installed and configured</li> <li>Basic understanding of container concepts</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-pods-in-kubernetes/#what-is-a-pod","title":"What is a Pod?","text":"<p>A Pod represents a single instance of a running process in your cluster. It contains one or more containers, shared storage resources, network IP, and options that govern how the container(s) should run.</p> <p>Key features: - Can contain multiple containers - Shares network namespace - Shares storage volumes - Ephemeral by nature - Scheduled on nodes</p>"},{"location":"kubernetes/tutorials/how-to-create-pods-in-kubernetes/#creating-a-pod","title":"Creating a Pod","text":""},{"location":"kubernetes/tutorials/how-to-create-pods-in-kubernetes/#1-basic-pod-example","title":"1. Basic Pod Example","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-pod\n  labels:\n    app: nginx\nspec:\n  containers:\n  - name: nginx\n    image: nginx:1.14.2\n    ports:\n    - containerPort: 80\n</code></pre> <p>Create and verify the pod:</p> <p><pre><code># Create Pod from YAML\nkubectl apply -f nginx-pod.yaml\n</code></pre> Output: <pre><code>pod/nginx-pod created\n</code></pre></p> <p><pre><code># Check pod status\nkubectl get pod nginx-pod\n</code></pre> Output: <pre><code>NAME        READY   STATUS    RESTARTS   AGE\nnginx-pod   1/1     Running   0          45s\n</code></pre></p> <p><pre><code># Get detailed pod information\nkubectl describe pod nginx-pod\n</code></pre> Output: <pre><code>Name:         nginx-pod\nNamespace:    default\nPriority:     0\nNode:         worker-node1/192.168.1.101\nStart Time:   Mon, 23 Sep 2025 10:30:00 +0000\nLabels:       app=nginx\nStatus:       Running\nIP:           10.244.1.15\nIPs:\n  IP:  10.244.1.15\nContainers:\n  nginx:\n    Container ID:   docker://abc123...\n    Image:         nginx:1.14.2\n    Image ID:      docker-pullable://nginx@sha256:abc123...\n    Port:          80/TCP\n    Host Port:     0/TCP\n    State:         Running\n      Started:     Mon, 23 Sep 2025 10:30:15 +0000\n    Ready:         True\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  45s   default-scheduler  Successfully assigned default/nginx-pod to worker-node1\n  Normal  Pulling    44s   kubelet            Pulling image \"nginx:1.14.2\"\n  Normal  Pulled     30s   kubelet            Successfully pulled image \"nginx:1.14.2\"\n  Normal  Created    28s   kubelet            Created container nginx\n  Normal  Started    28s   kubelet            Started container nginx\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-pods-in-kubernetes/#2-multi-container-pod","title":"2. Multi-Container Pod","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: web-app\n  labels:\n    app: web\nspec:\n  containers:\n  - name: nginx\n    image: nginx:1.14.2\n    ports:\n    - containerPort: 80\n  - name: log-aggregator\n    image: fluentd:v1.14\n    volumeMounts:\n    - name: logs\n      mountPath: /var/log\n  volumes:\n  - name: logs\n    emptyDir: {}\n</code></pre> <p>Deploy and verify the multi-container pod:</p> <p><pre><code># Create the pod\nkubectl apply -f web-app.yaml\n</code></pre> Output: <pre><code>pod/web-app created\n</code></pre></p> <p><pre><code># Check container statuses\nkubectl get pod web-app\n</code></pre> Output: <pre><code>NAME      READY   STATUS    RESTARTS   AGE\nweb-app   2/2     Running   0          30s\n</code></pre></p> <p><pre><code># View container logs\nkubectl logs web-app -c nginx\n</code></pre> Output: <pre><code>10.244.1.15 - - [23/Sep/2025:10:32:00 +0000] \"GET / HTTP/1.1\" 200 612 \"-\" \"Mozilla/5.0...\"\n10.244.1.15 - - [23/Sep/2025:10:32:01 +0000] \"GET /favicon.ico HTTP/1.1\" 404 555 \"-\" \"Mozilla/5.0...\"\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-pods-in-kubernetes/#pod-lifecycle","title":"Pod Lifecycle","text":""},{"location":"kubernetes/tutorials/how-to-create-pods-in-kubernetes/#1-pod-states","title":"1. Pod States","text":"<p><pre><code># Monitor pod status changes\nkubectl get pod nginx-pod -w\n</code></pre> Output: <pre><code>NAME        READY   STATUS              RESTARTS   AGE\nnginx-pod   0/1     ContainerCreating   0          0s\nnginx-pod   1/1     Running             0          15s\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-pods-in-kubernetes/#2-pod-termination","title":"2. Pod Termination","text":"<p><pre><code># Delete a pod\nkubectl delete pod nginx-pod\n</code></pre> Output: <pre><code>pod \"nginx-pod\" deleted\n\n# Watch termination process\nNAME        READY   STATUS        RESTARTS   AGE\nnginx-pod   1/1     Terminating   0          5m\nnginx-pod   0/1     Terminating   0          5m10s\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-pods-in-kubernetes/#advanced-pod-configurations","title":"Advanced Pod Configurations","text":""},{"location":"kubernetes/tutorials/how-to-create-pods-in-kubernetes/#1-pod-with-resource-requests-and-limits","title":"1. Pod with Resource Requests and Limits","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: resource-demo\nspec:\n  containers:\n  - name: nginx\n    image: nginx:1.14.2\n    resources:\n      requests:\n        memory: \"64Mi\"\n        cpu: \"250m\"\n      limits:\n        memory: \"128Mi\"\n        cpu: \"500m\"\n</code></pre> <p>Apply and verify resource settings:</p> <p><pre><code># Create pod\nkubectl apply -f resource-demo.yaml\n</code></pre> Output: <pre><code>pod/resource-demo created\n</code></pre></p> <p><pre><code># Check resource allocation\nkubectl describe pod resource-demo | grep -A 3 Resources\n</code></pre> Output: <pre><code>    Resources:\n      Limits:\n        cpu:     500m\n        memory:  128Mi\n      Requests:\n        cpu:     250m\n        memory:  64Mi\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-pods-in-kubernetes/#2-pod-with-health-checks","title":"2. Pod with Health Checks","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: health-check-demo\nspec:\n  containers:\n  - name: nginx\n    image: nginx:1.14.2\n    livenessProbe:\n      httpGet:\n        path: /\n        port: 80\n      initialDelaySeconds: 3\n      periodSeconds: 3\n    readinessProbe:\n      httpGet:\n        path: /\n        port: 80\n      initialDelaySeconds: 5\n      periodSeconds: 5\n</code></pre> <p>Deploy and monitor health checks:</p> <p><pre><code># Create pod\nkubectl apply -f health-check-demo.yaml\n</code></pre> Output: <pre><code>pod/health-check-demo created\n</code></pre></p> <p><pre><code># Monitor probe status\nkubectl describe pod health-check-demo | grep -A 5 Liveness\n</code></pre> Output: <pre><code>    Liveness:       http-get http://:80/ delay=3s timeout=1s period=3s #success=1 #failure=3\n    Readiness:      http-get http://:80/ delay=5s timeout=1s period=5s #success=1 #failure=3\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-pods-in-kubernetes/#troubleshooting","title":"Troubleshooting","text":""},{"location":"kubernetes/tutorials/how-to-create-pods-in-kubernetes/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"<ol> <li> <p>Pod in Pending State <pre><code># Check pod status\nkubectl describe pod nginx-pod\n</code></pre> Output: <pre><code>Events:\n  Type     Reason            Age   From               Message\n  ----     ------           ----  ----               -------\n  Warning  FailedScheduling  30s   default-scheduler  0/3 nodes are available: insufficient cpu\n</code></pre></p> </li> <li> <p>Pod in CrashLoopBackOff <pre><code># Check pod logs\nkubectl logs nginx-pod\n</code></pre> Output: <pre><code>Error: Unable to open config file \"/etc/nginx/nginx.conf\": No such file or directory\n</code></pre></p> </li> <li> <p>Container Image Pull Errors <pre><code># Check pod events\nkubectl describe pod nginx-pod\n</code></pre> Output: <pre><code>Events:\n  Type     Reason     Age   From               Message\n  ----     ------     ----  ----               -------\n  Normal   Scheduled  1m    default-scheduler   Successfully assigned default/nginx-pod to worker-node1\n  Warning  Failed     1m    kubelet            Failed to pull image \"nginx:1.14.2\": rpc error: code = Unknown desc = Error response from daemon: pull access denied\n</code></pre></p> </li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-pods-in-kubernetes/#best-practices","title":"Best Practices","text":"<ol> <li>Always set resource requests and limits</li> <li>Implement health checks</li> <li>Use appropriate labels for organization</li> <li>Don't use naked pods in production (use Deployments/StatefulSets instead)</li> <li>Keep pods stateless when possible</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-pods-in-kubernetes/#next-steps","title":"Next Steps","text":"<ol> <li>Learn about Deployments (which manage pods)</li> <li>Understand Services for pod networking</li> <li>Study ConfigMaps and Secrets for configuration</li> <li>Explore Pod security contexts</li> <li>Learn about Pod disruption budgets</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/","title":"How to Create Persistent Volumes and Persistent Volume Claims in Kubernetes","text":"<p>This guide explains how to create and manage persistent storage in Kubernetes using Persistent Volumes (PV) and Persistent Volume Claims (PVC).</p>"},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#prerequisites","title":"Prerequisites","text":"<ul> <li>Running Kubernetes cluster</li> <li>kubectl installed and configured</li> <li>Storage provider (local disk, NFS, cloud provider, etc.)</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#understanding-pv-and-pvc","title":"Understanding PV and PVC","text":""},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#persistent-volume-pv","title":"Persistent Volume (PV)","text":"<ul> <li>Piece of storage in the cluster</li> <li>Provisioned by administrator</li> <li>Lifecycle independent of pods</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#persistent-volume-claim-pvc","title":"Persistent Volume Claim (PVC)","text":"<ul> <li>Storage request by user</li> <li>Claims can request specific size and access modes</li> <li>Binds to a PV</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#creating-a-persistent-volume","title":"Creating a Persistent Volume","text":""},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#local-storage-pv","title":"Local Storage PV","text":"<pre><code>apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: local-pv\nspec:\n  capacity:\n    storage: 10Gi\n  volumeMode: Filesystem\n  accessModes:\n    - ReadWriteOnce\n  persistentVolumeReclaimPolicy: Retain\n  storageClassName: local-storage\n  local:\n    path: /mnt/data\n  nodeAffinity:\n    required:\n      nodeSelectorTerms:\n      - matchExpressions:\n        - key: kubernetes.io/hostname\n          operator: In\n          values:\n          - worker-node1\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#nfs-pv","title":"NFS PV","text":"<pre><code>apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: nfs-pv\nspec:\n  capacity:\n    storage: 5Gi\n  volumeMode: Filesystem\n  accessModes:\n    - ReadWriteMany\n  persistentVolumeReclaimPolicy: Recycle\n  storageClassName: nfs\n  nfs:\n    path: /mnt/data\n    server: nfs-server.example.com\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#creating-a-persistent-volume-claim","title":"Creating a Persistent Volume Claim","text":"<pre><code>apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: mysql-pvc\nspec:\n  accessModes:\n    - ReadWriteOnce\n  volumeMode: Filesystem\n  resources:\n    requests:\n      storage: 5Gi\n  storageClassName: standard\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#using-pvc-in-pods","title":"Using PVC in Pods","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: mysql-pod\nspec:\n  containers:\n  - name: mysql\n    image: mysql:5.7\n    volumeMounts:\n    - name: mysql-storage\n      mountPath: /var/lib/mysql\n  volumes:\n  - name: mysql-storage\n    persistentVolumeClaim:\n      claimName: mysql-pvc\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#access-modes","title":"Access Modes","text":"<ol> <li>ReadWriteOnce (RWO)</li> <li> <p>Volume mounted as read-write by single node</p> </li> <li> <p>ReadOnlyMany (ROX)</p> </li> <li> <p>Volume mounted read-only by many nodes</p> </li> <li> <p>ReadWriteMany (RWX)</p> </li> <li>Volume mounted as read-write by many nodes</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#reclaim-policies","title":"Reclaim Policies","text":"<ol> <li>Retain</li> <li>Keeps data when PVC is deleted</li> <li> <p>Requires manual cleanup</p> </li> <li> <p>Delete</p> </li> <li> <p>Deletes PV and data when PVC is deleted</p> </li> <li> <p>Recycle</p> </li> <li>Basic scrub (rm -rf) before reuse</li> <li>Deprecated in favor of dynamic provisioning</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#dynamic-provisioning","title":"Dynamic Provisioning","text":""},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#storage-class-definition","title":"Storage Class Definition","text":"<pre><code>apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: fast\nprovisioner: kubernetes.io/aws-ebs\nparameters:\n  type: gp2\n  fsType: ext4\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#pvc-with-storage-class","title":"PVC with Storage Class","text":"<pre><code>apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: dynamic-pvc\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: fast\n  resources:\n    requests:\n      storage: 10Gi\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#production-example","title":"Production Example","text":""},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#stateful-application-with-pvpvc","title":"Stateful Application with PV/PVC","text":"<pre><code>---\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: postgres-pv\n  labels:\n    type: local\nspec:\n  storageClassName: manual\n  capacity:\n    storage: 10Gi\n  accessModes:\n    - ReadWriteOnce\n  hostPath:\n    path: \"/mnt/data\"\n---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: postgres-pvc\nspec:\n  storageClassName: manual\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 10Gi\n---\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: postgres\nspec:\n  serviceName: postgres\n  replicas: 1\n  selector:\n    matchLabels:\n      app: postgres\n  template:\n    metadata:\n      labels:\n        app: postgres\n    spec:\n      containers:\n      - name: postgres\n        image: postgres:13\n        env:\n        - name: POSTGRES_DB\n          value: myapp\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: postgres-secrets\n              key: username\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: postgres-secrets\n              key: password\n        ports:\n        - containerPort: 5432\n          name: postgres\n        volumeMounts:\n        - name: postgres-storage\n          mountPath: /var/lib/postgresql/data\n      volumes:\n      - name: postgres-storage\n        persistentVolumeClaim:\n          claimName: postgres-pvc\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#best-practices","title":"Best Practices","text":""},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#1-storage-planning","title":"1. Storage Planning","text":"<ul> <li>Size volumes appropriately</li> <li>Consider I/O requirements</li> <li>Plan for scalability</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#2-data-protection","title":"2. Data Protection","text":"<ul> <li>Use appropriate reclaim policies</li> <li>Implement backup solutions</li> <li>Consider disaster recovery</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#3-performance","title":"3. Performance","text":"<ul> <li>Choose appropriate storage class</li> <li>Monitor storage usage</li> <li>Consider I/O patterns</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#common-operations","title":"Common Operations","text":""},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#managing-pvs-and-pvcs","title":"Managing PVs and PVCs","text":"<pre><code># List PVs\nkubectl get pv\n\n# List PVCs\nkubectl get pvc\n\n# Describe PV\nkubectl describe pv pv-name\n\n# Describe PVC\nkubectl describe pvc pvc-name\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#volume-operations","title":"Volume Operations","text":"<pre><code># Check volume usage\nkubectl exec pod-name -- df -h\n\n# Copy data to/from volumes\nkubectl cp /local/path pod-name:/container/path\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#troubleshooting","title":"Troubleshooting","text":""},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"<ol> <li> <p>PVC Pending <pre><code># Check PVC status\nkubectl describe pvc pvc-name\n\n# Check available PVs\nkubectl get pv\n</code></pre></p> </li> <li> <p>Volume Mount Failures <pre><code># Check pod events\nkubectl describe pod pod-name\n\n# Check pod logs\nkubectl logs pod-name\n</code></pre></p> </li> <li> <p>Storage Class Issues <pre><code># Verify storage class exists\nkubectl get storageclass\n\n# Check storage class details\nkubectl describe storageclass class-name\n</code></pre></p> </li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-pv-pvc-in-kubernetes/#next-steps","title":"Next Steps","text":"<ol> <li>Implement backup solutions</li> <li>Set up monitoring for storage usage</li> <li>Implement dynamic provisioning</li> <li>Study advanced storage patterns</li> <li>Explore cloud-specific storage options</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-replicaset-in-kubernetes/","title":"How to Create a ReplicaSet in Kubernetes","text":"<p>This guide explains how to create and manage ReplicaSets in Kubernetes. A ReplicaSet ensures that a specified number of pod replicas are running at any given time.</p>"},{"location":"kubernetes/tutorials/how-to-create-replicaset-in-kubernetes/#prerequisites","title":"Prerequisites","text":"<ul> <li>Running Kubernetes cluster</li> <li>kubectl installed and configured</li> <li>Basic understanding of Kubernetes Pods</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-replicaset-in-kubernetes/#what-is-a-replicaset","title":"What is a ReplicaSet?","text":"<p>A ReplicaSet's purpose is to maintain a stable set of replica Pods running at any given time. It is often used to guarantee the availability of a specified number of identical Pods. While ReplicaSets can be used directly, they are usually used indirectly through Deployments, which provide declarative updates and additional features.</p> <p>Key features: - Ensures specified number of replicas are running - Provides pod template for creating new pods - Automatically replaces failed pods - Can be scaled up or down</p>"},{"location":"kubernetes/tutorials/how-to-create-replicaset-in-kubernetes/#creating-a-replicaset","title":"Creating a ReplicaSet","text":""},{"location":"kubernetes/tutorials/how-to-create-replicaset-in-kubernetes/#basic-replicaset-example","title":"Basic ReplicaSet Example","text":"<pre><code>apiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  name: nginx-replicaset\n  labels:\n    app: nginx\n    tier: frontend\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-replicaset-in-kubernetes/#replicaset-with-label-selectors","title":"ReplicaSet with Label Selectors","text":"<pre><code>apiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  name: frontend-rs\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      tier: frontend\n    matchExpressions:\n      - {key: env, operator: In, values: [prod, staging]}\n  template:\n    metadata:\n      labels:\n        tier: frontend\n        env: prod\n    spec:\n      containers:\n      - name: php-redis\n        image: gcr.io/google_samples/gb-frontend:v3\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-replicaset-in-kubernetes/#common-operations","title":"Common Operations","text":""},{"location":"kubernetes/tutorials/how-to-create-replicaset-in-kubernetes/#1-creating-a-replicaset","title":"1. Creating a ReplicaSet","text":"<p><pre><code># Create ReplicaSet from YAML\nkubectl apply -f replicaset.yaml\n</code></pre> Output: <pre><code>replicaset.apps/nginx-replicaset created\n</code></pre></p> <p><pre><code># Verify ReplicaSet creation\nkubectl get replicaset\n</code></pre> Output: <pre><code>NAME               DESIRED   CURRENT   READY   AGE\nnginx-replicaset   3         3         3       45s\n</code></pre></p> <p><pre><code># Check pods created by ReplicaSet\nkubectl get pods -l app=nginx\n</code></pre> Output: <pre><code>NAME                     READY   STATUS    RESTARTS   AGE\nnginx-replicaset-9j4d9   1/1     Running   0          42s\nnginx-replicaset-b2wzl   1/1     Running   0          42s\nnginx-replicaset-m8mvz   1/1     Running   0          42s\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-replicaset-in-kubernetes/#2-scaling-a-replicaset","title":"2. Scaling a ReplicaSet","text":"<p><pre><code># Scale using kubectl scale\nkubectl scale replicaset nginx-replicaset --replicas=5\n</code></pre> Output: <pre><code>replicaset.apps/nginx-replicaset scaled\n</code></pre></p> <p><pre><code># Scale by editing ReplicaSet\nkubectl edit replicaset nginx-replicaset\n</code></pre> Output: <pre><code>replicaset.apps/nginx-replicaset edited\n</code></pre></p> <p><pre><code># Check scaling status\nkubectl get replicaset nginx-replicaset\n</code></pre> Output: <pre><code>NAME               DESIRED   CURRENT   READY   AGE\nnginx-replicaset   5         5         5       2m\n</code></pre></p> <p><pre><code># Watch pods being created\nkubectl get pods -l app=nginx -w\n</code></pre> Output: <pre><code>NAME                     READY   STATUS              RESTARTS   AGE\nnginx-replicaset-9j4d9   1/1     Running            0          2m\nnginx-replicaset-b2wzl   1/1     Running            0          2m\nnginx-replicaset-m8mvz   1/1     Running            0          2m\nnginx-replicaset-k9p2x   0/1     ContainerCreating  0          2s\nnginx-replicaset-f7t6r   0/1     ContainerCreating  0          2s\nnginx-replicaset-k9p2x   1/1     Running            0          3s\nnginx-replicaset-f7t6r   1/1     Running            0          4s\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-replicaset-in-kubernetes/#3-deleting-a-replicaset","title":"3. Deleting a ReplicaSet","text":"<p><pre><code># Delete ReplicaSet and its pods\nkubectl delete replicaset nginx-replicaset\n</code></pre> Output: <pre><code>replicaset.apps \"nginx-replicaset\" deleted\n\n# Watch pods being terminated\nNAME                     READY   STATUS        RESTARTS   AGE\nnginx-replicaset-9j4d9   0/1     Terminating   0         15m\nnginx-replicaset-b2wzl   0/1     Terminating   0         15m\nnginx-replicaset-m8mvz   0/1     Terminating   0         15m\nnginx-replicaset-k9p2x   0/1     Terminating   0         13m\nnginx-replicaset-f7t6r   0/1     Terminating   0         13m\n</code></pre></p> <p><pre><code># Delete ReplicaSet only (keeping pods)\nkubectl delete replicaset nginx-replicaset --cascade=orphan\n</code></pre> Output: <pre><code>replicaset.apps \"nginx-replicaset\" deleted\n\n# Pods still exist and are now independent\nNAME                     READY   STATUS    RESTARTS   AGE\nnginx-replicaset-9j4d9   1/1     Running   0         16m\nnginx-replicaset-b2wzl   1/1     Running   0         16m\nnginx-replicaset-m8mvz   1/1     Running   0         16m\nnginx-replicaset-k9p2x   1/1     Running   0         14m\nnginx-replicaset-f7t6r   1/1     Running   0         14m\n\n# Verify pods are no longer controlled by the ReplicaSet\nkubectl get pods nginx-replicaset-9j4d9 -o yaml | grep controller\n# No output - pod is no longer controlled by ReplicaSet\n\n## Advanced Configurations\n\n### 1. ReplicaSet with Resource Limits\n\n```yaml\napiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  name: frontend-rs\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      tier: frontend\n  template:\n    metadata:\n      labels:\n        tier: frontend\n    spec:\n      containers:\n      - name: php-redis\n        image: gcr.io/google_samples/gb-frontend:v3\n        resources:\n          limits:\n            memory: \"128Mi\"\n            cpu: \"500m\"\n          requests:\n            memory: \"64Mi\"\n            cpu: \"250m\"\n</code></pre></p> <p>Apply and verify the resource-limited ReplicaSet:</p> <p><pre><code># Create the ReplicaSet\nkubectl apply -f frontend-rs.yaml\n</code></pre> Output: <pre><code>replicaset.apps/frontend-rs created\n</code></pre></p> <p><pre><code># Check resource allocation\nkubectl get pods -l tier=frontend -o yaml | grep -A 5 resources:\n</code></pre> Output: <pre><code>    resources:\n      limits:\n        cpu: 500m\n        memory: 128Mi\n      requests:\n        cpu: 250m\n        memory: 64Mi\n</code></pre></p> <p><pre><code># Monitor resource usage\nkubectl top pods -l tier=frontend\n</code></pre> Output: <pre><code>NAME               CPU(cores)   MEMORY(bytes)\nfrontend-rs-x4k8z   125m         75Mi\nfrontend-rs-b2wzl   142m         82Mi\nfrontend-rs-m8mvz   138m         78Mi\n\n### 2. ReplicaSet with Node Selection\n\n```yaml\napiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  name: nginx-rs\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      nodeSelector:\n        disktype: ssd\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n</code></pre></p> <p>First, label the nodes and then deploy the ReplicaSet:</p> <p><pre><code># Label nodes with SSD\nkubectl label nodes worker-node1 disktype=ssd\nkubectl label nodes worker-node2 disktype=ssd\n</code></pre> Output: <pre><code>node/worker-node1 labeled\nnode/worker-node2 labeled\n</code></pre></p> <p><pre><code># Create the ReplicaSet\nkubectl apply -f nginx-rs.yaml\n</code></pre> Output: <pre><code>replicaset.apps/nginx-rs created\n</code></pre></p> <p><pre><code># Verify pod placement\nkubectl get pods -l app=nginx -o wide\n</code></pre> Output: <pre><code>NAME            READY   STATUS    RESTARTS   AGE   IP            NODE           NOMINATED NODE\nnginx-rs-x4k8z   1/1    Running   0          45s   10.244.2.12   worker-node1   &lt;none&gt;\nnginx-rs-b2wzl   1/1    Running   0          45s   10.244.1.15   worker-node2   &lt;none&gt;\nnginx-rs-m8mvz   1/1    Running   0          45s   10.244.2.13   worker-node1   &lt;none&gt;\n</code></pre></p> <p><pre><code># Verify node selection\nkubectl describe pods -l app=nginx | grep \"Node:\"\n</code></pre> Output: <pre><code>Node:         worker-node1/192.168.1.101\nNode:         worker-node2/192.168.1.102\nNode:         worker-node1/192.168.1.101\n\n## Best Practices\n\n### 1. Using Labels Effectively\n\n```yaml\nmetadata:\n  labels:\n    app: myapp\n    tier: frontend\n    environment: production\n    version: v1.0.0\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-replicaset-in-kubernetes/#2-setting-resource-constraints","title":"2. Setting Resource Constraints","text":"<pre><code>spec:\n  template:\n    spec:\n      containers:\n      - resources:\n          requests:\n            memory: \"64Mi\"\n            cpu: \"250m\"\n          limits:\n            memory: \"128Mi\"\n            cpu: \"500m\"\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-replicaset-in-kubernetes/#3-implementing-health-checks","title":"3. Implementing Health Checks","text":"<pre><code>spec:\n  template:\n    spec:\n      containers:\n      - name: nginx\n        livenessProbe:\n          httpGet:\n            path: /healthz\n            port: 80\n          initialDelaySeconds: 3\n          periodSeconds: 3\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-replicaset-in-kubernetes/#production-examples","title":"Production Examples","text":""},{"location":"kubernetes/tutorials/how-to-create-replicaset-in-kubernetes/#1-high-availability-web-server","title":"1. High-Availability Web Server","text":"<pre><code>apiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  name: web-rs\n  labels:\n    app: web\n    tier: frontend\nspec:\n  replicas: 5\n  selector:\n    matchLabels:\n      app: web\n  template:\n    metadata:\n      labels:\n        app: web\n    spec:\n      affinity:\n        podAntiAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n          - weight: 100\n            podAffinityTerm:\n              labelSelector:\n                matchExpressions:\n                - key: app\n                  operator: In\n                  values:\n                  - web\n              topologyKey: kubernetes.io/hostname\n      containers:\n      - name: nginx\n        image: nginx:1.19\n        ports:\n        - containerPort: 80\n        resources:\n          requests:\n            cpu: 100m\n            memory: 128Mi\n          limits:\n            cpu: 200m\n            memory: 256Mi\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 80\n          initialDelaySeconds: 5\n          periodSeconds: 10\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 80\n          initialDelaySeconds: 15\n          periodSeconds: 20\n</code></pre> <p>Deploy and verify the high-availability setup:</p> <p><pre><code># Create the ReplicaSet\nkubectl apply -f ha-web-rs.yaml\n</code></pre> Output: <pre><code>replicaset.apps/web-rs created\n</code></pre></p> <p><pre><code># Check pod distribution across nodes\nkubectl get pods -l app=web -o wide\n</code></pre> Output: <pre><code>NAME           READY   STATUS    RESTARTS   AGE   IP            NODE           \nweb-rs-x4k8z   1/1     Running   0         45s   10.244.2.12   worker-node1   \nweb-rs-b2wzl   1/1     Running   0         45s   10.244.1.15   worker-node2   \nweb-rs-m8mvz   1/1     Running   0         45s   10.244.3.11   worker-node3   \nweb-rs-k9p2x   1/1     Running   0         45s   10.244.1.16   worker-node2   \nweb-rs-f7t6r   1/1     Running   0         45s   10.244.2.13   worker-node1   \n</code></pre></p> <p><pre><code># Verify pod anti-affinity is working\nkubectl describe pods -l app=web | grep Node:\n</code></pre> Output: <pre><code>Node:         worker-node1/192.168.1.101\nNode:         worker-node2/192.168.1.102\nNode:         worker-node3/192.168.1.103\nNode:         worker-node2/192.168.1.102\nNode:         worker-node1/192.168.1.101\n</code></pre></p> <p><pre><code># Check readiness probe status\nkubectl describe pods -l app=web | grep Readiness:\n</code></pre> Output: <pre><code>    Readiness:  http-get http://:80/ delay=5s timeout=1s period=10s #success=1 #failure=3\n    Readiness:  http-get http://:80/ delay=5s timeout=1s period=10s #success=1 #failure=3\n    Readiness:  http-get http://:80/ delay=5s timeout=1s period=10s #success=1 #failure=3\n    Readiness:  http-get http://:80/ delay=5s timeout=1s period=10s #success=1 #failure=3\n    Readiness:  http-get http://:80/ delay=5s timeout=1s period=10s #success=1 #failure=3\n\n# Monitor resource usage\nkubectl top pods -l app=web\n</code></pre> Output: <pre><code>NAME           CPU(cores)   MEMORY(bytes)   \nweb-rs-x4k8z   12m          65Mi           \nweb-rs-b2wzl   15m          68Mi           \nweb-rs-m8mvz   11m          64Mi           \nweb-rs-k9p2x   14m          67Mi           \nweb-rs-f7t6r   13m          66Mi\n\n## Troubleshooting\n\n### Common Issues and Solutions\n\n1. **Pods Not Starting**\n```bash\n# Check ReplicaSet events\nkubectl describe rs nginx-replicaset\n</code></pre> Output: <pre><code>Events:\n  Type     Reason        Age   From                   Message\n  ----     ------        ----  ----                   -------\n  Warning  FailedCreate  10s   replicaset-controller  Error creating: pods \"nginx-replicaset-f4f7b\" is forbidden: exceeded quota: compute-resources, requested: cpu=500m, used: cpu=2, limited: cpu=2\n</code></pre></p> <p><pre><code># Check pod status\nkubectl get pods -l app=nginx\n</code></pre> Output: <pre><code>NAME                     READY   STATUS    RESTARTS   AGE\nnginx-replicaset-9j4d9   0/1     Pending   0         45s\nnginx-replicaset-k8d2p   0/1     Pending   0         45s\n</code></pre></p> <p><pre><code># Check pod details\nkubectl describe pod nginx-replicaset-9j4d9\n</code></pre> Output: <pre><code>Name:           nginx-replicaset-9j4d9\nNamespace:      default\nPriority:       0\nNode:           &lt;none&gt;\nStatus:         Pending\nIP:             \nControlled By:  ReplicaSet/nginx-replicaset\n\nEvents:\n  Type     Reason            Age    From               Message\n  ----     ------            ----   ----               -------\n  Warning  FailedScheduling  2m     default-scheduler  0/3 nodes are available: insufficient cpu\n  Warning  FailedScheduling  2m     default-scheduler  0/3 nodes are available: insufficient memory\n\n2. **Scaling Issues**\n```bash\n# Verify ReplicaSet status\nkubectl get rs nginx-replicaset -o wide\n</code></pre> Output: <pre><code>NAME               DESIRED   CURRENT   READY   AGE   CONTAINERS   IMAGES         SELECTOR\nnginx-replicaset   5         3         3       5m    nginx        nginx:1.14.2   app=nginx\n</code></pre></p> <p><pre><code># Check available resources\nkubectl describe nodes\n</code></pre> Output: <pre><code>Name:            worker-node1\nRoles:           &lt;none&gt;\nLabels:          beta.kubernetes.io/arch=amd64\n                 kubernetes.io/hostname=worker-node1\nCapacity:\n  cpu:           2\n  memory:        4Gi\n  pods:          110\nAllocatable:\n  cpu:           1800m\n  memory:        3624Mi\n  pods:          110\nAllocated resources:\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                1600m       2000m\n  memory             2Gi         2.5Gi\n  ephemeral-storage  0           0\n</code></pre></p> <p><pre><code># View ReplicaSet details\nkubectl describe rs nginx-replicaset\n</code></pre> Output: <pre><code>Name:         nginx-replicaset\nNamespace:    default\nSelector:     app=nginx\nLabels:       app=nginx\nReplicas:     5 desired | 3 current | 3 ready\nPods Status:  3 Running / 2 Waiting / 0 Failed\nEvents:\n  Type     Reason            Age   From                   Message\n  ----     ------            ----  ----                   -------\n  Warning  FailedCreate      2m    replicaset-controller  Error creating: pods \"nginx-replicaset-f4f7b\" is forbidden: exceeded quota\n  Normal   SuccessfulCreate  5m    replicaset-controller  Created pod: nginx-replicaset-9j4d9\n\n3. **Label Selector Issues**\n```bash\n# Check ReplicaSet selector\nkubectl get rs nginx-replicaset -o yaml\n</code></pre> Output: <pre><code>apiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  name: nginx-replicaset\nspec:\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx-wrong  # Mismatch between selector and pod template labels\n</code></pre></p> <p><pre><code># Verify pod labels\nkubectl get pods --show-labels\n</code></pre> Output: <pre><code>NAME                     READY   STATUS    RESTARTS   AGE   LABELS\nnginx-replicaset-9j4d9   1/1     Running   0         10m   app=nginx-wrong\nmanual-nginx-pod         1/1     Running   0         5m    app=nginx\n</code></pre> Note: The ReplicaSet selector looks for pods with label <code>app=nginx</code>, but the pod template creates pods with label <code>app=nginx-wrong</code>, causing the mismatch.</p>"},{"location":"kubernetes/tutorials/how-to-create-replicaset-in-kubernetes/#monitoring-replicasets","title":"Monitoring ReplicaSets","text":""},{"location":"kubernetes/tutorials/how-to-create-replicaset-in-kubernetes/#commands-for-monitoring","title":"Commands for Monitoring","text":"<p><pre><code># Get ReplicaSet status\nkubectl get rs\n</code></pre> Output: <pre><code>NAME               DESIRED   CURRENT   READY   AGE\nnginx-replicaset   5         5         5       5m\nfrontend-rs        3         3         3       2m\n</code></pre></p> <p><pre><code># Describe ReplicaSet\nkubectl describe rs nginx-replicaset\n</code></pre> Output: <pre><code>Name:         nginx-replicaset\nNamespace:    default\nSelector:     app=nginx\nLabels:       app=nginx\n              tier=frontend\nAnnotations:  &lt;none&gt;\nReplicas:     5 current / 5 desired\nPods Status:  5 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=nginx\n  Containers:\n   nginx:\n    Image:        nginx:1.14.2\n    Port:         80/TCP\n    Host Port:    0/TCP\n    Environment:  &lt;none&gt;\n    Mounts:       &lt;none&gt;\n  Volumes:        &lt;none&gt;\nEvents:\n  Type    Reason            Age   From                   Message\n  ----    ------            ----  ----                   -------\n  Normal  SuccessfulCreate  5m    replicaset-controller  Created pod: nginx-replicaset-9j4d9\n  Normal  SuccessfulCreate  5m    replicaset-controller  Created pod: nginx-replicaset-b2wzl\n  Normal  SuccessfulCreate  5m    replicaset-controller  Created pod: nginx-replicaset-m8mvz\n  Normal  SuccessfulCreate  3m    replicaset-controller  Created pod: nginx-replicaset-k9p2x\n  Normal  SuccessfulCreate  3m    replicaset-controller  Created pod: nginx-replicaset-f7t6r\n</code></pre></p> <p><pre><code># Monitor pod creation/deletion\nkubectl get pods -w -l app=nginx\n</code></pre> Output: <pre><code>NAME                     READY   STATUS    RESTARTS   AGE\nnginx-replicaset-9j4d9   1/1     Running   0          5m\nnginx-replicaset-b2wzl   1/1     Running   0          5m\nnginx-replicaset-m8mvz   1/1     Running   0          5m\nnginx-replicaset-k9p2x   1/1     Running   0          3m\nnginx-replicaset-f7t6r   1/1     Running   0          3m\n</code></pre></p> <p><pre><code># Check ReplicaSet events\nkubectl get events --field-selector involvedObject.kind=ReplicaSet\n</code></pre> Output: <pre><code>LAST SEEN   TYPE     REASON              OBJECT                      MESSAGE\n5m          Normal   SuccessfulCreate    replicaset/nginx-replicaset Created pod: nginx-replicaset-9j4d9\n5m          Normal   SuccessfulCreate    replicaset/nginx-replicaset Created pod: nginx-replicaset-b2wzl\n5m          Normal   SuccessfulCreate    replicaset/nginx-replicaset Created pod: nginx-replicaset-m8mvz\n3m          Normal   SuccessfulCreate    replicaset/nginx-replicaset Created pod: nginx-replicaset-k9p2x\n3m          Normal   SuccessfulCreate    replicaset/nginx-replicaset Created pod: nginx-replicaset-f7t6r\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-replicaset-in-kubernetes/#next-steps","title":"Next Steps","text":"<ol> <li>Learn about Deployments (which manage ReplicaSets)</li> <li>Implement advanced scaling strategies</li> <li>Set up monitoring and alerting</li> <li>Configure horizontal pod autoscaling</li> <li>Implement rolling updates using Deployments</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-service-in-kubernetes/","title":"How to Create Services in Kubernetes","text":"<p>This guide explains how to create and manage Services in Kubernetes. A Service is an abstraction that defines a logical set of Pods and a policy by which to access them.</p>"},{"location":"kubernetes/tutorials/how-to-create-service-in-kubernetes/#prerequisites","title":"Prerequisites","text":"<ul> <li>Running Kubernetes cluster</li> <li>kubectl installed and configured</li> <li>Basic understanding of Pods and Deployments</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-service-in-kubernetes/#what-is-a-service","title":"What is a Service?","text":"<p>A Service in Kubernetes is an abstraction which defines a logical set of Pods and a policy by which to access them. Services enable loose coupling between dependent Pods and can provide load balancing and service discovery.</p> <p>Key features: - Service discovery - Load balancing - Stable network endpoint - Automatic updates when Pods change</p>"},{"location":"kubernetes/tutorials/how-to-create-service-in-kubernetes/#service-types","title":"Service Types","text":""},{"location":"kubernetes/tutorials/how-to-create-service-in-kubernetes/#1-clusterip-default","title":"1. ClusterIP (Default)","text":"<ul> <li>Exposes the Service on a cluster-internal IP</li> <li>Only reachable from within the cluster</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-service-in-kubernetes/#2-nodeport","title":"2. NodePort","text":"<ul> <li>Exposes the Service on each Node's IP at a static port</li> <li>Accessible from outside the cluster</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-service-in-kubernetes/#3-loadbalancer","title":"3. LoadBalancer","text":"<ul> <li>Exposes the Service externally using a cloud provider's load balancer</li> <li>Automatically creates NodePort and ClusterIP Services</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-service-in-kubernetes/#4-externalname","title":"4. ExternalName","text":"<ul> <li>Maps the Service to a DNS name</li> <li>No proxying, just DNS CNAME record</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-service-in-kubernetes/#creating-services","title":"Creating Services","text":""},{"location":"kubernetes/tutorials/how-to-create-service-in-kubernetes/#1-clusterip-service","title":"1. ClusterIP Service","text":"<pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: my-app-service\nspec:\n  selector:\n    app: my-app\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 8080\n</code></pre> <p>Create and verify the service:</p> <p><pre><code># Create Service\nkubectl apply -f my-app-service.yaml\n</code></pre> Output: <pre><code>service/my-app-service created\n</code></pre></p> <p><pre><code># View service details\nkubectl get service my-app-service\n</code></pre> Output: <pre><code>NAME             TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE\nmy-app-service   ClusterIP   10.96.123.45   &lt;none&gt;        80/TCP    30s\n</code></pre></p> <p><pre><code># Test service from within cluster\nkubectl run test-pod --image=busybox -it --rm -- wget -O- http://my-app-service.default.svc.cluster.local\n</code></pre> Output: <pre><code>Connecting to my-app-service.default.svc.cluster.local (10.96.123.45:80)\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;...&lt;/html&gt;\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-service-in-kubernetes/#2-nodeport-service","title":"2. NodePort Service","text":"<pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: my-app-nodeport\nspec:\n  type: NodePort\n  selector:\n    app: my-app\n  ports:\n    - port: 80\n      targetPort: 8080\n      nodePort: 30080\n</code></pre> <p>Deploy and verify:</p> <p><pre><code># Create NodePort service\nkubectl apply -f my-app-nodeport.yaml\n</code></pre> Output: <pre><code>service/my-app-nodeport created\n</code></pre></p> <p><pre><code># Get service details\nkubectl get service my-app-nodeport\n</code></pre> Output: <pre><code>NAME              TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE\nmy-app-nodeport   NodePort   10.96.234.56   &lt;none&gt;        80:30080/TCP   45s\n</code></pre></p> <p><pre><code># Get node's external IP\nkubectl get nodes -o wide\n</code></pre> Output: <pre><code>NAME           STATUS   ROLES    AGE   VERSION   EXTERNAL-IP\nworker-node1   Ready    &lt;none&gt;   7d    v1.24.0  192.168.1.101\nworker-node2   Ready    &lt;none&gt;   7d    v1.24.0  192.168.1.102\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-service-in-kubernetes/#3-loadbalancer-service","title":"3. LoadBalancer Service","text":"<pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: my-app-lb\nspec:\n  type: LoadBalancer\n  selector:\n    app: my-app\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 8080\n</code></pre> <p>Create and monitor:</p> <p><pre><code># Create LoadBalancer service\nkubectl apply -f my-app-lb.yaml\n</code></pre> Output: <pre><code>service/my-app-lb created\n</code></pre></p> <p><pre><code># Watch service status\nkubectl get service my-app-lb -w\n</code></pre> Output: <pre><code>NAME         TYPE           CLUSTER-IP      EXTERNAL-IP     PORT(S)        AGE\nmy-app-lb    LoadBalancer  10.96.345.67    &lt;pending&gt;       80:31080/TCP   10s\nmy-app-lb    LoadBalancer  10.96.345.67    203.0.113.100   80:31080/TCP   45s\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-service-in-kubernetes/#4-externalname-service","title":"4. ExternalName Service","text":"<pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: my-external-service\nspec:\n  type: ExternalName\n  externalName: api.example.com\n</code></pre> <p>Create and verify:</p> <p><pre><code># Create ExternalName service\nkubectl apply -f external-service.yaml\n</code></pre> Output: <pre><code>service/my-external-service created\n</code></pre></p> <p><pre><code># Verify DNS resolution\nkubectl run test-dns --image=busybox -it --rm -- nslookup my-external-service.default.svc.cluster.local\n</code></pre> Output: <pre><code>Server:    10.96.0.10\nAddress 1: 10.96.0.10 kube-dns.kube-system.svc.cluster.local\n\nName:      my-external-service.default.svc.cluster.local\nAddress 1: api.example.com\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-service-in-kubernetes/#advanced-configurations","title":"Advanced Configurations","text":""},{"location":"kubernetes/tutorials/how-to-create-service-in-kubernetes/#1-multi-port-service","title":"1. Multi-Port Service","text":"<pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: my-multiport-service\nspec:\n  selector:\n    app: my-app\n  ports:\n    - name: http\n      protocol: TCP\n      port: 80\n      targetPort: 8080\n    - name: https\n      protocol: TCP\n      port: 443\n      targetPort: 8443\n</code></pre> <p>Deploy and verify:</p> <p><pre><code># Create multi-port service\nkubectl apply -f multiport-service.yaml\n</code></pre> Output: <pre><code>service/my-multiport-service created\n</code></pre></p> <p><pre><code># Check port configuration\nkubectl describe service my-multiport-service\n</code></pre> Output: <pre><code>Name:              my-multiport-service\nNamespace:         default\nLabels:            &lt;none&gt;\nSelector:          app=my-app\nType:              ClusterIP\nIP:                10.96.456.78\nPort:              http  80/TCP\nTargetPort:        8080/TCP\nEndpoints:         10.244.1.2:8080,10.244.2.3:8080\nPort:              https  443/TCP\nTargetPort:        8443/TCP\nEndpoints:         10.244.1.2:8443,10.244.2.3:8443\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-service-in-kubernetes/#2-service-with-session-affinity","title":"2. Service with Session Affinity","text":"<pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: sticky-service\nspec:\n  selector:\n    app: my-app\n  sessionAffinity: ClientIP\n  sessionAffinityConfig:\n    clientIP:\n      timeoutSeconds: 1800\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 8080\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-service-in-kubernetes/#troubleshooting","title":"Troubleshooting","text":""},{"location":"kubernetes/tutorials/how-to-create-service-in-kubernetes/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"<ol> <li>Service Not Accessible <pre><code># Check service endpoints\nkubectl get endpoints my-app-service\n</code></pre> Output: <pre><code>NAME             ENDPOINTS                           AGE\nmy-app-service   10.244.1.2:8080,10.244.2.3:8080   5m\n</code></pre></li> </ol> <p><pre><code># Verify pod labels match service selector\nkubectl get pods --show-labels\n</code></pre> Output: <pre><code>NAME                     READY   STATUS    RESTARTS   AGE   LABELS\nmy-app-pod-1            1/1     Running   0          10m   app=my-app\nmy-app-pod-2            1/1     Running   0          10m   app=my-app\n</code></pre></p> <ol> <li> <p>LoadBalancer Pending <pre><code># Check service events\nkubectl describe service my-app-lb\n</code></pre> Output: <pre><code>Events:\n  Type     Reason                      Age   From                Message\n  ----     ------                      ----  ----                -------\n  Normal   EnsuringLoadBalancer        1m    service-controller  Ensuring load balancer\n  Warning  SyncLoadBalancerFailed      1m    service-controller  Error syncing load balancer: failed to ensure load balancer: no cloud provider configured\n</code></pre></p> </li> <li> <p>DNS Resolution Issues <pre><code># Check kube-dns/CoreDNS\nkubectl get pods -n kube-system | grep dns\n</code></pre> Output: <pre><code>NAME                       READY   STATUS    RESTARTS   AGE\ncoredns-558bd4d5db-4d8qw   1/1     Running   0          7d\ncoredns-558bd4d5db-dkr9w   1/1     Running   0          7d\n</code></pre></p> </li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-service-in-kubernetes/#best-practices","title":"Best Practices","text":"<ol> <li> <p>Always use selectors <pre><code>spec:\n  selector:\n    app: my-app\n    tier: frontend\n</code></pre></p> </li> <li> <p>Name ports for clarity <pre><code>spec:\n  ports:\n    - name: http\n      port: 80\n    - name: https\n      port: 443\n</code></pre></p> </li> <li> <p>Use appropriate service type</p> </li> <li>ClusterIP for internal communication</li> <li>NodePort for development/testing</li> <li> <p>LoadBalancer for production external access</p> </li> <li> <p>Add meaningful labels <pre><code>metadata:\n  labels:\n    app: my-app\n    tier: frontend\n    environment: production\n</code></pre></p> </li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-service-in-kubernetes/#monitoring-services","title":"Monitoring Services","text":""},{"location":"kubernetes/tutorials/how-to-create-service-in-kubernetes/#commands-for-service-monitoring","title":"Commands for Service Monitoring","text":"<p><pre><code># Get service status\nkubectl get services --all-namespaces\n</code></pre> Output: <pre><code>NAMESPACE     NAME              TYPE           CLUSTER-IP      EXTERNAL-IP     PORT(S)          AGE\ndefault       kubernetes        ClusterIP      10.96.0.1      &lt;none&gt;          443/TCP          7d\ndefault       my-app-service    ClusterIP      10.96.123.45   &lt;none&gt;          80/TCP           1h\ndefault       my-app-nodeport   NodePort       10.96.234.56   &lt;none&gt;          80:30080/TCP     45m\ndefault       my-app-lb         LoadBalancer   10.96.345.67   203.0.113.100   80:31080/TCP     30m\n</code></pre></p> <p><pre><code># Monitor endpoints\nkubectl get endpoints -w\n</code></pre> Output: <pre><code>NAME              ENDPOINTS                               AGE\nkubernetes        192.168.1.101:6443                     7d\nmy-app-service    10.244.1.2:8080,10.244.2.3:8080       1h\nmy-app-nodeport   10.244.1.2:8080,10.244.2.3:8080       45m\nmy-app-lb         10.244.1.2:8080,10.244.2.3:8080       30m\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-service-in-kubernetes/#next-steps","title":"Next Steps","text":"<ol> <li>Learn about Ingress controllers</li> <li>Implement service mesh</li> <li>Configure external DNS</li> <li>Set up SSL/TLS termination</li> <li>Implement service monitoring and logging</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/","title":"How to Create a StatefulSet in Kubernetes","text":"<p>This guide explains how to create and manage StatefulSets in Kubernetes, which are used for stateful applications that require stable network identities and persistent storage.</p>"},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#prerequisites","title":"Prerequisites","text":"<ul> <li>Running Kubernetes cluster</li> <li>kubectl installed and configured</li> <li>Storage Class configured (for persistent storage)</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#what-is-a-statefulset","title":"What is a StatefulSet?","text":"<p>A StatefulSet is a Kubernetes workload API object used to manage stateful applications. It provides: - Stable, unique network identifiers - Stable, persistent storage - Ordered, graceful deployment and scaling - Ordered, automated rolling updates</p>"},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#creating-a-statefulset","title":"Creating a StatefulSet","text":""},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#basic-statefulset-example","title":"Basic StatefulSet Example","text":"<pre><code>apiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: web\nspec:\n  selector:\n    matchLabels:\n      app: nginx\n  serviceName: \"nginx\"\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n          name: web\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#statefulset-with-persistent-storage","title":"StatefulSet with Persistent Storage","text":"<pre><code>apiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: postgres\nspec:\n  serviceName: postgres\n  replicas: 3\n  selector:\n    matchLabels:\n      app: postgres\n  template:\n    metadata:\n      labels:\n        app: postgres\n    spec:\n      containers:\n      - name: postgres\n        image: postgres:13\n        env:\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: postgres-secret\n              key: password\n        ports:\n        - containerPort: 5432\n          name: postgresql\n        volumeMounts:\n        - name: data\n          mountPath: /var/lib/postgresql/data\n  volumeClaimTemplates:\n  - metadata:\n      name: data\n    spec:\n      accessModes: [ \"ReadWriteOnce\" ]\n      storageClassName: \"standard\"\n      resources:\n        requests:\n          storage: 10Gi\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#required-services","title":"Required Services","text":""},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#headless-service","title":"Headless Service","text":"<pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: nginx\nspec:\n  ports:\n  - port: 80\n    name: web\n  clusterIP: None\n  selector:\n    app: nginx\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#common-operations","title":"Common Operations","text":""},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#1-creating-a-statefulset","title":"1. Creating a StatefulSet","text":"<p><pre><code># Apply the StatefulSet configuration\nkubectl apply -f statefulset.yaml\n</code></pre> Output: <pre><code>statefulset.apps/web created\n</code></pre></p> <p><pre><code># Verify the creation\nkubectl get statefulset\n</code></pre> Output: <pre><code>NAME   READY   AGE\nweb    3/3     2m\n</code></pre></p> <p><pre><code># Watch the pods being created\nkubectl get pods -w\n</code></pre> Output: <pre><code>NAME    READY   STATUS              RESTARTS   AGE\nweb-0   0/1     ContainerCreating   0          10s\nweb-0   1/1     Running            0          20s\nweb-1   0/1     Pending            0          0s\nweb-1   0/1     ContainerCreating   0          0s\nweb-1   1/1     Running            0          20s\nweb-2   0/1     Pending            0          0s\nweb-2   0/1     ContainerCreating   0          0s\nweb-2   1/1     Running            0          20s\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#2-scaling-a-statefulset","title":"2. Scaling a StatefulSet","text":"<p><pre><code># Scale up\nkubectl scale statefulset web --replicas=5\n</code></pre> Output: <pre><code>statefulset.apps/web scaled\n</code></pre></p> <p><pre><code># Watch new pods being created\nkubectl get pods -w\n</code></pre> Output: <pre><code>NAME    READY   STATUS              RESTARTS   AGE\nweb-0   1/1     Running            0          5m\nweb-1   1/1     Running            0          4m40s\nweb-2   1/1     Running            0          4m20s\nweb-3   0/1     Pending            0          0s\nweb-3   0/1     ContainerCreating   0          0s\nweb-3   1/1     Running            0          20s\nweb-4   0/1     Pending            0          0s\nweb-4   0/1     ContainerCreating   0          0s\nweb-4   1/1     Running            0          20s\n</code></pre></p> <p><pre><code># Scale down\nkubectl scale statefulset web --replicas=3\n</code></pre> Output: <pre><code>statefulset.apps/web scaled\n</code></pre></p> <p><pre><code># Watch pods being terminated\nkubectl get pods -w\n</code></pre> Output: <pre><code>NAME    READY   STATUS    RESTARTS   AGE\nweb-0   1/1     Running   0          6m\nweb-1   1/1     Running   0          5m40s\nweb-2   1/1     Running   0          5m20s\nweb-3   1/1     Running   0          1m\nweb-4   1/1     Running   0          40s\nweb-4   1/1     Terminating   0          45s\nweb-4   0/1     Terminating   0          50s\nweb-4   0/1     Terminating   0          50s\nweb-3   1/1     Terminating   0          1m10s\nweb-3   0/1     Terminating   0          1m15s\nweb-3   0/1     Terminating   0          1m15s\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#3-updating-a-statefulset","title":"3. Updating a StatefulSet","text":"<pre><code># Update the image\nkubectl set image statefulset/web nginx=nginx:1.16.1\n\n# Check rollout status\nkubectl rollout status statefulset/web\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#4-deleting-a-statefulset","title":"4. Deleting a StatefulSet","text":"<p><pre><code>### 3. Deleting a StatefulSet\n\n```bash\n# Delete StatefulSet\nkubectl delete statefulset web\n</code></pre> Output: <pre><code>statefulset.apps \"web\" deleted\n</code></pre></p> <p><pre><code># Watch pods being terminated in reverse order\nkubectl get pods -w\n</code></pre> Output: <pre><code>NAME    READY   STATUS    RESTARTS   AGE\nweb-0   1/1     Running   0          10m\nweb-1   1/1     Running   0          9m40s\nweb-2   1/1     Running   0          9m20s\nweb-2   1/1     Terminating   0          9m25s\nweb-2   0/1     Terminating   0          9m30s\nweb-1   1/1     Terminating   0          9m45s\nweb-1   0/1     Terminating   0          9m50s\nweb-0   1/1     Terminating   0          10m15s\nweb-0   0/1     Terminating   0          10m20s\n</code></pre></p> <p><pre><code># List PVCs created by StatefulSet\nkubectl get pvc\n</code></pre> Output: <pre><code>NAME        STATUS   VOLUME                                   CAPACITY   ACCESS MODES   STORAGECLASS   AGE\nwww-web-0   Bound    pvc-f1bc8a7e-8fb8-11ea-a699-42010a800021   1Gi       RWO           standard       10m\nwww-web-1   Bound    pvc-f1e3c97e-8fb8-11ea-a699-42010a800021   1Gi       RWO           standard       9m40s\nwww-web-2   Bound    pvc-f209d07e-8fb8-11ea-a699-42010a800021   1Gi       RWO           standard       9m20s\n</code></pre></p> <p><pre><code># Delete PVC (if cleanup of persistent storage is needed)\nkubectl delete pvc -l app=nginx\n</code></pre> Output: <pre><code>persistentvolumeclaim \"www-web-0\" deleted\npersistentvolumeclaim \"www-web-1\" deleted\npersistentvolumeclaim \"www-web-2\" deleted\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#advanced-configurations","title":"Advanced Configurations","text":""},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#1-statefulset-with-init-containers","title":"1. StatefulSet with Init Containers","text":"<pre><code>apiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: mongodb\nspec:\n  serviceName: mongodb\n  replicas: 3\n  selector:\n    matchLabels:\n      app: mongodb\n  template:\n    metadata:\n      labels:\n        app: mongodb\n    spec:\n      initContainers:\n      - name: init-mongodb\n        image: busybox\n        command: ['sh', '-c', 'echo \"Initializing MongoDB...\"']\n      containers:\n      - name: mongodb\n        image: mongo:4.4\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#2-statefulset-with-multiple-volumes","title":"2. StatefulSet with Multiple Volumes","text":"<pre><code>apiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: mysql\nspec:\n  serviceName: mysql\n  replicas: 3\n  selector:\n    matchLabels:\n      app: mysql\n  template:\n    metadata:\n      labels:\n        app: mysql\n    spec:\n      containers:\n      - name: mysql\n        image: mysql:8.0\n        volumeMounts:\n        - name: data\n          mountPath: /var/lib/mysql\n        - name: config\n          mountPath: /etc/mysql/conf.d\n  volumeClaimTemplates:\n  - metadata:\n      name: data\n    spec:\n      accessModes: [ \"ReadWriteOnce\" ]\n      storageClassName: \"fast\"\n      resources:\n        requests:\n          storage: 100Gi\n  - metadata:\n      name: config\n    spec:\n      accessModes: [ \"ReadWriteOnce\" ]\n      storageClassName: \"standard\"\n      resources:\n        requests:\n          storage: 1Gi\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#best-practices","title":"Best Practices","text":""},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#1-pod-management-policy","title":"1. Pod Management Policy","text":"<pre><code>spec:\n  podManagementPolicy: Parallel  # or OrderedReady (default)\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#2-update-strategy","title":"2. Update Strategy","text":"<pre><code>spec:\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate:\n      partition: 2\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#3-storage-configuration","title":"3. Storage Configuration","text":"<pre><code>spec:\n  volumeClaimTemplates:\n  - metadata:\n      name: data\n    spec:\n      storageClassName: \"fast-ssd\"\n      accessModes: [ \"ReadWriteOnce\" ]\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#production-examples","title":"Production Examples","text":""},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#1-high-availability-database-cluster","title":"1. High-Availability Database Cluster","text":"<pre><code>apiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: postgres-ha\nspec:\n  serviceName: postgres\n  replicas: 3\n  selector:\n    matchLabels:\n      app: postgres\n  template:\n    metadata:\n      labels:\n        app: postgres\n    spec:\n      terminationGracePeriodSeconds: 60\n      affinity:\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n          - labelSelector:\n              matchExpressions:\n              - key: app\n                operator: In\n                values:\n                - postgres\n            topologyKey: \"kubernetes.io/hostname\"\n      containers:\n      - name: postgres\n        image: postgres:13\n        env:\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: postgres-secret\n              key: password\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        ports:\n        - containerPort: 5432\n          name: postgresql\n        readinessProbe:\n          exec:\n            command:\n            - pg_isready\n          initialDelaySeconds: 5\n          periodSeconds: 10\n        livenessProbe:\n          exec:\n            command:\n            - pg_isready\n          initialDelaySeconds: 15\n          periodSeconds: 20\n        volumeMounts:\n        - name: data\n          mountPath: /var/lib/postgresql/data\n  volumeClaimTemplates:\n  - metadata:\n      name: data\n    spec:\n      accessModes: [ \"ReadWriteOnce\" ]\n      storageClassName: \"fast-ssd\"\n      resources:\n        requests:\n          storage: 100Gi\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#troubleshooting","title":"Troubleshooting","text":""},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"<ol> <li> <p>Pods Stuck in Pending <pre><code># Check PVC status\nkubectl get pvc\nkubectl describe pvc &lt;pvc-name&gt;\n\n# Check Storage Class\nkubectl get storageclass\n</code></pre></p> </li> <li> <p>Pods Not Getting Unique Names <pre><code># Verify headless service\nkubectl get svc\nkubectl describe svc &lt;service-name&gt;\n</code></pre></p> </li> <li> <p>Volume Mount Issues <pre><code># Check volume mounts\nkubectl describe pod &lt;pod-name&gt;\n\n# Check storage provisioner\nkubectl get events\n</code></pre></p> </li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#monitoring-statefulsets","title":"Monitoring StatefulSets","text":""},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#commands-for-monitoring","title":"Commands for Monitoring","text":"<pre><code># Get StatefulSet status\nkubectl get sts\nkubectl describe sts &lt;statefulset-name&gt;\n\n# Check pod status\nkubectl get pods -l app=&lt;label&gt;\n\n# View StatefulSet events\nkubectl get events --field-selector involvedObject.kind=StatefulSet\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-statefulset-in-kubernetes/#next-steps","title":"Next Steps","text":"<ol> <li>Implement backup strategies</li> <li>Configure monitoring and alerts</li> <li>Set up high availability</li> <li>Plan for disaster recovery</li> <li>Implement security best practices</li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/","title":"How to Create a Storage Class in Kubernetes","text":"<p>This guide explains how to create and use Storage Classes in Kubernetes for dynamic provisioning of persistent volumes.</p>"},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#prerequisites","title":"Prerequisites","text":"<ul> <li>Running Kubernetes cluster</li> <li>kubectl installed and configured</li> <li>Storage provider/provisioner (cloud provider, local storage, etc.)</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#what-is-a-storage-class","title":"What is a Storage Class?","text":"<p>A StorageClass provides a way to describe the \"classes\" of storage offered by the cluster. Different classes might map to: - Quality-of-Service levels - Backup policies - Arbitrary policies determined by cluster administrators</p>"},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#creating-storage-classes","title":"Creating Storage Classes","text":""},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#basic-storage-class","title":"Basic Storage Class","text":"<pre><code>apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: standard\nprovisioner: kubernetes.io/aws-ebs\nparameters:\n  type: gp2\nreclaimPolicy: Delete\nallowVolumeExpansion: true\nvolumeBindingMode: WaitForFirstConsumer\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#storage-class-with-different-providers","title":"Storage Class with Different Providers","text":""},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#1-aws-ebs","title":"1. AWS EBS","text":"<pre><code>apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: fast\nprovisioner: kubernetes.io/aws-ebs\nparameters:\n  type: gp3\n  iops: \"3000\"\n  throughput: \"125\"\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#2-azure-disk","title":"2. Azure Disk","text":"<pre><code>apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: managed-premium\nprovisioner: kubernetes.io/azure-disk\nparameters:\n  storageaccounttype: Premium_LRS\n  kind: Managed\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#3-google-cloud-persistent-disk","title":"3. Google Cloud Persistent Disk","text":"<pre><code>apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: standard-gcp\nprovisioner: kubernetes.io/gce-pd\nparameters:\n  type: pd-standard\n  replication-type: none\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#using-storage-classes","title":"Using Storage Classes","text":""},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#1-create-pvc-with-storage-class","title":"1. Create PVC with Storage Class","text":"<pre><code>apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: fast-pvc\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: fast\n  resources:\n    requests:\n      storage: 10Gi\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#2-pod-using-pvc-with-storage-class","title":"2. Pod Using PVC with Storage Class","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-pod\nspec:\n  containers:\n  - name: nginx\n    image: nginx\n    volumeMounts:\n    - name: data\n      mountPath: /data\n  volumes:\n  - name: data\n    persistentVolumeClaim:\n      claimName: fast-pvc\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#storage-class-parameters","title":"Storage Class Parameters","text":""},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#common-parameters","title":"Common Parameters","text":"<ol> <li> <p>Volume Binding Mode <pre><code>volumeBindingMode: WaitForFirstConsumer  # or Immediate\n</code></pre></p> </li> <li> <p>Reclaim Policy <pre><code>reclaimPolicy: Delete  # or Retain\n</code></pre></p> </li> <li> <p>Allow Volume Expansion <pre><code>allowVolumeExpansion: true\n</code></pre></p> </li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#production-examples","title":"Production Examples","text":""},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#multi-tier-storage-setup","title":"Multi-tier Storage Setup","text":"<pre><code>---\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: fast-ssd\n  labels:\n    environment: production\nannotations:\n  storageclass.kubernetes.io/is-default-class: \"false\"\nprovisioner: kubernetes.io/aws-ebs\nparameters:\n  type: gp3\n  iops: \"16000\"\n  throughput: \"1000\"\n  encrypted: \"true\"\nreclaimPolicy: Retain\nallowVolumeExpansion: true\nvolumeBindingMode: WaitForFirstConsumer\n---\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: standard-hdd\n  labels:\n    environment: production\nprovisioner: kubernetes.io/aws-ebs\nparameters:\n  type: st1\n  encrypted: \"true\"\nreclaimPolicy: Delete\nallowVolumeExpansion: true\nvolumeBindingMode: WaitForFirstConsumer\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#application-using-multiple-storage-classes","title":"Application Using Multiple Storage Classes","text":"<pre><code>apiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: postgres-ha\nspec:\n  serviceName: postgres\n  replicas: 3\n  selector:\n    matchLabels:\n      app: postgres\n  template:\n    metadata:\n      labels:\n        app: postgres\n    spec:\n      containers:\n      - name: postgres\n        image: postgres:13\n        volumeMounts:\n        - name: data\n          mountPath: /var/lib/postgresql/data\n        - name: backup\n          mountPath: /backup\n  volumeClaimTemplates:\n  - metadata:\n      name: data\n    spec:\n      accessModes: [ \"ReadWriteOnce\" ]\n      storageClassName: fast-ssd\n      resources:\n        requests:\n          storage: 100Gi\n  - metadata:\n      name: backup\n    spec:\n      accessModes: [ \"ReadWriteOnce\" ]\n      storageClassName: standard-hdd\n      resources:\n        requests:\n          storage: 500Gi\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#best-practices","title":"Best Practices","text":""},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#1-storage-class-design","title":"1. Storage Class Design","text":"<ul> <li>Create classes for different performance needs</li> <li>Consider cost implications</li> <li>Plan for scalability</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#2-security","title":"2. Security","text":"<ul> <li>Enable encryption</li> <li>Use appropriate access modes</li> <li>Implement backup strategies</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#3-performance","title":"3. Performance","text":"<ul> <li>Match storage class to workload requirements</li> <li>Monitor storage performance</li> <li>Configure appropriate IOPS and throughput</li> </ul>"},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#common-operations","title":"Common Operations","text":""},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#managing-storage-classes","title":"Managing Storage Classes","text":"<pre><code># List storage classes\nkubectl get storageclass\n\n# Get storage class details\nkubectl describe storageclass storage-class-name\n\n# Set default storage class\nkubectl patch storageclass storage-class-name -p '{\"metadata\": {\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"true\"}}}'\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#volume-management","title":"Volume Management","text":"<pre><code># List PVCs using storage class\nkubectl get pvc --all-namespaces -o custom-columns=NAME:.metadata.name,STORAGECLASS:.spec.storageClassName\n\n# Check PV provisioning status\nkubectl get pv -o custom-columns=NAME:.metadata.name,STORAGECLASS:.spec.storageClassName,STATUS:.status.phase\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#troubleshooting","title":"Troubleshooting","text":""},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"<ol> <li> <p>PVC Stuck in Pending <pre><code># Check PVC status\nkubectl describe pvc pvc-name\n\n# Verify storage class exists\nkubectl get storageclass\n</code></pre></p> </li> <li> <p>Volume Provisioning Failed <pre><code># Check events\nkubectl get events --field-selector involvedObject.name=pvc-name\n\n# Check cloud provider quotas and limits\n</code></pre></p> </li> <li> <p>Performance Issues <pre><code># Monitor storage metrics\nkubectl top pod pod-name\n\n# Check storage class parameters\nkubectl describe storageclass storage-class-name\n</code></pre></p> </li> </ol>"},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#advanced-configurations","title":"Advanced Configurations","text":""},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#1-custom-storage-provisioner","title":"1. Custom Storage Provisioner","text":"<pre><code>apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: custom-storage\nprovisioner: custom.provisioner/nfs\nparameters:\n  server: nfs-server.default.svc.cluster.local\n  path: /shares\n  readOnly: \"false\"\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#2-storage-class-with-topology","title":"2. Storage Class with Topology","text":"<pre><code>apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: topology-aware\nprovisioner: kubernetes.io/aws-ebs\nparameters:\n  type: gp3\nallowedTopologies:\n- matchLabelExpressions:\n  - key: topology.kubernetes.io/zone\n    values:\n    - us-east-1a\n    - us-east-1b\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-create-storage-class-in-kubernetes/#next-steps","title":"Next Steps","text":"<ol> <li>Implement automated storage management</li> <li>Set up monitoring and alerts</li> <li>Create backup and disaster recovery plans</li> <li>Study advanced storage patterns</li> <li>Explore CSI drivers</li> </ol>"},{"location":"kubernetes/tutorials/how-to-install-certmanager/","title":"How to Install and Configure cert-manager in Kubernetes","text":"<p>This guide explains how to install, configure, and use cert-manager to automate certificate management in Kubernetes.</p>"},{"location":"kubernetes/tutorials/how-to-install-certmanager/#what-is-cert-manager","title":"What is cert-manager?","text":"<p>cert-manager is a powerful and extensible X.509 certificate controller for Kubernetes. It supports: - Automatic certificate issuance and renewal - Multiple certificate authorities (Let's Encrypt, HashiCorp Vault, etc.) - Multiple certificate types (wildcard, SAN) - Integration with Ingress controllers - Kubernetes-native certificate management</p>"},{"location":"kubernetes/tutorials/how-to-install-certmanager/#prerequisites","title":"Prerequisites","text":"<ul> <li>Kubernetes cluster (v1.20 or higher)</li> <li>kubectl installed and configured</li> <li>Helm 3.x (for Helm installation method)</li> <li>Basic understanding of TLS/SSL certificates</li> </ul>"},{"location":"kubernetes/tutorials/how-to-install-certmanager/#installation-methods","title":"Installation Methods","text":""},{"location":"kubernetes/tutorials/how-to-install-certmanager/#1-using-helm-recommended","title":"1. Using Helm (Recommended)","text":"<pre><code># Add the Jetstack Helm repository\nhelm repo add jetstack https://charts.jetstack.io\nhelm repo update\n\n# Install cert-manager\nhelm install cert-manager jetstack/cert-manager \\\n  --namespace cert-manager \\\n  --create-namespace \\\n  --set installCRDs=true \\\n  --set prometheus.enabled=true \\\n  --version v1.13.2\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-certmanager/#2-using-kubernetes-manifests","title":"2. Using Kubernetes Manifests","text":"<pre><code># Install cert-manager CRDs\nkubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.2/cert-manager.crds.yaml\n\n# Install cert-manager\nkubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.2/cert-manager.yaml\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-certmanager/#verifying-the-installation","title":"Verifying the Installation","text":"<pre><code># Check cert-manager pods\nkubectl get pods -n cert-manager\n</code></pre> <p>Output: <pre><code>NAME                                       READY   STATUS    RESTARTS   AGE\ncert-manager-55b7945f67-xk8q2             1/1     Running   0          2m\ncert-manager-cainjector-9b4f96d75-c6lvg   1/1     Running   0          2m\ncert-manager-webhook-5d59d996d4-dj8k9     1/1     Running   0          2m\n</code></pre></p> <pre><code># Check cert-manager services\nkubectl get services -n cert-manager\n</code></pre> <p>Output: <pre><code>NAME                   TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE\ncert-manager           ClusterIP   10.96.188.43   &lt;none&gt;        9402/TCP   2m\ncert-manager-webhook   ClusterIP   10.96.134.21   &lt;none&gt;        443/TCP    2m\n</code></pre></p> <pre><code># Check cert-manager API resources\nkubectl get apiservice v1.cert-manager.io\n</code></pre> <p>Output: <pre><code>NAME                    SERVICE                    AVAILABLE   AGE\nv1.cert-manager.io      cert-manager/cert-manager   True        2m\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-install-certmanager/#configuring-certificate-issuers","title":"Configuring Certificate Issuers","text":""},{"location":"kubernetes/tutorials/how-to-install-certmanager/#1-lets-encrypt-production-issuer","title":"1. Let's Encrypt Production Issuer","text":"<pre><code>apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: your-email@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-certmanager/#2-lets-encrypt-staging-issuer-for-testing","title":"2. Let's Encrypt Staging Issuer (For Testing)","text":"<pre><code>apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-staging\nspec:\n  acme:\n    server: https://acme-staging-v02.api.letsencrypt.org/directory\n    email: your-email@example.com\n    privateKeySecretRef:\n      name: letsencrypt-staging\n    solvers:\n    - http01:\n        ingress:\n          class: nginx\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-certmanager/#3-self-signed-issuer-for-development","title":"3. Self-Signed Issuer (For Development)","text":"<pre><code>apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: selfsigned-issuer\nspec:\n  selfSigned: {}\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-certmanager/#using-certificates","title":"Using Certificates","text":""},{"location":"kubernetes/tutorials/how-to-install-certmanager/#1-create-a-certificate","title":"1. Create a Certificate","text":"<pre><code>apiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: example-com\n  namespace: default\nspec:\n  secretName: example-com-tls\n  duration: 2160h # 90 days\n  renewBefore: 360h # 15 days\n  subject:\n    organizations:\n      - Example Inc.\n  commonName: example.com\n  dnsNames:\n    - example.com\n    - www.example.com\n  issuerRef:\n    name: letsencrypt-prod\n    kind: ClusterIssuer\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-certmanager/#2-using-with-ingress","title":"2. Using with Ingress","text":"<pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: example-ingress\n  annotations:\n    cert-manager.io/cluster-issuer: \"letsencrypt-prod\"\nspec:\n  tls:\n  - hosts:\n    - example.com\n    secretName: example-com-tls\n  rules:\n  - host: example.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: example-service\n            port:\n              number: 80\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-certmanager/#advanced-configurations","title":"Advanced Configurations","text":""},{"location":"kubernetes/tutorials/how-to-install-certmanager/#1-dns01-challenge-configuration-for-wildcard-certificates","title":"1. DNS01 Challenge Configuration (for Wildcard Certificates)","text":"<pre><code>apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod-dns\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: your-email@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod-dns\n    solvers:\n    - dns01:\n        cloudflare:\n          email: your-cloudflare-email\n          apiTokenSecretRef:\n            name: cloudflare-api-token-secret\n            key: api-token\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-certmanager/#2-certificate-request-rate-limiting","title":"2. Certificate Request Rate Limiting","text":"<pre><code>apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod-ratelimited\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: your-email@example.com\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    solvers:\n    - http01:\n        ingress:\n          class: nginx\n    externalAccountBinding:\n      keyID: your-kid\n      keySecretRef:\n        name: eab-secret\n        key: secret\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-certmanager/#monitoring-and-troubleshooting","title":"Monitoring and Troubleshooting","text":""},{"location":"kubernetes/tutorials/how-to-install-certmanager/#1-enable-prometheus-metrics","title":"1. Enable Prometheus Metrics","text":"<pre><code>prometheus:\n  enabled: true\n  servicemonitor:\n    enabled: true\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-certmanager/#2-common-debugging-commands","title":"2. Common Debugging Commands","text":"<pre><code># Check certificate status\nkubectl describe certificate example-com\n</code></pre> <p>Output: <pre><code>Name:         example-com\nNamespace:    default\nLabels:       &lt;none&gt;\nAnnotations:  &lt;none&gt;\nAPI Version:  cert-manager.io/v1\nKind:         Certificate\nMetadata:\n  Creation Timestamp:  2025-09-23T10:15:22Z\n  Generation:         1\nSpec:\n  Dns Names:\n    example.com\n    www.example.com\n  Issuer Ref:\n    Kind:       ClusterIssuer\n    Name:       letsencrypt-prod\n  Secret Name:  example-com-tls\nStatus:\n  Conditions:\n    Last Transition Time:  2025-09-23T10:16:02Z\n    Message:               Certificate is up to date and has not expired\n    Reason:               Ready\n    Status:               True\n    Type:                 Ready\n  Not After:              2025-12-22T10:15:22Z\n  Not Before:             2025-09-23T10:15:22Z\n  Renewal Time:           2025-12-07T10:15:22Z\n  Revision:               1\n</code></pre></p> <pre><code># Check certificate request\nkubectl describe certificaterequest example-com-2h4j9\n</code></pre> <p>Output: <pre><code>Name:         example-com-2h4j9\nNamespace:    default\nLabels:       &lt;none&gt;\nAnnotations:  cert-manager.io/certificate-name: example-com\n             cert-manager.io/certificate-revision: 1\nAPI Version:  cert-manager.io/v1\nKind:         CertificateRequest\nSpec:\n  Request:    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURSBSRVFVRVNULS0tLS0KTUlJQ...\n  Issuer Ref:\n    Kind:     ClusterIssuer\n    Name:     letsencrypt-prod\nStatus:\n  Conditions:\n    Last Transition Time:  2025-09-23T10:15:42Z\n    Message:               Certificate request has been approved\n    Reason:               Issued\n    Status:               True\n    Type:                 Ready\n</code></pre></p> <pre><code># Check issuer status\nkubectl describe clusterissuer letsencrypt-prod\n</code></pre> <p>Output: <pre><code>Name:         letsencrypt-prod\nNamespace:    \nLabels:       &lt;none&gt;\nAnnotations:  &lt;none&gt;\nAPI Version:  cert-manager.io/v1\nKind:         ClusterIssuer\nSpec:\n  Acme:\n    Email:            your-email@example.com\n    Preferred Chain:  \n    Private Key Secret Ref:\n      Name:  letsencrypt-prod\n    Server:  https://acme-v02.api.letsencrypt.org/directory\n    Solvers:\n      Http01:\n        Ingress:\n          Class:  nginx\nStatus:\n  Acme:\n    Last Registered Email:  your-email@example.com\n    Uri:                   https://acme-v02.api.letsencrypt.org/acme/acct/123456789\n  Conditions:\n    Last Transition Time:  2025-09-23T10:14:22Z\n    Message:               The ACME account was registered with the ACME server\n    Reason:               ACMEAccountRegistered\n    Status:               True\n    Type:                 Ready\n</code></pre></p> <pre><code># View cert-manager logs\nkubectl logs -n cert-manager -l app=cert-manager\n</code></pre> <p>Output: <pre><code>I0923 10:14:20.123456   1 start.go:89] cert-manager version: v1.13.2\nI0923 10:14:21.123456   1 controller.go:129] cert-manager/controller-runtime \"msg\"=\"Starting EventSource\"\nI0923 10:14:21.234567   1 controller.go:176] cert-manager/controller-runtime \"msg\"=\"Starting Controller\"\nI0923 10:14:21.345678   1 controller.go:190] cert-manager/controller-runtime \"msg\"=\"Starting workers\" \"controller\"=\"certificates\" \"worker count\"=1\n</code></pre></p> <pre><code># Check challenges\nkubectl get challenges --all-namespaces\n</code></pre> <p>Output: <pre><code>NAMESPACE   NAME                                         STATE     DOMAIN         AGE\ndefault     example-com-2h4j9-1234567890               pending   example.com    30s\ndefault     example-com-2h4j9-0987654321               pending   www.example.com 30s\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-install-certmanager/#maintenance","title":"Maintenance","text":""},{"location":"kubernetes/tutorials/how-to-install-certmanager/#1-upgrading-cert-manager","title":"1. Upgrading cert-manager","text":"<pre><code># Using Helm\nhelm repo update\nhelm upgrade cert-manager jetstack/cert-manager \\\n  --namespace cert-manager \\\n  --reuse-values \\\n  --version v1.13.2\n\n# Using manifests\nkubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.2/cert-manager.yaml\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-certmanager/#2-uninstallation","title":"2. Uninstallation","text":"<pre><code># Using Helm\nhelm uninstall cert-manager -n cert-manager\nkubectl delete namespace cert-manager\n\n# Remove CRDs\nkubectl delete -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.2/cert-manager.crds.yaml\n\n# Using manifests\nkubectl delete -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.2/cert-manager.yaml\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-certmanager/#best-practices","title":"Best Practices","text":"<ol> <li>Always use staging issuer first</li> <li>Implement proper rate limiting</li> <li>Set appropriate renewal windows</li> <li>Use ClusterIssuers for multi-namespace certificates</li> <li>Regularly monitor certificate status</li> </ol>"},{"location":"kubernetes/tutorials/how-to-install-certmanager/#next-steps","title":"Next Steps","text":"<ol> <li>Set up monitoring and alerting for certificate expiry</li> <li>Implement automated certificate renewal verification</li> <li>Configure backup solutions for certificates</li> <li>Set up multiple issuers for redundancy</li> <li>Implement certificate transparency logging ```</li> </ol>"},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/","title":"How to Install kubectl in Linux","text":"<p>This guide provides step-by-step instructions for installing kubectl on Linux. kubectl is the command-line tool for interacting with Kubernetes clusters.</p>"},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/#prerequisites","title":"Prerequisites","text":"<ul> <li>A Linux system (Ubuntu/Debian based instructions provided)</li> <li>Root or sudo access</li> <li>Internet connection</li> </ul>"},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/#installation-methods","title":"Installation Methods","text":"<p>There are several ways to install kubectl. We'll cover the three most common methods.</p>"},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/#method-1-using-package-manager-recommended","title":"Method 1: Using Package Manager (Recommended)","text":"<pre><code># Update apt package index\nsudo apt-get update\n\n# Install https support for apt\nsudo apt-get install -y apt-transport-https ca-certificates curl\n\n# Add Kubernetes apt repository key\ncurl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/kubernetes-archive-keyring.gpg\n\n# Add Kubernetes apt repository\necho \"deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main\" | sudo tee /etc/apt/sources.list.d/kubernetes.list\n\n# Update apt package index with the new repository\nsudo apt-get update\n\n# Install kubectl\nsudo apt-get install -y kubectl\n\n# Verify installation\nkubectl version --client\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/#method-2-direct-download-binary","title":"Method 2: Direct Download (Binary)","text":"<pre><code># Download latest release\ncurl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n\n# Download checksum file\ncurl -LO \"https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256\"\n\n# Verify the binary\necho \"$(cat kubectl.sha256)  kubectl\" | sha256sum --check\n\n# Make kubectl executable\nchmod +x kubectl\n\n# Move kubectl to a directory in your PATH\nsudo mv kubectl /usr/local/bin/\n\n# Verify installation\nkubectl version --client\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/#method-3-using-snap","title":"Method 3: Using Snap","text":"<pre><code># Install kubectl using snap\nsudo snap install kubectl --classic\n\n# Verify installation\nkubectl version --client\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/#configuration","title":"Configuration","text":""},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/#1-create-configuration-directory","title":"1. Create Configuration Directory","text":"<pre><code># Create .kube directory in your home\nmkdir -p ~/.kube\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/#2-configure-kubectl-if-using-with-minikube","title":"2. Configure kubectl (if using with Minikube)","text":"<pre><code># Copy Minikube configuration\ncp ~/.minikube/config/config ~/.kube/\n\n# Set proper permissions\nchmod 600 ~/.kube/config\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/#verify-installation","title":"Verify Installation","text":"<pre><code># Check kubectl version\nkubectl version --client\n\n# View kubectl configuration\nkubectl config view\n\n# Check if kubectl can connect to a cluster (if configured)\nkubectl cluster-info\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/#basic-kubectl-commands","title":"Basic kubectl Commands","text":""},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/#cluster-information","title":"Cluster Information","text":"<pre><code># View cluster information\nkubectl cluster-info\n\n# List all nodes in the cluster\nkubectl get nodes\n\n# View system pods\nkubectl get pods -n kube-system\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/#resource-management","title":"Resource Management","text":"<pre><code># List all pods\nkubectl get pods\n\n# List all services\nkubectl get services\n\n# List all deployments\nkubectl get deployments\n\n# List all namespaces\nkubectl get namespaces\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/#help-and-documentation","title":"Help and Documentation","text":"<pre><code># Get kubectl help\nkubectl --help\n\n# Get help for specific command\nkubectl get --help\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/#shell-completion","title":"Shell Completion","text":""},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/#bash","title":"Bash","text":"<pre><code># Add kubectl completion to bashrc\necho 'source &lt;(kubectl completion bash)' &gt;&gt;~/.bashrc\n\n# Apply changes\nsource ~/.bashrc\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/#zsh","title":"ZSH","text":"<pre><code># Add kubectl completion to zshrc\necho 'source &lt;(kubectl completion zsh)' &gt;&gt;~/.zshrc\n\n# Apply changes\nsource ~/.zshrc\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/#alias-setup-optional","title":"Alias Setup (Optional)","text":"<pre><code># Add kubectl alias 'k'\necho 'alias k=kubectl' &gt;&gt;~/.bashrc\necho 'complete -o default -F __start_kubectl k' &gt;&gt;~/.bashrc\n\n# Apply changes\nsource ~/.bashrc\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/#troubleshooting","title":"Troubleshooting","text":""},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"<ol> <li> <p>Permission Denied <pre><code># Fix permission issues\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n</code></pre></p> </li> <li> <p>Connection Issues <pre><code># Check if kubectl is properly configured\nkubectl config view\n</code></pre></p> </li> <li> <p>Version Mismatch <pre><code># Install specific version\ncurl -LO https://dl.k8s.io/release/v1.27.0/bin/linux/amd64/kubectl\n</code></pre></p> </li> </ol>"},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/#best-practices","title":"Best Practices","text":"<ol> <li>Version Management</li> <li>Keep kubectl version within one minor version of your cluster</li> <li> <p>Regularly update kubectl for security patches</p> </li> <li> <p>Configuration</p> </li> <li>Backup your kubectl configuration</li> <li>Use contexts for multiple clusters</li> <li> <p>Keep configurations secure</p> </li> <li> <p>Aliases and Shortcuts</p> </li> <li>Use aliases for common commands</li> <li>Enable shell completion</li> <li>Use kubectl short names (pods \u2192 po, services \u2192 svc)</li> </ol>"},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/#next-steps","title":"Next Steps","text":"<p>After installing kubectl: 1. Configure access to your Kubernetes cluster 2. Learn basic kubectl commands 3. Set up your development environment 4. Start deploying applications</p>"},{"location":"kubernetes/tutorials/how-to-install-kubectl-in-linux/#additional-resources","title":"Additional Resources","text":"<ul> <li>Official Kubernetes Documentation</li> <li>kubectl Cheat Sheet</li> <li>kubectl Command Reference</li> </ul>"},{"location":"kubernetes/tutorials/how-to-install-minikube-in-linux/","title":"How to Install Minikube in Linux","text":"<p>This guide will walk you through installing Minikube on a Linux system, allowing you to run a single-node Kubernetes cluster locally.</p>"},{"location":"kubernetes/tutorials/how-to-install-minikube-in-linux/#prerequisites","title":"Prerequisites","text":"<p>Before installing Minikube, ensure your system meets these requirements:</p> <ol> <li>2 CPUs or more</li> <li>2GB of free memory</li> <li>20GB of free disk space</li> <li>Internet connection</li> <li>Container runtime (Docker)</li> </ol>"},{"location":"kubernetes/tutorials/how-to-install-minikube-in-linux/#step-by-step-installation","title":"Step-by-Step Installation","text":""},{"location":"kubernetes/tutorials/how-to-install-minikube-in-linux/#1-install-docker-if-not-already-installed","title":"1. Install Docker (if not already installed)","text":"<pre><code># Update package index\nsudo apt-get update\n\n# Install required packages\nsudo apt-get install -y \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    software-properties-common\n\n# Add Docker's official GPG key\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n\n# Add Docker repository\necho \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list\n\n# Install Docker\nsudo apt-get update\nsudo apt-get install -y docker-ce docker-ce-cli containerd.io\n\n# Add your user to the docker group\nsudo usermod -aG docker $USER\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-minikube-in-linux/#2-install-minikube","title":"2. Install Minikube","text":"<pre><code># Download the latest Minikube binary\ncurl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64\n\n# Install Minikube\nsudo install minikube-linux-amd64 /usr/local/bin/minikube\n\n# Verify installation\nminikube version\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-minikube-in-linux/#3-start-minikube","title":"3. Start Minikube","text":"<pre><code># Start Minikube with Docker driver\nminikube start --driver=docker\n\n# Verify the status\nminikube status\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-minikube-in-linux/#4-install-kubectl","title":"4. Install kubectl","text":"<pre><code># Download kubectl\ncurl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n\n# Make kubectl executable\nchmod +x kubectl\n\n# Move kubectl to PATH\nsudo mv kubectl /usr/local/bin/\n\n# Verify installation\nkubectl version --client\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-minikube-in-linux/#verify-installation","title":"Verify Installation","text":"<p>Check if everything is working:</p> <pre><code># Check cluster info\nkubectl cluster-info\n\n# Check nodes\nkubectl get nodes\n\n# Check pods in all namespaces\nkubectl get pods --all-namespaces\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-minikube-in-linux/#common-commands","title":"Common Commands","text":""},{"location":"kubernetes/tutorials/how-to-install-minikube-in-linux/#basic-minikube-commands","title":"Basic Minikube Commands","text":"<pre><code># Stop cluster\nminikube stop\n\n# Start cluster\nminikube start\n\n# Delete cluster\nminikube delete\n\n# Access dashboard\nminikube dashboard\n\n# Get cluster IP\nminikube ip\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-minikube-in-linux/#basic-kubectl-commands","title":"Basic kubectl Commands","text":"<pre><code># Get cluster information\nkubectl cluster-info\n\n# List all pods\nkubectl get pods\n\n# List all services\nkubectl get services\n\n# List all deployments\nkubectl get deployments\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-minikube-in-linux/#troubleshooting","title":"Troubleshooting","text":""},{"location":"kubernetes/tutorials/how-to-install-minikube-in-linux/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"<ol> <li> <p>Insufficient Resources <pre><code># Start with fewer resources\nminikube start --memory=2048mb --cpus=2\n</code></pre></p> </li> <li> <p>Docker Permission Issues <pre><code># Add user to docker group and reload\nsudo usermod -aG docker $USER\nnewgrp docker\n</code></pre></p> </li> <li> <p>Network Issues <pre><code># Check if minikube can reach the internet\nminikube ssh ping -c 1 google.com\n</code></pre></p> </li> </ol>"},{"location":"kubernetes/tutorials/how-to-install-minikube-in-linux/#checking-logs","title":"Checking Logs","text":"<pre><code># View minikube logs\nminikube logs\n\n# View specific pod logs\nkubectl logs &lt;pod-name&gt;\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-minikube-in-linux/#next-steps","title":"Next Steps","text":"<p>After successfully installing Minikube, you can:</p> <ol> <li>Deploy your first application</li> <li>Explore the Kubernetes dashboard</li> <li>Learn about Kubernetes objects</li> <li>Create your first deployment</li> </ol>"},{"location":"kubernetes/tutorials/how-to-install-minikube-in-linux/#best-practices","title":"Best Practices","text":"<ol> <li> <p>Regular Updates <pre><code># Update minikube\nminikube update-check\n</code></pre></p> </li> <li> <p>Resource Management</p> </li> <li>Monitor resource usage</li> <li>Clean up unused resources</li> <li> <p>Stop cluster when not in use</p> </li> <li> <p>Backup</p> </li> <li>Regularly backup configurations</li> <li>Document custom settings</li> </ol>"},{"location":"kubernetes/tutorials/how-to-install-minikube-in-linux/#additional-tips","title":"Additional Tips","text":"<ol> <li> <p>Enable Addons <pre><code># List available addons\nminikube addons list\n\n# Enable specific addon\nminikube addons enable &lt;addon-name&gt;\n</code></pre></p> </li> <li> <p>Access Services <pre><code># Create a tunnel to services\nminikube service &lt;service-name&gt;\n</code></pre></p> </li> <li> <p>Multiple Clusters <pre><code># Create a second cluster\nminikube start -p cluster2\n</code></pre></p> </li> </ol>"},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/","title":"How to Install and Configure NGINX Ingress Controller in Kubernetes","text":"<p>This guide explains how to install, configure, and use the NGINX Ingress Controller in a Kubernetes cluster.</p>"},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#what-is-nginx-ingress-controller","title":"What is NGINX Ingress Controller?","text":"<p>The NGINX Ingress Controller is an implementation of Kubernetes Ingress that manages NGINX as a reverse proxy and load balancer. It provides: - Layer 7 load balancing - TLS/SSL termination - Name-based virtual hosting - Path-based routing - Rate limiting - WAF capabilities</p>"},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#prerequisites","title":"Prerequisites","text":"<ul> <li>A running Kubernetes cluster</li> <li>kubectl installed and configured</li> <li>Helm 3.x installed</li> <li>Basic understanding of Kubernetes networking</li> </ul>"},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#installation-methods","title":"Installation Methods","text":""},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#1-using-helm-recommended","title":"1. Using Helm (Recommended)","text":""},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#add-the-nginx-ingress-repository","title":"Add the NGINX Ingress repository","text":"<pre><code>helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx\nhelm repo update\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#install-the-controller","title":"Install the Controller","text":"<p>Basic installation: <pre><code>helm install ingress-nginx ingress-nginx/ingress-nginx \\\n  --namespace ingress-nginx \\\n  --create-namespace \\\n  --set controller.publishService.enabled=true\n</code></pre></p> <p>Installation with custom values: <pre><code>helm install ingress-nginx ingress-nginx/ingress-nginx \\\n  --namespace ingress-nginx \\\n  --create-namespace \\\n  --set controller.replicaCount=2 \\\n  --set controller.metrics.enabled=true \\\n  --set controller.podSecurityContext.runAsUser=101 \\\n  --set controller.containerSecurityContext.runAsNonRoot=true \\\n  --set controller.service.externalTrafficPolicy=Local\n</code></pre></p>"},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#2-using-kubernetes-manifests","title":"2. Using Kubernetes Manifests","text":"<pre><code>kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.9.4/deploy/static/provider/cloud/deploy.yaml\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#verifying-the-installation","title":"Verifying the Installation","text":""},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#check-the-namespace-and-pods","title":"Check the Namespace and Pods","text":"<pre><code># Check namespace\nkubectl get namespace ingress-nginx\n\n# Check pods\nkubectl get pods -n ingress-nginx\n\n# Check services\nkubectl get services -n ingress-nginx\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#verify-controller-version","title":"Verify Controller Version","text":"<pre><code>POD_NAME=$(kubectl get pods -n ingress-nginx -l app.kubernetes.io/name=ingress-nginx -o jsonpath='{.items[0].metadata.name}')\nkubectl exec -n ingress-nginx $POD_NAME -- /nginx-ingress-controller --version\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#basic-configuration","title":"Basic Configuration","text":""},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#1-creating-a-simple-ingress-rule","title":"1. Creating a Simple Ingress Rule","text":"<pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: example-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  ingressClassName: nginx\n  rules:\n  - host: example.com\n    http:\n      paths:\n      - path: /app1\n        pathType: Prefix\n        backend:\n          service:\n            name: app1-service\n            port:\n              number: 80\n      - path: /app2\n        pathType: Prefix\n        backend:\n          service:\n            name: app2-service\n            port:\n              number: 80\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#2-configuring-tls","title":"2. Configuring TLS","text":"<pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: tls-example-ingress\nspec:\n  ingressClassName: nginx\n  tls:\n  - hosts:\n      - secure.example.com\n    secretName: tls-secret\n  rules:\n  - host: secure.example.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: secure-service\n            port:\n              number: 80\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#advanced-configurations","title":"Advanced Configurations","text":""},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#1-rate-limiting","title":"1. Rate Limiting","text":"<pre><code>metadata:\n  annotations:\n    nginx.ingress.kubernetes.io/limit-rps: \"10\"\n    nginx.ingress.kubernetes.io/limit-connections: \"5\"\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#2-session-persistence","title":"2. Session Persistence","text":"<pre><code>metadata:\n  annotations:\n    nginx.ingress.kubernetes.io/affinity: \"cookie\"\n    nginx.ingress.kubernetes.io/session-cookie-name: \"route\"\n    nginx.ingress.kubernetes.io/session-cookie-expires: \"172800\"\n    nginx.ingress.kubernetes.io/session-cookie-max-age: \"172800\"\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#3-custom-nginx-configuration","title":"3. Custom NGINX Configuration","text":"<pre><code>metadata:\n  annotations:\n    nginx.ingress.kubernetes.io/server-snippet: |\n      location /custom {\n        return 200 'custom response\\n';\n      }\n    nginx.ingress.kubernetes.io/configuration-snippet: |\n      more_set_headers \"Custom-Header: custom-value\";\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#4-ssl-configuration","title":"4. SSL Configuration","text":"<pre><code>metadata:\n  annotations:\n    nginx.ingress.kubernetes.io/ssl-redirect: \"true\"\n    nginx.ingress.kubernetes.io/force-ssl-redirect: \"true\"\n    nginx.ingress.kubernetes.io/ssl-ciphers: \"ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256\"\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#monitoring-and-troubleshooting","title":"Monitoring and Troubleshooting","text":""},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#1-enable-prometheus-metrics","title":"1. Enable Prometheus Metrics","text":"<pre><code>controller:\n  metrics:\n    enabled: true\n    serviceMonitor:\n      enabled: true\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#2-view-ingress-controller-logs","title":"2. View Ingress Controller Logs","text":"<pre><code>kubectl logs -n ingress-nginx -l app.kubernetes.io/name=ingress-nginx\n\n# Follow logs\nkubectl logs -n ingress-nginx -l app.kubernetes.io/name=ingress-nginx -f\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#3-check-ingress-status","title":"3. Check Ingress Status","text":"<pre><code>kubectl describe ingress &lt;ingress-name&gt;\n\n# Check events\nkubectl get events -n ingress-nginx\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#maintenance","title":"Maintenance","text":""},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#upgrading-the-controller","title":"Upgrading the Controller","text":"<pre><code># Update Helm repositories\nhelm repo update\n\n# Upgrade the installation\nhelm upgrade ingress-nginx ingress-nginx/ingress-nginx \\\n  --namespace ingress-nginx \\\n  --reuse-values\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#uninstalling","title":"Uninstalling","text":"<pre><code># Using Helm\nhelm uninstall ingress-nginx -n ingress-nginx\n\n# Delete namespace\nkubectl delete namespace ingress-nginx\n\n# Using manifest (if installed that way)\nkubectl delete -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.9.4/deploy/static/provider/cloud/deploy.yaml\n</code></pre>"},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#best-practices","title":"Best Practices","text":"<ol> <li> <p>Resource Management <pre><code>controller:\n  resources:\n    requests:\n      cpu: 100m\n      memory: 128Mi\n    limits:\n      cpu: 200m\n      memory: 256Mi\n</code></pre></p> </li> <li> <p>High Availability <pre><code>controller:\n  replicaCount: 2\n  minAvailable: 1\n  podAntiAffinity:\n    requiredDuringSchedulingIgnoredDuringExecution:\n      - labelSelector:\n          matchLabels:\n            app.kubernetes.io/name: ingress-nginx\n        topologyKey: \"kubernetes.io/hostname\"\n</code></pre></p> </li> <li> <p>Security Settings <pre><code>controller:\n  podSecurityContext:\n    runAsUser: 101\n    fsGroup: 101\n  containerSecurityContext:\n    runAsNonRoot: true\n    allowPrivilegeEscalation: false\n</code></pre></p> </li> </ol>"},{"location":"kubernetes/tutorials/how-to-install-nginx-ingress-controller/#next-steps","title":"Next Steps","text":"<ol> <li>Configure monitoring with Prometheus and Grafana</li> <li>Set up cert-manager for automatic SSL certificate management</li> <li>Implement rate limiting and WAF rules</li> <li>Configure custom error pages</li> <li>Set up access and error logging</li> </ol>"},{"location":"kubernetes/tutorials/imperative-commands/","title":"Kubernetes Imperative Commands Guide","text":"<p>This guide covers Kubernetes imperative commands from basic to advanced usage. Each section includes example commands and their outputs.</p>"},{"location":"kubernetes/tutorials/imperative-commands/#basic-commands","title":"Basic Commands","text":""},{"location":"kubernetes/tutorials/imperative-commands/#1-cluster-information","title":"1. Cluster Information","text":"<pre><code># Get cluster information\nkubectl cluster-info\n\nOutput:\nKubernetes control plane is running at https://kubernetes.docker.internal:6443\nCoreDNS is running at https://kubernetes.docker.internal:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy\n</code></pre>"},{"location":"kubernetes/tutorials/imperative-commands/#2-node-operations","title":"2. Node Operations","text":"<pre><code># List all nodes\nkubectl get nodesF\n\nOutput:\nNAME             STATUS   ROLES           AGE     VERSION\ndocker-desktop   Ready    control-plane   7d14h   v1.27.2\n\n# Get detailed information about a node\nkubectl describe node docker-desktop\n\nOutput:\nName:               docker-desktop\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                   beta.kubernetes.io/os=linux\n                   kubernetes.io/arch=amd64\n                   kubernetes.io/hostname=docker-desktop\n                   kubernetes.io/os=linux\n                   node-role.kubernetes.io/control-plane=\n                   ...\n</code></pre>"},{"location":"kubernetes/tutorials/imperative-commands/#pod-operations","title":"Pod Operations","text":""},{"location":"kubernetes/tutorials/imperative-commands/#1-creating-pods","title":"1. Creating Pods","text":"<pre><code># Create a pod\nkubectl run nginx --image=nginx\n\nOutput:\npod/nginx created\n\n# Create a pod in specific namespace\nkubectl run nginx --image=nginx -n dev\n\nOutput:\npod/nginx created\n\n# Create a pod with specific port\nkubectl run nginx --image=nginx --port=80\n\nOutput:\npod/nginx created\n</code></pre>"},{"location":"kubernetes/tutorials/imperative-commands/#2-pod-management","title":"2. Pod Management","text":"<pre><code># List pods\nkubectl get pods\nkubectl get pods -o wide  # More detailed view\nkubectl get pods --all-namespaces  # List pods in all namespaces\nkubectl get pods -n dev  # List pods in specific namespace\n\nOutput:\nNAME    READY   STATUS    RESTARTS   AGE\nnginx   1/1     Running   0          45s\n\n# Get pod details\nkubectl describe pod nginx\n\n# Delete a pod\nkubectl delete pod nginx\n\nOutput:\npod \"nginx\" deleted\n</code></pre>"},{"location":"kubernetes/tutorials/imperative-commands/#deployment-operations","title":"Deployment Operations","text":""},{"location":"kubernetes/tutorials/imperative-commands/#1-creating-deployments","title":"1. Creating Deployments","text":"<pre><code># Create a deployment\nkubectl create deployment nginx --image=nginx\n\nOutput:\ndeployment.apps/nginx created\n\n# Create deployment in specific namespace\nkubectl create deployment nginx --image=nginx -n dev\n\nOutput:\ndeployment.apps/nginx created\n\n# Create deployment with specific replicas\nkubectl create deployment nginx --image=nginx --replicas=3\n\nOutput:\ndeployment.apps/nginx created\n</code></pre>"},{"location":"kubernetes/tutorials/imperative-commands/#2-scaling-deployments","title":"2. Scaling Deployments","text":"<pre><code># Scale a deployment\nkubectl scale deployment nginx --replicas=5\n\nOutput:\ndeployment.apps/nginx scaled\n\n# Auto-scale a deployment\nkubectl autoscale deployment nginx --min=2 --max=5 --cpu-percent=80\n\nOutput:\nhorizontalpodautoscaler.autoscaling/nginx autoscaled\n</code></pre>"},{"location":"kubernetes/tutorials/imperative-commands/#3-updating-deployments","title":"3. Updating Deployments","text":"<pre><code># Update container image\nkubectl set image deployment/nginx nginx=nginx:1.19.1\n\nOutput:\ndeployment.apps/nginx image updated\n\n# Roll back a deployment\nkubectl rollout undo deployment/nginx\n\nOutput:\ndeployment.apps/nginx rolled back\n</code></pre>"},{"location":"kubernetes/tutorials/imperative-commands/#service-operations","title":"Service Operations","text":""},{"location":"kubernetes/tutorials/imperative-commands/#1-creating-services","title":"1. Creating Services","text":"<pre><code># Create a service\nkubectl expose deployment nginx --port=80 --type=NodePort\n\nOutput:\nservice/nginx exposed\n\n# Create ClusterIP service\nkubectl expose deployment nginx --port=80 --type=ClusterIP\n\nOutput:\nservice/nginx exposed\n</code></pre>"},{"location":"kubernetes/tutorials/imperative-commands/#2-service-management","title":"2. Service Management","text":"<pre><code># List services\nkubectl get services\n\nOutput:\nNAME         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE\nkubernetes   ClusterIP   10.96.0.1       &lt;none&gt;        443/TCP        7d14h\nnginx        NodePort    10.96.145.123   &lt;none&gt;        80:32080/TCP   2m\n</code></pre>"},{"location":"kubernetes/tutorials/imperative-commands/#configmap-and-secret-operations","title":"ConfigMap and Secret Operations","text":""},{"location":"kubernetes/tutorials/imperative-commands/#1-configmaps","title":"1. ConfigMaps","text":"<pre><code># Create ConfigMap from literal values\nkubectl create configmap app-config --from-literal=APP_COLOR=blue --from-literal=APP_MODE=prod\n\nOutput:\nconfigmap/app-config created\n\n# Create ConfigMap from file\nkubectl create configmap app-config --from-file=config.properties\n\nOutput:\nconfigmap/app-config created\n</code></pre>"},{"location":"kubernetes/tutorials/imperative-commands/#2-secrets","title":"2. Secrets","text":"<pre><code># Create secret from literal values\nkubectl create secret generic db-secret --from-literal=DB_Host=sql01 --from-literal=DB_User=root\n\nOutput:\nsecret/db-secret created\n\n# Get secrets\nkubectl get secrets\n\nOutput:\nNAME         TYPE     DATA   AGE\ndb-secret    Opaque   2      1m\n</code></pre>"},{"location":"kubernetes/tutorials/imperative-commands/#namespace-operations","title":"Namespace Operations","text":""},{"location":"kubernetes/tutorials/imperative-commands/#1-creating-and-managing-namespaces","title":"1. Creating and Managing Namespaces","text":"<pre><code># Create a namespace\nkubectl create namespace dev\n\nOutput:\nnamespace/dev created\n\n# List all namespaces\nkubectl get namespaces\n\nOutput:\nNAME              STATUS   AGE\ndefault           Active   7d14h\nkube-system       Active   7d14h\nkube-public       Active   7d14h\nkube-node-lease   Active   7d14h\ndev              Active   5s\n\n# Delete a namespace (this will delete all resources in the namespace)\nkubectl delete namespace dev\n\nOutput:\nnamespace \"dev\" deleted\n\n# Set default namespace for current context\nkubectl config set-context --current --namespace=dev\n\nOutput:\nContext \"docker-desktop\" modified.\n</code></pre>"},{"location":"kubernetes/tutorials/imperative-commands/#2-working-with-resources-in-namespaces","title":"2. Working with Resources in Namespaces","text":"<pre><code># Create resources in a namespace\nkubectl run nginx --image=nginx -n dev\nkubectl create deployment webapp --image=nginx -n dev\nkubectl create service clusterip nginx --tcp=80:80 -n dev\n\n# List resources in a specific namespace\nkubectl get all -n dev\n\n# List resources across all namespaces\nkubectl get all --all-namespaces\n\n# Delete all resources in a namespace\nkubectl delete all --all -n dev\n</code></pre>"},{"location":"kubernetes/tutorials/imperative-commands/#advanced-commands","title":"Advanced Commands","text":""},{"location":"kubernetes/tutorials/imperative-commands/#1-resource-quotas","title":"1. Resource Quotas","text":"<pre><code># Create resource quota\nkubectl create quota dev-quota --hard=requests.cpu=2,requests.memory=2Gi\n\nOutput:\nresourcequota/dev-quota created\n</code></pre>"},{"location":"kubernetes/tutorials/imperative-commands/#2-network-policies","title":"2. Network Policies","text":"<pre><code># Create network policy\nkubectl create networkpolicy deny-all --podSelector '{}'\n\nOutput:\nnetworkpolicy.networking.k8s.io/deny-all created\n</code></pre>"},{"location":"kubernetes/tutorials/imperative-commands/#3-context-and-configuration","title":"3. Context and Configuration","text":"<pre><code># View kubeconfig\nkubectl config view\n\n# Switch context\nkubectl config use-context docker-desktop\n\nOutput:\nSwitched to context \"docker-desktop\"\n</code></pre>"},{"location":"kubernetes/tutorials/imperative-commands/#4-debug-commands","title":"4. Debug Commands","text":"<pre><code># Port forwarding\nkubectl port-forward pod/nginx 8080:80\n\nOutput:\nForwarding from 127.0.0.1:8080 -&gt; 80\nForwarding from [::1]:8080 -&gt; 80\n\n# Get container logs\nkubectl logs nginx\nkubectl logs nginx -f  # Follow logs\n\n# Execute command in pod\nkubectl exec -it nginx -- /bin/bash\n\n# Copy files to/from pod\nkubectl cp nginx:/etc/nginx/nginx.conf ./nginx.conf\n</code></pre>"},{"location":"kubernetes/tutorials/imperative-commands/#5-label-operations","title":"5. Label Operations","text":"<pre><code># Add label to pod\nkubectl label pod nginx environment=production\n\nOutput:\npod/nginx labeled\n\n# Remove label from pod\nkubectl label pod nginx environment-\n\nOutput:\npod/nginx unlabeled\n</code></pre>"},{"location":"kubernetes/tutorials/imperative-commands/#6-api-resources","title":"6. API Resources","text":"<pre><code># List API resources\nkubectl api-resources\n\nOutput:\nNAME          SHORTNAMES   APIVERSION   NAMESPACED   KIND\npods          po          v1           true         Pod\nservices      svc         v1           true         Service\ndeployments   deploy      apps/v1      true         Deployment\n...\n</code></pre>"},{"location":"kubernetes/tutorials/imperative-commands/#tips-and-best-practices","title":"Tips and Best Practices","text":"<ol> <li> <p>Use <code>--dry-run=client -o yaml</code> to preview resource creation: <pre><code>kubectl create deployment nginx --image=nginx --dry-run=client -o yaml\n</code></pre></p> </li> <li> <p>Use <code>kubectl explain</code> to get resource documentation: <pre><code>kubectl explain pod.spec.containers\n</code></pre></p> </li> <li> <p>Use <code>kubectl diff</code> to see changes before applying: <pre><code>kubectl diff -f deployment.yaml\n</code></pre></p> </li> <li> <p>Save command output to file: <pre><code>kubectl get pod nginx -o yaml &gt; nginx-pod.yaml\n</code></pre></p> </li> </ol>"},{"location":"kubernetes/tutorials/imperative-commands/#remember","title":"Remember","text":"<ul> <li>Always use <code>--namespace</code> or <code>-n</code> flag when working in specific namespaces</li> <li>Use <code>kubectl api-resources --namespaced=false</code> to see cluster-wide resources</li> <li>Use command completion: <code>source &lt;(kubectl completion bash)</code></li> </ul>"},{"location":"kubernetes/tutorials/what-is-kubernetes/","title":"What is Kubernetes?","text":"<p>Kubernetes (K8s) is an open-source container orchestration platform that automates the deployment, scaling, and management of containerized applications.</p>"},{"location":"kubernetes/tutorials/what-is-kubernetes/#key-concepts","title":"Key Concepts","text":""},{"location":"kubernetes/tutorials/what-is-kubernetes/#1-container-orchestration","title":"1. Container Orchestration","text":"<ul> <li>Manages multiple containers across multiple hosts</li> <li>Ensures high availability and scalability</li> <li>Handles container lifecycle management</li> </ul>"},{"location":"kubernetes/tutorials/what-is-kubernetes/#2-core-features","title":"2. Core Features","text":"<ul> <li>Automated rollouts and rollbacks</li> <li>Service discovery and load balancing</li> <li>Storage orchestration</li> <li>Self-healing</li> <li>Secret and configuration management</li> <li>Horizontal scaling</li> </ul>"},{"location":"kubernetes/tutorials/what-is-kubernetes/#3-basic-architecture","title":"3. Basic Architecture","text":""},{"location":"kubernetes/tutorials/what-is-kubernetes/#control-plane-components","title":"Control Plane Components","text":"<ol> <li>kube-apiserver: Frontend for Kubernetes control plane</li> <li>etcd: Key-value store for all cluster data</li> <li>kube-scheduler: Watches for newly created pods and assigns them to nodes</li> <li>kube-controller-manager: Runs controller processes</li> </ol>"},{"location":"kubernetes/tutorials/what-is-kubernetes/#node-components","title":"Node Components","text":"<ol> <li>kubelet: Ensures containers are running in a Pod</li> <li>kube-proxy: Maintains network rules on nodes</li> <li>Container runtime: Software responsible for running containers (e.g., Docker)</li> </ol>"},{"location":"kubernetes/tutorials/what-is-kubernetes/#4-basic-objects","title":"4. Basic Objects","text":"<ul> <li>Pods: Smallest deployable units</li> <li>Services: Expose applications running on pods</li> <li>Volumes: Persistent storage</li> <li>Namespaces: Virtual clusters</li> </ul>"},{"location":"kubernetes/tutorials/what-is-kubernetes/#why-use-kubernetes","title":"Why Use Kubernetes?","text":"<ol> <li>Portability</li> <li>Run applications anywhere (cloud, on-premises)</li> <li> <p>Consistent environment across development and production</p> </li> <li> <p>Scalability</p> </li> <li>Automatically scale applications based on demand</li> <li> <p>Handle increased traffic efficiently</p> </li> <li> <p>High Availability</p> </li> <li>Self-healing capabilities</li> <li>Automatic rollouts and rollbacks</li> <li> <p>Load balancing</p> </li> <li> <p>Container Management</p> </li> <li>Automated container deployment</li> <li>Resource optimization</li> <li>Service discovery and load balancing</li> </ol>"},{"location":"kubernetes/tutorials/what-is-kubernetes/#real-world-example","title":"Real-World Example","text":"<p>Let's consider a simple web application:</p> <pre><code># Simple web application deployment\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: web-app\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: web\n  template:\n    metadata:\n      labels:\n        app: web\n    spec:\n      containers:\n      - name: web-container\n        image: nginx:latest\n        ports:\n        - containerPort: 80\n</code></pre> <p>This example shows: - Deployment of a web application - Running 3 replicas for high availability - Using nginx as the web server - Exposing port 80</p>"},{"location":"kubernetes/tutorials/what-is-kubernetes/#benefits-in-practice","title":"Benefits in Practice","text":"<ol> <li>Development</li> <li>Consistent development environment</li> <li>Easy testing and deployment</li> <li> <p>Quick rollback if needed</p> </li> <li> <p>Operations</p> </li> <li>Automated scaling</li> <li>Self-healing capabilities</li> <li> <p>Easy monitoring and logging</p> </li> <li> <p>Business</p> </li> <li>Reduced downtime</li> <li>Better resource utilization</li> <li>Cost efficiency</li> </ol>"},{"location":"kubernetes/tutorials/what-is-kubernetes/#getting-started","title":"Getting Started","text":"<p>To start with Kubernetes: 1. Install a local Kubernetes cluster (Minikube) 2. Learn basic kubectl commands 3. Deploy your first application 4. Explore more advanced features</p>"},{"location":"kubernetes/tutorials/what-is-kubernetes/#next-steps","title":"Next Steps","text":"<p>Continue learning about: - Installing Minikube - Basic kubectl commands - Creating pods and deployments - Setting up services - Managing configurations</p>"},{"location":"linux-commands/part-1/","title":"Linux commands Part 1","text":""},{"location":"linux-commands/part-1/#pwd","title":"pwd","text":"<p>To check the current working directory</p> <pre><code>[opc@new-k8s ~]$ pwd\n/home/opc\n</code></pre> <p>NOTE: In linux operating system, folder is also called as directory</p>"},{"location":"linux-commands/part-1/#ls","title":"ls","text":"<p>To show the files and folders in current working directory in horizontal view</p> <pre><code>[opc@new-k8s ~]$ ls\nfirst-project  hello.txt  shellscript  swapfile\n</code></pre>"},{"location":"linux-commands/part-1/#ls-l","title":"ls -l","text":"<p>To show the files and folders in current working directory in vertical view</p> <p>And also shows the details of each file and folder</p> <pre><code>[opc@new-k8s ~]$ ls -l\ntotal 3072004\ndrwxrwxr-x. 3 opc  opc          65 May 18 12:50 first-project\n-rw-rw-r--. 1 opc  opc          14 Jun 18 03:53 hello.txt\ndrwxrwxr-x. 5 opc  opc          70 May 13 12:56 shellscript\n-rw-r--r--. 1 root root 3145728000 Jan 11  2022 swapfile\n</code></pre>"},{"location":"linux-commands/part-1/#ls-la","title":"ls -la","text":"<p>To show the normal files, folders and also hidden files, folders in current working directory in vertical view</p> <p>In a linux hidden file or folder starts with <code>.</code></p> <p>.file_name \u2192 hidden file</p> <p>.folder_name \u2192 hidden folder</p> <pre><code>[opc@new-k8s ~]$ ls -la\ntotal 3072060\ndrwxr-x---. 12 opc  opc          4096 Jun 18 03:54 .\ndrwxr-xr-x.  4 root root           32 Apr 13 12:25 ..\n-rw-------.  1 opc  opc         18412 Jun 15 12:46 .bash_history\n-rw-r--r--.  1 opc  opc            18 Nov 22  2019 .bash_logout\n-rw-r--r--.  1 opc  opc           193 Nov 22  2019 .bash_profile\n-rw-r--r--.  1 opc  opc           232 Apr 15 13:02 .bashrc\ndrwxrwxr-x.  4 opc  opc            30 Nov 26  2021 .cache\ndrwxrwxr-x.  4 opc  opc            30 Nov 26  2021 .config\ndrwxrwxr-x.  4 opc  opc            82 Jan 11  2022 .docker\ndrwxrwxr-x.  3 opc  opc            65 May 18 12:50 first-project\n-rw-rw-r--.  1 opc  opc            57 May 18 12:42 .gitconfig\n-rw-rw-r--.  1 opc  opc            14 Jun 18 03:53 hello.txt\n-rw-r--r--.  1 opc  opc           172 Apr  2  2020 .kshrc\ndrwxr-xr-x.  3 opc  docker         33 Jul  4  2021 .kube\ndrwxrwxr-x.  3 opc  opc            24 May  7 03:40 .m2\ndrwxrw----.  3 opc  opc            19 Jul  4  2021 .pki\ndrwxrwxr-x.  5 opc  opc            70 May 13 12:56 shellscript\ndrwx------.  2 opc  opc            80 May 26  2022 .ssh\n-rw-r--r--.  1 root root   3145728000 Jan 11  2022 swapfile\ndrwxr-xr-x.  2 opc  opc            24 May  8 12:30 .vim\n-rw-------.  1 opc  opc          9145 May 18 12:41 .viminfo\n</code></pre>"},{"location":"linux-commands/part-1/#cd","title":"cd","text":"<p>To go to another folder</p> <p>cd folder_name</p> <pre><code>[opc@new-k8s ~]$ pwd\n/home/opc\n</code></pre> <pre><code>[opc@new-k8s ~]$ ls -l\ntotal 3072004\ndrwxrwxr-x. 3 opc  opc          65 May 18 12:50 first-project\n-rw-rw-r--. 1 opc  opc          14 Jun 18 03:53 hello.txt\ndrwxrwxr-x. 5 opc  opc          70 May 13 12:56 shellscript\n-rw-r--r--. 1 root root 3145728000 Jan 11  2022 swapfile\n</code></pre> <pre><code>[opc@new-k8s ~]$ cd first-project/\n</code></pre> <pre><code>[opc@new-k8s first-project]$ pwd\n/home/opc/first-project\n</code></pre> <pre><code>[opc@new-k8s first-project]$ ll\ntotal 12\n-rw-rw-r--. 1 opc opc 31 May 18 12:50 2.txt\n-rw-rw-r--. 1 opc opc 21 May 18 12:40 hello.txt\n-rw-rw-r--. 1 opc opc 30 May 18 12:40 README.md\n</code></pre>"},{"location":"linux-commands/part-1/#relative-path","title":"Relative path","text":"<p>Need to tell the path/folder name only from the current directory. No need to tell from starting point</p> <p>We are currently in <code>/home/opc</code></p> <pre><code>[opc@new-k8s ~]$ pwd\n/home/opc\n</code></pre> <p>If you want to go to <code>/home/opc/first-project</code> you can just pass only the <code>first-project</code> folder name to <code>cd</code> command to go to that folder</p> <pre><code>[opc@new-k8s ~]$ cd first-project\n[opc@new-k8s first-project]$ pwd\n/home/opc/first-project\n</code></pre>"},{"location":"linux-commands/part-1/#absolute-path","title":"Absolute path","text":"<p>Absolute path means you need to give the full path from starting point</p> <p>We are currently in <code>/home/opc</code></p> <pre><code>[opc@new-k8s ~]$ pwd\n/home/opc\n</code></pre> <p>If you want to go to <code>/home/opc/first-project</code> you have to pass the full path <code>/home/opc/first-project</code> to the <code>cd</code> command to go to that folder</p> <pre><code>[opc@new-k8s ~]$ cd /home/opc/first-project\n[opc@new-k8s first-project]$ pwd\n/home/opc/first-project\n</code></pre>"},{"location":"linux-commands/part-1/#to-printread-content-of-a-file","title":"To print/read content of a file","text":"<pre><code>ubuntu@manikandan:~$ cat /etc/os-release \nPRETTY_NAME=\"Ubuntu 22.04.2 LTS\"\nNAME=\"Ubuntu\"\nVERSION_ID=\"22.04\"\nVERSION=\"22.04.2 LTS (Jammy Jellyfish)\"\nVERSION_CODENAME=jammy\nID=ubuntu\nID_LIKE=debian\nHOME_URL=\"https://www.ubuntu.com/\"\nSUPPORT_URL=\"https://help.ubuntu.com/\"\nBUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"\nPRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"\nUBUNTU_CODENAME=jammy\n</code></pre>"},{"location":"linux-commands/part-1/#abbreviation","title":"Abbreviation","text":"<p>pwd \u2192 print working directory</p> <p>cd \u2192 change directory</p> <p>cat \u2192 concatenate</p>"},{"location":"linux-commands/part-1/#commands","title":"Commands","text":"<p>pwd \u2192 To check current working directory</p> <p>ls \u2192 To check the files and folders present in current directory in horizontal view</p> <p>ls -l \u2192 To check the files and folders present in current directory in vertical view</p> <p>ls -la \u2192 To check the files, folders and also hidden files, folders present in current directory in vertical view</p> <p>ll \u2192 To check the files, folders and also hidden files, folders present in current directory in vertical view (Alias of ls -la)</p> <p>cd \u2192 To change the directory</p> <p>cat \u2192 To print the content of a file</p>"},{"location":"linux-commands/part-1/#tasks","title":"Tasks","text":"<ol> <li> <p>Check the current folder name</p> </li> <li> <p>Check the files and folders present in current directory</p> </li> <li> <p>Check the normal files, folders and also hidden files in current directory</p> </li> <li> <p>Go to <code>/etc/ssh</code> folder and verify you are in <code>/etc/ssh</code> folder</p> <p>Check the files present in the folder.</p> </li> <li> <p>Go to <code>/tmp</code> folder and verify you are in <code>/tmp</code> folder</p> <p>Check whether hidden files, folders are present or not</p> </li> <li> <p>Go to <code>/etc</code> folder and verify you are in <code>/etc</code> folder</p> <p>Check <code>os-release</code> file is present or not</p> <p>Print the content of <code>os-release</code> file</p> </li> </ol>"},{"location":"linux-commands/part-2/","title":"Linux commands Part 2","text":""},{"location":"linux-commands/part-2/#free-h","title":"free -h","text":"<p>To check ram/memory usage in server</p> <p>-h \u2192 Human readable format</p> <p>By default <code>free</code> command will show the ram/memory usage in <code>KB</code> (Kilobytes)</p> <pre><code>ubuntu@manikandan:~$ free \n               total        used        free      shared  buff/cache   available\nMem:          987264      334996       85924        1304      566344      472600\nSwap:              0           0           0\n</code></pre> <p><code>free -h</code> will show in MB or GB</p> <pre><code>ubuntu@manikandan:~$ free -h\n               total        used        free      shared  buff/cache   available\nMem:           964Mi       327Mi        82Mi       1.0Mi       553Mi       461Mi\nSwap:             0B          0B          0B\n</code></pre>"},{"location":"linux-commands/part-2/#df-h","title":"df -h","text":"<p>To check disk usage in server</p> <p>-h \u2192 Human readable format</p> <p>By default <code>df</code> command will show the disk usage in <code>KB</code> (Kilobytes)</p> <pre><code>ubuntu@manikandan:~$ df\nFilesystem     1K-blocks    Used Available Use% Mounted on\ntmpfs              98728    1276     97452   2% /run\n/dev/sda1       47143192 7437908  39688900  16% /\ntmpfs             493632       0    493632   0% /dev/shm\ntmpfs               5120       0      5120   0% /run/lock\n/dev/sda15        106858    6182    100677   6% /boot/efi\ntmpfs              98724       4     98720   1% /run/user/1001\n</code></pre> <pre><code>ubuntu@manikandan:~$ df -h\nFilesystem      Size  Used Avail Use% Mounted on\ntmpfs            97M  1.3M   96M   2% /run\n/dev/sda1        45G  7.1G   38G  16% /\ntmpfs           483M     0  483M   0% /dev/shm\ntmpfs           5.0M     0  5.0M   0% /run/lock\n/dev/sda15      105M  6.1M   99M   6% /boot/efi\ntmpfs            97M  4.0K   97M   1% /run/user/1001\n</code></pre>"},{"location":"linux-commands/part-2/#which","title":"which","text":""},{"location":"linux-commands/part-2/#man","title":"man","text":""},{"location":"linux-commands/part-2/#id","title":"id","text":""},{"location":"linux-commands/part-2/#hostname","title":"hostname","text":""},{"location":"linux-commands/part-2/#cd","title":"cd ..","text":""},{"location":"linux-commands/part-2/#cd_1","title":"cd ../..","text":""},{"location":"linux-commands/part-2/#cd_2","title":"cd","text":""},{"location":"linux-commands/part-2/#cd_3","title":"cd ~","text":""},{"location":"linux-commands/part-2/#cd-","title":"cd -","text":""},{"location":"linux-commands/part-3/","title":"Linux commands Part 3","text":""},{"location":"linux-commands/part-3/#mkdir","title":"mkdir","text":""},{"location":"linux-commands/part-3/#mkdir-p","title":"mkdir -p","text":""},{"location":"linux-commands/part-3/#rmdir","title":"rmdir","text":""},{"location":"linux-commands/part-3/#rm-rf","title":"rm -rf","text":""},{"location":"linux-commands/part-3/#touch","title":"touch","text":""},{"location":"linux-commands/part-3/#vi","title":"vi","text":""},{"location":"linux-commands/part-3/#cat","title":"cat","text":"<p>To print/read the content of a file</p> <p>cat file_name</p>"},{"location":"linux-commands/part-3/#tree","title":"tree","text":""},{"location":"linux-commands/part-3/#cp","title":"cp","text":""},{"location":"linux-commands/part-3/#mv","title":"mv","text":""},{"location":"linux-commands/part-4/","title":"Linux commands Part 4","text":""},{"location":"linux-commands/part-4/#sudo-getting-root-permissions","title":"sudo - getting root permissions","text":"<pre><code>ll /etc/passwd\n\nvi /etc/passwd        - Read only file, we cannot write\n\nsudo vi /etc/passwd   - able to write\n</code></pre>"},{"location":"linux-commands/part-4/#user-and-group-permissions-for-files-and-groups","title":"user and group permissions for files and groups","text":"<pre><code>[opc@new-k8s etc]$ ll /etc/os-release\n-rw-r--r--. 1 root root 452 Sep 30  2020 /etc/os-release\n</code></pre>"},{"location":"linux-commands/part-4/#switch-user","title":"Switch user","text":"<p>sudo su</p> <p>su vignesh</p> <p>su - vignesh</p>"},{"location":"linux-commands/part-4/#creating-user","title":"Creating user","text":"<p>For Ubuntu Operating system</p> <p>By default <code>useradd</code> command will create a user but will not create home directory</p> <pre><code>useradd test\n</code></pre> <p>To create home directory pass <code>-s</code> or <code>--create-home</code> argument to <code>useradd</code> command</p> <pre><code>useradd -s test1\n</code></pre>"},{"location":"linux-commands/part-4/#set-password-for-user","title":"Set password for user","text":"<p>passwd test</p>"},{"location":"linux-commands/part-4/#verify-user","title":"Verify user","text":"<p>cat /etc/passwd</p>"},{"location":"linux-commands/part-4/#test-user-trying-to-install-tree-package","title":"Test user trying to install tree package","text":"<p>sudo yum install tree - will not work, because test user dosen't have sudo privileges</p>"},{"location":"linux-commands/part-4/#giving-sudo-permission-to-a-user","title":"Giving Sudo permission to a User","text":"<p>For giving sudo permission to a user, you need to add the user to a respective group based on the operating system</p> <p>For Centos, oracle Linux os</p> <pre><code>usermod -aG wheel test\n</code></pre> <p>Group Name \u2192 wheel</p>"},{"location":"linux-commands/part-4/#for-ubuntu-os","title":"For Ubuntu os","text":"<pre><code>usermod -aG sudo test\n</code></pre>"},{"location":"linux-commands/part-4/#to-verify-whether-user-is-added-to-the-group","title":"To verify whether user is added to the group","text":"<pre><code>id test\n</code></pre> <pre><code>cat /etc/group\n</code></pre>"},{"location":"linux-commands/part-4/#test-user-trying-to-install-tree-package_1","title":"Test user trying to install tree package","text":"<p>sudo yum install tree - will work, because test user now have sudo privileges</p>"},{"location":"linux-commands/part-4/#remove-user-from-group","title":"Remove user from group","text":"<pre><code>gpasswd -d test wheel\n</code></pre> <pre><code>gpasswd -d test wheel\n</code></pre>"},{"location":"linux-commands/part-4/#delete-the-user-without-deleting-any-of-their-files","title":"Delete the user without deleting any of their files","text":"<p>userdel test</p>"},{"location":"linux-commands/part-4/#delete-the-users-home-directory-along-with-the-user-account","title":"Delete the user\u2019s home directory along with the user account","text":"<p>userdel -r test</p>"},{"location":"linux-commands/part-5/","title":"Linux commands Part 5","text":""},{"location":"linux-commands/part-5/#head","title":"head","text":"<p>Prints first 10 lines of a file</p> <p>head fruits.txt</p> <pre><code>[opc@new-k8s ~]$ head fruits.txt\nApple\nApricot\nAvocado\nBanana\nBilberry\nBlackberry\nBlackcurrant\nBlueberry\nBoysenberry\nCurrant\n</code></pre>"},{"location":"linux-commands/part-5/#to-print-first-n-no-of-lines-in-a-file","title":"To print first n no of lines in a file","text":"<p>head -n 15 fruits.txt</p> <pre><code>[opc@new-k8s ~]$ head -n 15 fruits.txt\nApple\nApricot\nAvocado\nBanana\nBilberry\nBlackberry\nBlackcurrant\nBlueberry\nBoysenberry\nCurrant\nCherry\nCherimoya\nChico fruit\nCloudberry\nCoconut\n</code></pre>"},{"location":"linux-commands/part-5/#tail","title":"tail","text":"<p>Prints last 10 lines of a file</p> <p>tail fruits.txt</p> <pre><code>[opc@new-k8s ~]$ tail fruits.txt\nSalak\nSatsuma\nSoursop\nStar fruit\nSolanum quitoense\nStrawberry\nTamarillo\nTamarind\nUgli fruit\nYuzu\n</code></pre>"},{"location":"linux-commands/part-5/#to-print-last-n-no-of-lines-in-a-file","title":"To print last n no of lines in a file","text":"<p>tail -n 15 fruits.txt</p> <pre><code>[opc@new-k8s ~]$ tail -n 15 fruits.txt\nRaspberry\nSalmonberry\nRambutan\nRedcurrant\nSalal berry\nSalak\nSatsuma\nSoursop\nStar fruit\nSolanum quitoense\nStrawberry\nTamarillo\nTamarind\nUgli fruit\nYuzu\n</code></pre>"},{"location":"linux-commands/part-5/#file-permissions","title":"File permissions","text":"<pre><code>----------\ndrwxrwxrwx\n\n- - file\nd - directory\nl - link\nr - read\nw - write\nx - executable\n\n- --- --- ---\n-/d/l  rwx    rwx    rwx\n       user   group  others\n\nr - 4\nw - 2\nx - 1\n</code></pre>"},{"location":"linux-commands/part-5/#giving-only-read-write-permissions-to-user","title":"Giving only read write permissions to user","text":"<p>chmod 600 random.txt</p> <pre><code>[opc@new-k8s ~]$ touch random.txt\n[opc@new-k8s ~]$ ll\ntotal 3072004\n-rw-rw-r--. 1 opc  opc         852 Apr 15 03:15 fruits.txt\ndrwxrwxr-x. 2 opc  opc          25 Nov 26  2021 prometheus\n-rw-rw-r--. 1 opc  opc           0 Apr 15 04:19 random.txt\n-rw-r--r--. 1 root root 3145728000 Jan 11  2022 swapfile\ndrwxrwxr-x. 4 opc  opc         100 Apr 13 12:46 test\n[opc@new-k8s ~]$ chmod 600 random.txt\n[opc@new-k8s ~]$ ll\ntotal 3072004\n-rw-rw-r--. 1 opc  opc         852 Apr 15 03:15 fruits.txt\ndrwxrwxr-x. 2 opc  opc          25 Nov 26  2021 prometheus\n-rw-------. 1 opc  opc           0 Apr 15 04:19 random.txt\n-rw-r--r--. 1 root root 3145728000 Jan 11  2022 swapfile\ndrwxrwxr-x. 4 opc  opc         100 Apr 13 12:46 test\n</code></pre>"},{"location":"linux-commands/part-5/#giving-only-read-write-permissions-to-user_1","title":"Giving only read write permissions to user","text":"<p>chmod 600 random.txt</p> <pre><code>[opc@new-k8s ~]$ ll\ntotal 3072004\n-rw-rw-r--. 1 opc  opc         852 Apr 15 03:15 fruits.txt\ndrwxrwxr-x. 2 opc  opc          25 Nov 26  2021 prometheus\n-rw-------. 1 opc  opc           0 Apr 15 04:19 random.txt\n-rw-r--r--. 1 root root 3145728000 Jan 11  2022 swapfile\ndrwxrwxr-x. 4 opc  opc         100 Apr 13 12:46 test\n[opc@new-k8s ~]$ chmod 660 random.txt\n[opc@new-k8s ~]$ ll\ntotal 3072004\n-rw-rw-r--. 1 opc  opc         852 Apr 15 03:15 fruits.txt\ndrwxrwxr-x. 2 opc  opc          25 Nov 26  2021 prometheus\n-rw-rw----. 1 opc  opc           0 Apr 15 04:19 random.txt\n-rw-r--r--. 1 root root 3145728000 Jan 11  2022 swapfile\ndrwxrwxr-x. 4 opc  opc         100 Apr 13 12:46 test\n</code></pre>"},{"location":"linux-commands/part-5/#chnaging-the-group_name-of-a-file","title":"Chnaging the group_name of a file","text":"<p>chown opc:vignesh random.txt</p> <pre><code>[opc@new-k8s ~]$ ll\ntotal 3072004\n-rw-rw-r--. 1 opc  opc         852 Apr 15 03:15 fruits.txt\ndrwxrwxr-x. 2 opc  opc          25 Nov 26  2021 prometheus\n-rw-rw----. 1 opc  opc           0 Apr 15 04:19 random.txt\n-rw-r--r--. 1 root root 3145728000 Jan 11  2022 swapfile\ndrwxrwxr-x. 4 opc  opc         100 Apr 13 12:46 test\n[opc@new-k8s ~]$ sudo chown opc:vignesh random.txt\n[opc@new-k8s ~]$ ll\ntotal 3072004\n-rw-rw-r--. 1 opc  opc            852 Apr 15 03:15 fruits.txt\ndrwxrwxr-x. 2 opc  opc             25 Nov 26  2021 prometheus\n-rw-rw----. 1 opc  vignesh          0 Apr 15 04:19 random.txt\n-rw-r--r--. 1 root root    3145728000 Jan 11  2022 swapfile\ndrwxrwxr-x. 4 opc  opc            100 Apr 13 12:46 test\n</code></pre>"},{"location":"linux-commands/part-5/#changing-the-group_name-of-a-folder-and-all-of-its-files-inside-it","title":"Changing the group_name of a folder and all of its files inside it","text":"<pre><code>[opc@new-k8s ~]$ pwd\n/home/opc\n[opc@new-k8s ~]$ ll\ntotal 3072004\n-rw-rw-r--. 1 opc  opc            852 Apr 15 03:15 fruits.txt\ndrwxrwxr-x. 2 opc  opc             25 Nov 26  2021 prometheus\n-rw-rw----. 1 opc  vignesh          0 Apr 15 04:19 random.txt\n-rw-r--r--. 1 root root    3145728000 Jan 11  2022 swapfile\ndrwxrwxr-x. 4 opc  opc            100 Apr 13 12:46 test\n[opc@new-k8s ~]$ cd test\n[opc@new-k8s test]$ ll\ntotal 8\ndrwxrwxr-x. 2 opc opc 27 Mar 17 14:03 client\n-rw-rw-r--. 1 opc opc 77 Apr 12 12:26 Dockerfile\n-rw-rw-r--. 1 opc opc  0 Apr 12 12:54 hello.txt\n-rw-rw-r--. 1 opc opc 23 Apr 12 12:56 mani.txt\n-rw-rw-r--. 1 opc opc  0 Mar 17 14:03 server\ndrwxrwxr-x. 3 opc opc 18 Apr 13 12:46 vignesh\n[opc@new-k8s test]$ cd ..\n[opc@new-k8s ~]$ sudo chown -R opc:vignesh test/\n[opc@new-k8s ~]$ ll\ntotal 3072004\n-rw-rw-r--. 1 opc  opc            852 Apr 15 03:15 fruits.txt\ndrwxrwxr-x. 2 opc  opc             25 Nov 26  2021 prometheus\n-rw-rw----. 1 opc  vignesh          0 Apr 15 04:19 random.txt\n-rw-r--r--. 1 root root    3145728000 Jan 11  2022 swapfile\ndrwxrwxr-x. 4 opc  vignesh        100 Apr 13 12:46 test\n[opc@new-k8s ~]$ cd test/\n[opc@new-k8s test]$ ll\ntotal 8\ndrwxrwxr-x. 2 opc vignesh 27 Mar 17 14:03 client\n-rw-rw-r--. 1 opc vignesh 77 Apr 12 12:26 Dockerfile\n-rw-rw-r--. 1 opc vignesh  0 Apr 12 12:54 hello.txt\n-rw-rw-r--. 1 opc vignesh 23 Apr 12 12:56 mani.txt\n-rw-rw-r--. 1 opc vignesh  0 Mar 17 14:03 server\ndrwxrwxr-x. 3 opc vignesh 18 Apr 13 12:46 vignesh\n</code></pre>"},{"location":"linux-commands/part-5/#to-check-date-and-time","title":"To check date and time","text":"<pre><code>[opc@new-k8s test]$ date\nSat Apr 15 04:39:46 GMT 2023\n</code></pre>"},{"location":"linux-commands/part-5/#to-print-all-environment-variables-using-env-command","title":"To print all environment variables using env command","text":"<pre><code>[opc@new-k8s test]$ env\nXDG_SESSION_ID=172420\nHOSTNAME=new-k8s\nSELINUX_ROLE_REQUESTED=\nTERM=xterm\nSHELL=/bin/bash\nHISTSIZE=1000\nSSH_CLIENT=182.55.51.150 54522 22\nSELINUX_USE_CURRENT_RANGE=\nOLDPWD=/home/opc\nSSH_TTY=/dev/pts/0\nUSER=opc\nLS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.axa=01;36:*.oga=01;36:*.spx=01;36:*.xspf=01;36:\nMAIL=/var/spool/mail/opc\nPATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/opc/.local/bin:/home/opc/bin\nPWD=/home/opc/test\nLANG=en_US.UTF-8\nSELINUX_LEVEL_REQUESTED=\nHISTCONTROL=ignoredups\nSHLVL=1\nHOME=/home/opc\nLOGNAME=opc\nSSH_CONNECTION=182.55.51.150 54522 10.0.1.150 22\nLESSOPEN=||/usr/bin/lesspipe.sh %s\nXDG_RUNTIME_DIR=/run/user/1000\n_=/usr/bin/env\n</code></pre>"},{"location":"linux-commands/part-5/#to-print-all-environment-variables-using-printenv-command","title":"To print all environment variables using printenv command","text":"<pre><code>XDG_SESSION_ID=172420\nHOSTNAME=new-k8s\nSELINUX_ROLE_REQUESTED=\nTERM=xterm\nSHELL=/bin/bash\nHISTSIZE=1000\nSSH_CLIENT=182.55.51.150 54522 22\nSELINUX_USE_CURRENT_RANGE=\nOLDPWD=/home/opc\nSSH_TTY=/dev/pts/0\nUSER=opc\nLS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.axa=01;36:*.oga=01;36:*.spx=01;36:*.xspf=01;36:\nMAIL=/var/spool/mail/opc\nPATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/opc/.local/bin:/home/opc/bin\nPWD=/home/opc/test\nLANG=en_US.UTF-8\nSELINUX_LEVEL_REQUESTED=\nHISTCONTROL=ignoredups\nSHLVL=1\nHOME=/home/opc\nLOGNAME=opc\nSSH_CONNECTION=182.55.51.150 54522 10.0.1.150 22\nLESSOPEN=||/usr/bin/lesspipe.sh %s\nXDG_RUNTIME_DIR=/run/user/1000\n_=/usr/bin/printenv\n</code></pre>"},{"location":"linux-commands/part-5/#to-print-only-one-variable","title":"To print only one variable","text":"<pre><code>[opc@new-k8s test]$ echo $PATH\n/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/opc/.local/bin:/home/opc/bin\n</code></pre>"},{"location":"linux-commands/part-6/","title":"Linux commands Part 6","text":""},{"location":"linux-commands/part-6/#shell-varibales","title":"Shell varibales","text":"<p>Shell variables means only accessible within the shell script</p> <pre><code>[opc@new-k8s ~]$ clear\n[opc@new-k8s ~]$ NAME=\"vignesh\"\n[opc@new-k8s ~]$ echo $NAME\nvignesh\n[opc@new-k8s ~]$ printenv NAME\n\nprintenv NAME   -- dosen't show anything, since its not a environment variable\n\nEven in env, printenv command the NAME variable will not been shown\n</code></pre>"},{"location":"linux-commands/part-6/#creating-environment-variable","title":"Creating Environment variable","text":"<p>Environment Variables are accesible to child process also</p> <pre><code>[opc@new-k8s ~]$ export NEW_NAME=\"Raghav\"\n[opc@new-k8s ~]$ echo $NEW_NAME\nMurugan\n[opc@new-k8s ~]$ printenv NEW_NAME\nRaghav\n[opc@new-k8s ~]$ env\nXDG_SESSION_ID=172502\nHOSTNAME=new-k8s\nSELINUX_ROLE_REQUESTED=\nTERM=xterm\nSHELL=/bin/bash\nHISTSIZE=1000\nSELINUX_USE_CURRENT_RANGE=\nSSH_TTY=/dev/pts/0\nUSER=opc\nMAIL=/var/spool/mail/opc\nPATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/opc/.local/bin:/home/opc/bin\nPWD=/home/opc\nLANG=en_US.UTF-8\nNEW_NAME=Raghav\nSELINUX_LEVEL_REQUESTED=\nHISTCONTROL=ignoredups\nSHLVL=1\n</code></pre>"},{"location":"linux-commands/part-6/#environment-variable-path","title":"Environment variable - PATH","text":"<p>Most of the linux commands can be executed from any path/directory, since the command paths are added to PATH environment variable</p> <pre><code>[opc@new-k8s ~]$ echo $PATH\n/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/opc/.local/bin:/home/opc/bin\n</code></pre>"},{"location":"linux-commands/part-6/#creating-small-shell-script-programcomamnd-and-exporting-that-path-to-path-variable","title":"Creating small shell script program/comamnd and exporting that path to PATH variable","text":"<p>Shell script to print the user name, hostname, date, present working directory and the files in that directory (Filename - myinfo)</p> <pre><code>#!/bin/bash\n\necho $USER\nhostname\ndate\npwd\nls -l\n</code></pre> <pre><code>[opc@new-k8s ~]$ ll\ntotal 3072008\n-rw-rw-r--. 1 opc  opc            852 Apr 15 03:15 fruits.txt\n-rw-rw-r--. 1 opc  opc             48 Apr 15 10:56 myinfo\ndrwxrwxr-x. 2 opc  opc             25 Nov 26  2021 prometheus\n-rw-rw----. 1 opc  vignesh          0 Apr 15 04:19 random.txt\n-rw-r--r--. 1 root root    3145728000 Jan 11  2022 swapfile\ndrwxrwxr-x. 4 opc  vignesh        100 Apr 13 12:46 test\n[opc@new-k8s ~]$ cat myinfo\n#!/bin/bash\n\necho $USER\nhostname\ndate\npwd\nls -l\n[opc@new-k8s ~]$ chmod +x myinfo\n[opc@new-k8s ~]$ ll\ntotal 3072008\n-rw-rw-r--. 1 opc  opc            852 Apr 15 03:15 fruits.txt\n-rwxrwxr-x. 1 opc  opc             48 Apr 15 10:56 myinfo\ndrwxrwxr-x. 2 opc  opc             25 Nov 26  2021 prometheus\n-rw-rw----. 1 opc  vignesh          0 Apr 15 04:19 random.txt\n-rw-r--r--. 1 root root    3145728000 Jan 11  2022 swapfile\ndrwxrwxr-x. 4 opc  vignesh        100 Apr 13 12:46 test\n[opc@new-k8s ~]$ myinfo\nbash: myinfo: command not found\n[opc@new-k8s ~]$ ./myinfo\nopc\nnew-k8s\nSat Apr 15 10:56:49 GMT 2023\n/home/opc\ntotal 3072008\n-rw-rw-r--. 1 opc  opc            852 Apr 15 03:15 fruits.txt\n-rwxrwxr-x. 1 opc  opc             48 Apr 15 10:56 myinfo\ndrwxrwxr-x. 2 opc  opc             25 Nov 26  2021 prometheus\n-rw-rw----. 1 opc  vignesh          0 Apr 15 04:19 random.txt\n-rw-r--r--. 1 root root    3145728000 Jan 11  2022 swapfile\ndrwxrwxr-x. 4 opc  vignesh        100 Apr 13 12:46 test\n[opc@new-k8s ~]$ pwd\n/home/opc\n[opc@new-k8s ~]$ echo $PATH\n/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/opc/.local/bin:/home/opc/bin\n[opc@new-k8s ~]$ export PATH=$PATH:/home/opc\n[opc@new-k8s ~]$\n[opc@new-k8s ~]$\n[opc@new-k8s ~]$ myinfo\nopc\nnew-k8s\nSat Apr 15 10:57:54 GMT 2023\n/home/opc\ntotal 3072008\n-rw-rw-r--. 1 opc  opc            852 Apr 15 03:15 fruits.txt\n-rwxrwxr-x. 1 opc  opc             48 Apr 15 10:56 myinfo\ndrwxrwxr-x. 2 opc  opc             25 Nov 26  2021 prometheus\n-rw-rw----. 1 opc  vignesh          0 Apr 15 04:19 random.txt\n-rw-r--r--. 1 root root    3145728000 Jan 11  2022 swapfile\ndrwxrwxr-x. 4 opc  vignesh        100 Apr 13 12:46 test\n[opc@new-k8s ~]$\n[opc@new-k8s ~]$\n[opc@new-k8s ~]$ cd /tmp\n[opc@new-k8s tmp]$ pwd\n/tmp\n[opc@new-k8s tmp]$ ll\ntotal 4\n-rw-------. 1 root root 1097 Apr 15 10:02 dhclient-exit-hooksRZi.log\ndrwx------. 3 root root   17 Jul  4  2021 systemd-private-c60b800098604975be26dbbb3215bd47-chronyd.service-ZzaKpF\ndrwx------. 3 root root   17 Mar 27 20:01 systemd-private-c60b800098604975be26dbbb3215bd47-unified-monitoring-agent.service-561YDH\n-rw-rw-r--. 1 opc  opc     0 Apr 12 12:30 vignesh.txt\n[opc@new-k8s tmp]$ myinfo\nopc\nnew-k8s\nSat Apr 15 10:58:09 GMT 2023\n/tmp\ntotal 4\n-rw-------. 1 root root 1097 Apr 15 10:02 dhclient-exit-hooksRZi.log\ndrwx------. 3 root root   17 Jul  4  2021 systemd-private-c60b800098604975be26dbbb3215bd47-chronyd.service-ZzaKpF\ndrwx------. 3 root root   17 Mar 27 20:01 systemd-private-c60b800098604975be26dbbb3215bd47-unified-monitoring-agent.service-561YDH\n-rw-rw-r--. 1 opc  opc     0 Apr 12 12:30 vignesh.txt\n</code></pre>"},{"location":"linux-commands/part-6/#alias-command","title":"alias command","text":"<p>Creating shortcut commands</p> <p>Creating command \"myls\" which will print date and show the files</p> <pre><code>[opc@new-k8s tmp]$ alias myls=\"date &amp;&amp; ls\"\n[opc@new-k8s tmp]$ myls\nSat Apr 15 11:01:37 GMT 2023\ndhclient-exit-hooksRZi.log                                               systemd-private-c60b800098604975be26dbbb3215bd47-unified-monitoring-agent.service-561YDH\nsystemd-private-c60b800098604975be26dbbb3215bd47-chronyd.service-ZzaKpF  vignesh.txt\n</code></pre> <p>Manually exported environment variables and alias command will be gone, once we open new terminal/session</p>"},{"location":"linux-commands/part-6/#how-to-persist-the-environment-variable-and-alias-across-terminalsession","title":"How to persist the environment variable and alias across terminal/session","text":"<p>.bashrc file in user home directory will be executed first, when we open the terminal/session</p> <p>By placing all these commands in .bashrc file, will execute those commands when we open new terminal/session</p> <p>.bashrc file</p> <pre><code>[opc@new-k8s ~]$ clear\n[opc@new-k8s ~]$ pwd\n/home/opc\n[opc@new-k8s ~]$ ls -lart\ntotal 3072064\n-rw-r--r--.  1 opc  opc            193 Nov 22  2019 .bash_profile\n-rw-r--r--.  1 opc  opc             18 Nov 22  2019 .bash_logout\n-rw-r--r--.  1 opc  opc            172 Apr  2  2020 .kshrc\ndrwxr-xr-x.  3 opc  docker          33 Jul  4  2021 .kube\ndrwxrw----.  3 opc  opc             19 Jul  4  2021 .pki\ndrwxrwxr-x.  4 opc  opc             30 Nov 26  2021 .config\ndrwxrwxr-x.  4 opc  opc             30 Nov 26  2021 .cache\ndrwxrwxr-x.  2 opc  opc             25 Nov 26  2021 prometheus\n-rw-r--r--.  1 root root    3145728000 Jan 11  2022 swapfile\ndrwxrwxr-x.  4 opc  opc             82 Jan 11  2022 .docker\ndrwx------.  2 opc  opc             80 May 26  2022 .ssh\ndrwxr-xr-x.  4 root root            32 Apr 13 12:25 ..\ndrwxrwxr-x.  4 opc  vignesh        100 Apr 13 12:46 test\n-rw-rw-r--.  1 opc  opc            852 Apr 15 03:15 fruits.txt\n-rw-rw----.  1 opc  vignesh          0 Apr 15 04:19 random.txt\n-rwxrwxr-x.  1 opc  opc             48 Apr 15 10:56 myinfo\n-rw-r--r--.  1 opc  opc            285 Apr 15 11:19 .bashrc\n-rw-------.  1 opc  opc           6596 Apr 15 11:19 .viminfo\ndrwxr-x---. 10 opc  opc           4096 Apr 15 11:19 .\n-rw-------.  1 opc  opc          26674 Apr 15 11:19 .bash_history\n[opc@new-k8s ~]$ cat .bashrc\n# .bashrc\n\n# Source global definitions\nif [ -f /etc/bashrc ]; then\n        . /etc/bashrc\nfi\n\n# Uncomment the following line if you don't like systemctl's auto-paging feature:\n# export SYSTEMD_PAGER=\n\n# User specific aliases and functions\n\nexport NEW_NAME=\"Raghav\"\nalias myls=\"date &amp;&amp; ls -l\"\n[opc@new-k8s ~]$ myls\nSat Apr 15 11:21:19 GMT 2023\ntotal 3072008\n-rw-rw-r--. 1 opc  opc            852 Apr 15 03:15 fruits.txt\n-rwxrwxr-x. 1 opc  opc             48 Apr 15 10:56 myinfo\ndrwxrwxr-x. 2 opc  opc             25 Nov 26  2021 prometheus\n-rw-rw----. 1 opc  vignesh          0 Apr 15 04:19 random.txt\n-rw-r--r--. 1 root root    3145728000 Jan 11  2022 swapfile\ndrwxrwxr-x. 4 opc  vignesh        100 Apr 13 12:46 test\n[opc@new-k8s ~]$ echo $NEW_NAME\nRaghav\n</code></pre>"},{"location":"linux-commands/part-6/#package-manager","title":"Package manager","text":"<p>Redhat/Centos/racle inux/Amazon Linux - yum</p> <p>Ubuntu/Debian - apt</p> <p>Alpine Linux - apk</p>"},{"location":"linux-commands/part-6/#installing-tree-package-using-yum-in-oracle-linux-79","title":"Installing tree package using yum in oracle Linux 7.9","text":"<pre><code>[opc@new-k8s ~]$ sudo yum install -y tree\nLoaded plugins: langpacks, ulninfo\nkubernetes                                                                                                                                                 937/937\nResolving Dependencies\n--&gt; Running transaction check\n---&gt; Package tree.aarch64 0:1.6.0-10.el7 will be installed\n--&gt; Finished Dependency Resolution\n\nDependencies Resolved\n\n===================================================================================================================================================================\n Package                           Arch                                 Version                                      Repository                               Size\n===================================================================================================================================================================\nInstalling:\n tree                              aarch64                              1.6.0-10.el7                                 ol7_latest                               45 k\n\nTransaction Summary\n===================================================================================================================================================================\nInstall  1 Package\n\nTotal download size: 45 k\nInstalled size: 95 k\nDownloading packages:\ntree-1.6.0-10.el7.aarch64.rpm                                                                                                               |  45 kB  00:00:00\nRunning transaction check\nRunning transaction test\nTransaction test succeeded\nRunning transaction\n  Installing : tree-1.6.0-10.el7.aarch64                                                                                                                       1/1\n  Verifying  : tree-1.6.0-10.el7.aarch64                                                                                                                       1/1\n\nInstalled:\n  tree.aarch64 0:1.6.0-10.el7\n\nComplete!\n</code></pre>"},{"location":"linux-commands/part-6/#removing-tree-package-using-yum-in-oracle-linux-79","title":"Removing tree package using yum in oracle Linux 7.9","text":"<pre><code>[opc@new-k8s ~]$ sudo yum remove -y tree\nLoaded plugins: langpacks, ulninfo\nResolving Dependencies\n--&gt; Running transaction check\n---&gt; Package tree.aarch64 0:1.6.0-10.el7 will be erased\n--&gt; Finished Dependency Resolution\n\nDependencies Resolved\n\n===================================================================================================================================================================\n Package                           Arch                                 Version                                     Repository                                Size\n===================================================================================================================================================================\nRemoving:\n tree                              aarch64                              1.6.0-10.el7                                @ol7_latest                               95 k\n\nTransaction Summary\n===================================================================================================================================================================\nRemove  1 Package\n\nInstalled size: 95 k\nDownloading packages:\nRunning transaction check\nRunning transaction test\nTransaction test succeeded\nRunning transaction\n  Erasing    : tree-1.6.0-10.el7.aarch64                                                                                                                       1/1\n  Verifying  : tree-1.6.0-10.el7.aarch64                                                                                                                       1/1\n\nRemoved:\n  tree.aarch64 0:1.6.0-10.el7\n\nComplete!\n[opc@new-k8s ~]$ tree\nbash: tree: command not found\n</code></pre>"},{"location":"linux-commands/part-6/#installing-tree-package-using-apt-in-ubuntu-2204","title":"Installing tree package using apt in Ubuntu 22.04","text":"<pre><code>root@456f7ef57784:/# apt install tree\nReading package lists... Done\nBuilding dependency tree... Done\nReading state information... Done\nThe following NEW packages will be installed:\n  tree\n0 upgraded, 1 newly installed, 0 to remove and 2 not upgraded.\nNeed to get 47.2 kB of archives.\nAfter this operation, 108 kB of additional disk space will be used.\nGet:1 http://ports.ubuntu.com/ubuntu-ports jammy/universe arm64 tree arm64 2.0.2-1 [47.2 kB]\nFetched 47.2 kB in 1s (79.6 kB/s)\ndebconf: delaying package configuration, since apt-utils is not installed\nSelecting previously unselected package tree.\n(Reading database ... 4389 files and directories currently installed.)\nPreparing to unpack .../tree_2.0.2-1_arm64.deb ...\nUnpacking tree (2.0.2-1) ...\nSetting up tree (2.0.2-1) ...\nroot@456f7ef57784:/# tree --version\ntree v2.0.2 (c) 1996 - 2022 by Steve Baker, Thomas Moore, Francesc Rocher, Florian Sesser, Kyosuke Tokoro\n</code></pre>"},{"location":"linux-commands/part-6/#removing-tree-package-using-apt-in-ubuntu-2204","title":"Removing tree package using apt in Ubuntu 22.04","text":"<pre><code>root@456f7ef57784:/# apt remove -y tree\nReading package lists... Done\nBuilding dependency tree... Done\nReading state information... Done\nThe following packages will be REMOVED:\n  tree\n0 upgraded, 0 newly installed, 1 to remove and 2 not upgraded.\nAfter this operation, 108 kB disk space will be freed.\n(Reading database ... 4397 files and directories currently installed.)\nRemoving tree (2.0.2-1) ...\nroot@456f7ef57784:/# tree\nbash: /usr/bin/tree: No such file or directory\n</code></pre>"},{"location":"linux-commands/part-6/#installing-tree-package-using-apk-in-alpine-linux-3173","title":"Installing tree package using apk in Alpine Linux 3.17.3","text":"<pre><code>/ # tree\nsh: tree: not found\n/ # apk add tree\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/main/aarch64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/community/aarch64/APKINDEX.tar.gz\n(1/1) Installing tree (2.0.4-r0)\nExecuting busybox-1.35.0-r29.trigger\nOK: 8 MiB in 16 packages\n/ # tree --version\ntree v2.0.4 (c) 1996 - 2022 by Steve Baker, Thomas Moore, Francesc Rocher, Florian Sesser, Kyosuke Tokoro\n</code></pre>"},{"location":"linux-commands/part-6/#removing-tree-package-using-apk-in-alpine-linux-3173","title":"Removing tree package using apk in Alpine Linux 3.17.3","text":"<pre><code>/ # apk del tree\n(1/1) Purging tree (2.0.4-r0)\nExecuting busybox-1.35.0-r29.trigger\nOK: 7 MiB in 15 packages\n/ # tree\nsh: tree: not found\n</code></pre>"},{"location":"linux-commands/part-7/","title":"Linux commands Part 7","text":""},{"location":"linux-commands/part-7/#types-of-shell","title":"Types of shell","text":"<ul> <li> <p>sh</p> </li> <li> <p>bash (Bourne Again Shell)</p> </li> <li> <p>zsh</p> </li> <li> <p>ksh (Korn Shell)</p> </li> <li> <p>csh</p> </li> </ul> <p>Reference: https://www.shiksha.com/online-courses/articles/introduction-to-types-of-shell/</p>"},{"location":"linux-commands/part-7/#redirection","title":"Redirection","text":"<pre><code>&gt;  content override the file content, If file is already having the content\n&gt;&gt; Will append the content to the existing content in the file\n</code></pre> <p>In Both case, if the file is not present it will create a file and write the content to the file</p> <p>By default echo command prints the output to screen. But if we redirection arrows it can store to files</p> <pre><code>[opc@new-k8s ~]$ mkdir redirection\n[opc@new-k8s ~]$ cd redirection/\n[opc@new-k8s redirection]$ pwd\n/home/opc/redirection\n[opc@new-k8s redirection]$ ll\ntotal 0\n[opc@new-k8s redirection]$ echo \"hello devops\" &gt; hello.txt\n[opc@new-k8s redirection]$ ll\ntotal 4\n-rw-rw-r--. 1 opc opc 13 Apr 17 14:11 hello.txt\n[opc@new-k8s redirection]$ cat hello.txt\nhello devops\n[opc@new-k8s redirection]$ echo \"I am learning devops\" &gt; hello.txt\n[opc@new-k8s redirection]$ ll\ntotal 4\n-rw-rw-r--. 1 opc opc 21 Apr 17 14:11 hello.txt\n[opc@new-k8s redirection]$ cat hello.txt\nI am learning devops\n</code></pre> <pre><code>[opc@new-k8s redirection]$ pwd\n/home/opc/redirection\n[opc@new-k8s redirection]$ ll\ntotal 0\n[opc@new-k8s redirection]$ echo \"I eat fruits daily\" &gt;&gt; double-arrow.txt\n[opc@new-k8s redirection]$ ll\ntotal 4\n-rw-rw-r--. 1 opc opc 19 Apr 17 14:13 double-arrow.txt\n[opc@new-k8s redirection]$ cat double-arrow.txt\nI eat fruits daily\n[opc@new-k8s redirection]$ echo \"I love banana\" &gt;&gt; double-arrow.txt\n[opc@new-k8s redirection]$ echo \"I also like apples\" &gt;&gt; double-arrow.txt\n[opc@new-k8s redirection]$ ll\ntotal 4\n-rw-rw-r--. 1 opc opc 52 Apr 17 14:13 double-arrow.txt\n[opc@new-k8s redirection]$ cat double-arrow.txt\nI eat fruits daily\nI love banana\nI also like apples\n</code></pre>"},{"location":"linux-commands/part-7/#wget","title":"wget","text":"<p>wget command is used to dowload some binary or big files eg zip, tar, tar.gz files</p> <pre><code>[opc@new-k8s ~]$ pwd\n/home/opc\n[opc@new-k8s ~]$ mkdir wget-examples\n[opc@new-k8s ~]$ cd wget-examples/\n[opc@new-k8s wget-examples]$ pwd\n/home/opc/wget-examples\n[opc@new-k8s wget-examples]$ ll\ntotal 0\n[opc@new-k8s wget-examples]$ wget https://dlcdn.apache.org/maven/maven-3/3.9.1/binaries/apache-maven-3.9.1-bin.zip\n--2023-04-17 13:27:27-- https://dlcdn.apache.org/maven/maven-3/3.9.1/binaries/apache-maven-3.9.1-bin.zip\nResolving dlcdn.apache.org (dlcdn.apache.org)... 151.101.2.132, 2a04:4e42::644\nConnecting to dlcdn.apache.org (dlcdn.apache.org)|151.101.2.132|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 9143026 (8.7M) [application/zip]\nSaving to: \u2018apache-maven-3.9.1-bin.zip\u2019\n\n100%[=========================================================================================================================&gt;] 9,143,026   24.9MB/s   in 0.4s\n\n2023-04-17 13:27:28 (24.9 MB/s) - \u2018apache-maven-3.9.1-bin.zip\u2019 saved [9143026/9143026]\n\n[opc@new-k8s wget-examples]$ ll\ntotal 8932\n-rw-rw-r--. 1 opc opc 9143026 Mar 15 10:00 apache-maven-3.9.1-bin.zip\n</code></pre>"},{"location":"linux-commands/part-7/#wget-command-without-showing-the-progress-bar","title":"wget command without showing the progress bar","text":"<p>-q or --quiet \u2192 quit mode, will not show any logs or progress bar</p> <pre><code>[opc@new-k8s wget-examples]$ wget -q https://dlcdn.apache.org/maven/maven-3/3.9.1/binaries/apache-maven-3.9.1-bin.tar.gz\n[opc@new-k8s wget-examples]$ ll -h\ntotal 18M\n-rw-rw-r--. 1 opc opc 8.7M Mar 15 10:00 apache-maven-3.9.1-bin.tar.gz\n-rw-rw-r--. 1 opc opc 8.8M Mar 15 10:00 apache-maven-3.9.1-bin.zip\n</code></pre>"},{"location":"linux-commands/part-7/#curl-command-to-download-file","title":"curl command to download file","text":"<pre><code>[opc@new-k8s ~]$ mkdir curl-examples\n[opc@new-k8s ~]$ cd curl-examples/\n[opc@new-k8s curl-examples]$ pwd\n/home/opc/curl-examples\n[opc@new-k8s curl-examples]$ ll\ntotal 0\n[opc@new-k8s curl-examples]$ curl https://dlcdn.apache.org/maven/maven-3/3.9.1/binaries/apache-maven-3.9.1-bin.zip -o apache-maven-3.9.1-bin.zip\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 8928k  100 8928k    0     0  13.4M      0 --:--:-- --:--:-- --:--:-- 13.4M\n[opc@new-k8s curl-examples]$ ll\ntotal 8932\n-rw-rw-r--. 1 opc opc 9143026 Apr 17 13:35 apache-maven-3.9.1-bin.zip\n</code></pre>"},{"location":"linux-commands/part-7/#curl-command-to-download-file-without-showing-progress-bar","title":"curl command to download file without showing progress bar","text":"<p>-s or --silent \u2192 Will not show the logs or progress bar</p> <pre><code>[opc@new-k8s curl-examples]$ curl -s https://dlcdn.apache.org/maven/maven-3/3.9.1/source/apache-maven-3.9.1-src.tar.gz -o apache-maven-3.9.1-src.tar.gz\n[opc@new-k8s curl-examples]$ ll -h\ntotal 12M\n-rw-rw-r--. 1 opc opc 8.8M Apr 17 13:35 apache-maven-3.9.1-bin.zip\n-rw-rw-r--. 1 opc opc 2.7M Apr 17 13:38 apache-maven-3.9.1-src.tar.gz\n</code></pre>"},{"location":"linux-commands/part-7/#how-to-unzip-the-zip-file","title":"How to unzip the zip file","text":"<p>By default unzip command will unzip the zip package to the current directory</p> <pre><code>[opc@new-k8s curl-examples]$ ll\ntotal 11652\n-rw-rw-r--. 1 opc opc 9143026 Apr 17 13:35 apache-maven-3.9.1-bin.zip\n-rw-rw-r--. 1 opc opc 2784624 Apr 17 13:38 apache-maven-3.9.1-src.tar.gz\n[opc@new-k8s curl-examples]$ pwd\n/home/opc/curl-examples\n[opc@new-k8s curl-examples]$ unzip apache-maven-3.9.1-bin.zip\nArchive:  apache-maven-3.9.1-bin.zip\n   creating: apache-maven-3.9.1/\n   creating: apache-maven-3.9.1/lib/\n   creating: apache-maven-3.9.1/boot/\n   creating: apache-maven-3.9.1/lib/jansi-native/\n   creating: apache-maven-3.9.1/lib/jansi-native/Windows/\n   creating: apache-maven-3.9.1/lib/jansi-native/Windows/x86/\n   creating: apache-maven-3.9.1/lib/jansi-native/Windows/x86_64/\n   creating: apache-maven-3.9.1/bin/\n   creating: apache-maven-3.9.1/conf/\n   creating: apache-maven-3.9.1/conf/logging/\n   creating: apache-maven-3.9.1/lib/ext/\n   creating: apache-maven-3.9.1/lib/ext/hazelcast/\n   creating: apache-maven-3.9.1/lib/ext/redisson/\n  inflating: apache-maven-3.9.1/README.txt\n  inflating: apache-maven-3.9.1/LICENSE\n  inflating: apache-maven-3.9.1/NOTICE\n  inflating: apache-maven-3.9.1/lib/aopalliance.license\n  inflating: apache-maven-3.9.1/lib/commons-cli.license\n  inflating: apache-maven-3.9.1/lib/commons-codec.license\n  inflating: apache-maven-3.9.1/lib/commons-lang3.license\n  inflating: apache-maven-3.9.1/lib/failureaccess.license\n  inflating: apache-maven-3.9.1/lib/guava.license\n  inflating: apache-maven-3.9.1/lib/guice.license\n  inflating: apache-maven-3.9.1/lib/httpclient.license\n  inflating: apache-maven-3.9.1/lib/httpcore.license\n  inflating: apache-maven-3.9.1/lib/jansi.license\n  inflating: apache-maven-3.9.1/lib/javax.annotation-api.license\n  inflating: apache-maven-3.9.1/lib/javax.inject.license\n  inflating: apache-maven-3.9.1/lib/jcl-over-slf4j.license\n  inflating: apache-maven-3.9.1/lib/org.eclipse.sisu.inject.license\n  inflating: apache-maven-3.9.1/lib/org.eclipse.sisu.plexus.license\n  inflating: apache-maven-3.9.1/lib/plexus-cipher.license\n  inflating: apache-maven-3.9.1/lib/plexus-component-annotations.license\n  inflating: apache-maven-3.9.1/lib/plexus-interpolation.license\n  inflating: apache-maven-3.9.1/lib/plexus-sec-dispatcher.license\n  inflating: apache-maven-3.9.1/lib/plexus-utils.license\n  inflating: apache-maven-3.9.1/lib/slf4j-api.license\n  inflating: apache-maven-3.9.1/boot/plexus-classworlds.license\n  inflating: apache-maven-3.9.1/lib/jansi-native/Windows/x86/jansi.dll\n  inflating: apache-maven-3.9.1/lib/jansi-native/Windows/x86_64/jansi.dll\n  inflating: apache-maven-3.9.1/bin/m2.conf\n  inflating: apache-maven-3.9.1/bin/mvn.cmd\n  inflating: apache-maven-3.9.1/bin/mvnDebug.cmd\n  inflating: apache-maven-3.9.1/bin/mvn\n  inflating: apache-maven-3.9.1/bin/mvnDebug\n  inflating: apache-maven-3.9.1/bin/mvnyjp\n  inflating: apache-maven-3.9.1/conf/logging/simplelogger.properties\n  inflating: apache-maven-3.9.1/conf/settings.xml\n  inflating: apache-maven-3.9.1/conf/toolchains.xml\n  inflating: apache-maven-3.9.1/lib/ext/README.txt\n  inflating: apache-maven-3.9.1/lib/ext/hazelcast/README.txt\n  inflating: apache-maven-3.9.1/lib/ext/redisson/README.txt\n  inflating: apache-maven-3.9.1/lib/jansi-native/README.txt\n  inflating: apache-maven-3.9.1/boot/plexus-classworlds-2.6.0.jar\n  inflating: apache-maven-3.9.1/lib/maven-embedder-3.9.1.jar\n  inflating: apache-maven-3.9.1/lib/maven-settings-3.9.1.jar\n  inflating: apache-maven-3.9.1/lib/maven-settings-builder-3.9.1.jar\n  inflating: apache-maven-3.9.1/lib/maven-plugin-api-3.9.1.jar\n  inflating: apache-maven-3.9.1/lib/maven-model-3.9.1.jar\n  inflating: apache-maven-3.9.1/lib/maven-model-builder-3.9.1.jar\n  inflating: apache-maven-3.9.1/lib/maven-builder-support-3.9.1.jar\n  inflating: apache-maven-3.9.1/lib/maven-resolver-api-1.9.7.jar\n  inflating: apache-maven-3.9.1/lib/maven-resolver-util-1.9.7.jar\n  inflating: apache-maven-3.9.1/lib/maven-shared-utils-3.3.4.jar\n  inflating: apache-maven-3.9.1/lib/guice-5.1.0.jar\n  inflating: apache-maven-3.9.1/lib/aopalliance-1.0.jar\n  inflating: apache-maven-3.9.1/lib/guava-30.1-jre.jar\n  inflating: apache-maven-3.9.1/lib/failureaccess-1.0.1.jar\n  inflating: apache-maven-3.9.1/lib/javax.inject-1.jar\n  inflating: apache-maven-3.9.1/lib/javax.annotation-api-1.3.2.jar\n  inflating: apache-maven-3.9.1/lib/plexus-utils-3.5.1.jar\n  inflating: apache-maven-3.9.1/lib/plexus-sec-dispatcher-2.0.jar\n  inflating: apache-maven-3.9.1/lib/plexus-cipher-2.0.jar\n  inflating: apache-maven-3.9.1/lib/plexus-interpolation-1.26.jar\n  inflating: apache-maven-3.9.1/lib/slf4j-api-1.7.36.jar\n  inflating: apache-maven-3.9.1/lib/commons-lang3-3.8.1.jar\n  inflating: apache-maven-3.9.1/lib/maven-core-3.9.1.jar\n  inflating: apache-maven-3.9.1/lib/maven-repository-metadata-3.9.1.jar\n  inflating: apache-maven-3.9.1/lib/maven-artifact-3.9.1.jar\n  inflating: apache-maven-3.9.1/lib/maven-resolver-provider-3.9.1.jar\n  inflating: apache-maven-3.9.1/lib/maven-resolver-impl-1.9.7.jar\n  inflating: apache-maven-3.9.1/lib/maven-resolver-named-locks-1.9.7.jar\n  inflating: apache-maven-3.9.1/lib/maven-resolver-spi-1.9.7.jar\n  inflating: apache-maven-3.9.1/lib/org.eclipse.sisu.inject-0.3.5.jar\n  inflating: apache-maven-3.9.1/lib/plexus-component-annotations-2.1.0.jar\n  inflating: apache-maven-3.9.1/lib/maven-compat-3.9.1.jar\n  inflating: apache-maven-3.9.1/lib/wagon-provider-api-3.5.3.jar\n  inflating: apache-maven-3.9.1/lib/org.eclipse.sisu.plexus-0.3.5.jar\n  inflating: apache-maven-3.9.1/lib/commons-cli-1.4.jar\n  inflating: apache-maven-3.9.1/lib/wagon-http-3.5.3.jar\n  inflating: apache-maven-3.9.1/lib/wagon-http-shared-3.5.3.jar\n  inflating: apache-maven-3.9.1/lib/httpclient-4.5.14.jar\n  inflating: apache-maven-3.9.1/lib/commons-codec-1.11.jar\n  inflating: apache-maven-3.9.1/lib/wagon-file-3.5.3.jar\n  inflating: apache-maven-3.9.1/lib/jcl-over-slf4j-1.7.36.jar\n  inflating: apache-maven-3.9.1/lib/maven-resolver-connector-basic-1.9.7.jar\n  inflating: apache-maven-3.9.1/lib/maven-resolver-transport-file-1.9.7.jar\n  inflating: apache-maven-3.9.1/lib/maven-resolver-transport-http-1.9.7.jar\n  inflating: apache-maven-3.9.1/lib/httpcore-4.4.15.jar\n  inflating: apache-maven-3.9.1/lib/maven-resolver-transport-wagon-1.9.7.jar\n  inflating: apache-maven-3.9.1/lib/maven-slf4j-provider-3.9.1.jar\n  inflating: apache-maven-3.9.1/lib/jansi-2.4.0.jar\n[opc@new-k8s curl-examples]$ ll\ntotal 11652\ndrwxr-xr-x. 6 opc opc      99 Mar 15 09:39 apache-maven-3.9.1\n-rw-rw-r--. 1 opc opc 9143026 Apr 17 13:35 apache-maven-3.9.1-bin.zip\n-rw-rw-r--. 1 opc opc 2784624 Apr 17 13:38 apache-maven-3.9.1-src.tar.gz\n</code></pre>"},{"location":"linux-commands/part-7/#how-to-unzip-to-different-directory","title":"How to unzip to different directory","text":"<p>Using -d parameter we can extract the zip package to different folder -q \u2192 silent mode</p> <p>Lets extract to /tmp folder</p> <pre><code>[opc@new-k8s tmp]$ pwd\n/tmp\n[opc@new-k8s tmp]$ ll\ntotal 0\n[opc@new-k8s tmp]$ cd ~/curl-examples/\n[opc@new-k8s curl-examples]$ ll\ntotal 11652\n-rw-rw-r--. 1 opc opc 9143026 Apr 17 13:35 apache-maven-3.9.1-bin.zip\n-rw-rw-r--. 1 opc opc 2784624 Apr 17 13:38 apache-maven-3.9.1-src.tar.gz\n[opc@new-k8s curl-examples]$ pwd\n/home/opc/curl-examples\n[opc@new-k8s curl-examples]$ unzip apache-maven-3.9.1-bin.zip -d /tmp\nArchive:  apache-maven-3.9.1-bin.zip\n   creating: /tmp/apache-maven-3.9.1/\n   creating: /tmp/apache-maven-3.9.1/lib/\n   creating: /tmp/apache-maven-3.9.1/boot/\n   creating: /tmp/apache-maven-3.9.1/lib/jansi-native/\n   creating: /tmp/apache-maven-3.9.1/lib/jansi-native/Windows/\n   creating: /tmp/apache-maven-3.9.1/lib/jansi-native/Windows/x86/\n   creating: /tmp/apache-maven-3.9.1/lib/jansi-native/Windows/x86_64/\n   creating: /tmp/apache-maven-3.9.1/bin/\n   creating: /tmp/apache-maven-3.9.1/conf/\n   creating: /tmp/apache-maven-3.9.1/conf/logging/\n   creating: /tmp/apache-maven-3.9.1/lib/ext/\n   creating: /tmp/apache-maven-3.9.1/lib/ext/hazelcast/\n   creating: /tmp/apache-maven-3.9.1/lib/ext/redisson/\n  inflating: /tmp/apache-maven-3.9.1/README.txt\n  inflating: /tmp/apache-maven-3.9.1/LICENSE\n  inflating: /tmp/apache-maven-3.9.1/NOTICE\n  inflating: /tmp/apache-maven-3.9.1/lib/aopalliance.license\n  inflating: /tmp/apache-maven-3.9.1/lib/commons-cli.license\n  inflating: /tmp/apache-maven-3.9.1/lib/commons-codec.license\n  inflating: /tmp/apache-maven-3.9.1/lib/commons-lang3.license\n  inflating: /tmp/apache-maven-3.9.1/lib/failureaccess.license\n  inflating: /tmp/apache-maven-3.9.1/lib/guava.license\n  inflating: /tmp/apache-maven-3.9.1/lib/guice.license\n  inflating: /tmp/apache-maven-3.9.1/lib/httpclient.license\n  inflating: /tmp/apache-maven-3.9.1/lib/httpcore.license\n  inflating: /tmp/apache-maven-3.9.1/lib/jansi.license\n  inflating: /tmp/apache-maven-3.9.1/lib/javax.annotation-api.license\n  inflating: /tmp/apache-maven-3.9.1/lib/javax.inject.license\n  inflating: /tmp/apache-maven-3.9.1/lib/jcl-over-slf4j.license\n  inflating: /tmp/apache-maven-3.9.1/lib/org.eclipse.sisu.inject.license\n  inflating: /tmp/apache-maven-3.9.1/lib/org.eclipse.sisu.plexus.license\n  inflating: /tmp/apache-maven-3.9.1/lib/plexus-cipher.license\n  inflating: /tmp/apache-maven-3.9.1/lib/plexus-component-annotations.license\n  inflating: /tmp/apache-maven-3.9.1/lib/plexus-interpolation.license\n  inflating: /tmp/apache-maven-3.9.1/lib/plexus-sec-dispatcher.license\n  inflating: /tmp/apache-maven-3.9.1/lib/plexus-utils.license\n  inflating: /tmp/apache-maven-3.9.1/lib/slf4j-api.license\n  inflating: /tmp/apache-maven-3.9.1/boot/plexus-classworlds.license\n  inflating: /tmp/apache-maven-3.9.1/lib/jansi-native/Windows/x86/jansi.dll\n  inflating: /tmp/apache-maven-3.9.1/lib/jansi-native/Windows/x86_64/jansi.dll\n  inflating: /tmp/apache-maven-3.9.1/bin/m2.conf\n  inflating: /tmp/apache-maven-3.9.1/bin/mvn.cmd\n  inflating: /tmp/apache-maven-3.9.1/bin/mvnDebug.cmd\n  inflating: /tmp/apache-maven-3.9.1/bin/mvn\n  inflating: /tmp/apache-maven-3.9.1/bin/mvnDebug\n  inflating: /tmp/apache-maven-3.9.1/bin/mvnyjp\n  inflating: /tmp/apache-maven-3.9.1/conf/logging/simplelogger.properties\n  inflating: /tmp/apache-maven-3.9.1/conf/settings.xml\n  inflating: /tmp/apache-maven-3.9.1/conf/toolchains.xml\n  inflating: /tmp/apache-maven-3.9.1/lib/ext/README.txt\n  inflating: /tmp/apache-maven-3.9.1/lib/ext/hazelcast/README.txt\n  inflating: /tmp/apache-maven-3.9.1/lib/ext/redisson/README.txt\n  inflating: /tmp/apache-maven-3.9.1/lib/jansi-native/README.txt\n  inflating: /tmp/apache-maven-3.9.1/boot/plexus-classworlds-2.6.0.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-embedder-3.9.1.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-settings-3.9.1.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-settings-builder-3.9.1.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-plugin-api-3.9.1.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-model-3.9.1.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-model-builder-3.9.1.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-builder-support-3.9.1.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-resolver-api-1.9.7.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-resolver-util-1.9.7.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-shared-utils-3.3.4.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/guice-5.1.0.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/aopalliance-1.0.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/guava-30.1-jre.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/failureaccess-1.0.1.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/javax.inject-1.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/javax.annotation-api-1.3.2.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/plexus-utils-3.5.1.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/plexus-sec-dispatcher-2.0.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/plexus-cipher-2.0.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/plexus-interpolation-1.26.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/slf4j-api-1.7.36.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/commons-lang3-3.8.1.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-core-3.9.1.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-repository-metadata-3.9.1.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-artifact-3.9.1.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-resolver-provider-3.9.1.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-resolver-impl-1.9.7.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-resolver-named-locks-1.9.7.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-resolver-spi-1.9.7.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/org.eclipse.sisu.inject-0.3.5.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/plexus-component-annotations-2.1.0.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-compat-3.9.1.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/wagon-provider-api-3.5.3.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/org.eclipse.sisu.plexus-0.3.5.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/commons-cli-1.4.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/wagon-http-3.5.3.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/wagon-http-shared-3.5.3.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/httpclient-4.5.14.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/commons-codec-1.11.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/wagon-file-3.5.3.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/jcl-over-slf4j-1.7.36.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-resolver-connector-basic-1.9.7.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-resolver-transport-file-1.9.7.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-resolver-transport-http-1.9.7.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/httpcore-4.4.15.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-resolver-transport-wagon-1.9.7.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/maven-slf4j-provider-3.9.1.jar\n  inflating: /tmp/apache-maven-3.9.1/lib/jansi-2.4.0.jar\n[opc@new-k8s curl-examples]$ ll\ntotal 11652\n-rw-rw-r--. 1 opc opc 9143026 Apr 17 13:35 apache-maven-3.9.1-bin.zip\n-rw-rw-r--. 1 opc opc 2784624 Apr 17 13:38 apache-maven-3.9.1-src.tar.gz\n[opc@new-k8s curl-examples]$ cd /tmp\n[opc@new-k8s tmp]$ pwd\n/tmp\n[opc@new-k8s tmp]$ ll\ntotal 0\ndrwxr-xr-x. 6 opc opc 99 Mar 15 09:39 apache-maven-3.9.1\n</code></pre>"},{"location":"linux-commands/part-7/#how-to-extract-tar-or-targz-file","title":"How to extract tar or tar.gz file","text":"<pre><code>[opc@new-k8s curl-examples]$ ll\ntotal 11652\n-rw-rw-r--. 1 opc opc 9143026 Apr 17 13:35 apache-maven-3.9.1-bin.zip\n-rw-rw-r--. 1 opc opc 2784624 Apr 17 13:38 apache-maven-3.9.1-src.tar.gz\n[opc@new-k8s curl-examples]$ pwd\n/home/opc/curl-examples\n[opc@new-k8s curl-examples]$ tar --version\ntar (GNU tar) 1.26\nCopyright (C) 2011 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\nWritten by John Gilmore and Jay Fenlason.\n[opc@new-k8s curl-examples]$ tar -xvf apache-maven-3.9.1-src.tar.gz\napache-maven-3.9.1/\napache-maven-3.9.1/.github/\napache-maven-3.9.1/.github/workflows/\napache-maven-3.9.1/apache-maven/\napache-maven-3.9.1/apache-maven/src/\napache-maven-3.9.1/apache-maven/src/bin/\napache-maven-3.9.1/apache-maven/src/conf/\napache-maven-3.9.1/apache-maven/src/conf/logging/\napache-maven-3.9.1/apache-maven/src/lib/\napache-maven-3.9.1/apache-maven/src/lib/ext/\napache-maven-3.9.1/apache-maven/src/lib/ext/hazelcast/\napache-maven-3.9.1/apache-maven/src/lib/ext/redisson/\napache-maven-3.9.1/apache-maven/src/lib/jansi-native/\napache-maven-3.9.1/apache-maven/src/main/\napache-maven-3.9.1/apache-maven/src/main/appended-resources/\napache-maven-3.9.1/apache-maven/src/main/appended-resources/META-INF/\napache-maven-3.9.1/apache-maven/src/main/appended-resources/licenses/\napache-maven-3.9.1/apache-maven/src/main/assembly/\napache-maven-3.9.1/apache-maven/src/site/\napache-maven-3.9.1/apache-maven/src/site/apt/\napache-maven-3.9.1/apache-maven/src/test/\napache-maven-3.9.1/apache-maven/src/test/java/\napache-maven-3.9.1/apache-maven/src/test/java/org/\napache-maven-3.9.1/apache-maven/src/test/java/org/apache/\napache-maven-3.9.1/apache-maven/src/test/java/org/apache/maven/\napache-maven-3.9.1/apache-maven/src/test/java/org/apache/maven/settings/\napache-maven-3.9.1/maven-artifact/\napache-maven-3.9.1/maven-artifact/src/\napache-maven-3.9.1/maven-artifact/src/main/\napache-maven-3.9.1/maven-artifact/src/main/java/\napache-maven-3.9.1/maven-artifact/src/main/java/org/\napache-maven-3.9.1/maven-artifact/src/main/java/org/apache/\napache-maven-3.9.1/maven-artifact/src/main/java/org/apache/maven/\napache-maven-3.9.1/maven-artifact/src/main/java/org/apache/maven/artifact/\napache-maven-3.9.1/maven-artifact/src/main/java/org/apache/maven/artifact/handler/\napache-maven-3.9.1/maven-artifact/src/main/java/org/apache/maven/artifact/metadata/\napache-maven-3.9.1/maven-artifact/src/main/java/org/apache/maven/artifact/repository/\napache-maven-3.9.1/maven-artifact/src/main/java/org/apache/maven/artifact/repository/layout/\napache-maven-3.9.1/maven-artifact/src/main/java/org/apache/maven/artifact/repository/metadata/\napache-maven-3.9.1/maven-artifact/src/main/java/org/apache/maven/artifact/resolver/\napache-maven-3.9.1/maven-artifact/src/main/java/org/apache/maven/artifact/resolver/filter/\napache-maven-3.9.1/maven-artifact/src/main/java/org/apache/maven/artifact/versioning/\napache-maven-3.9.1/maven-artifact/src/main/java/org/apache/maven/repository/\napache-maven-3.9.1/maven-artifact/src/main/java/org/apache/maven/repository/legacy/\napache-maven-3.9.1/maven-artifact/src/main/java/org/apache/maven/repository/legacy/metadata/\n[opc@new-k8s curl-examples]$ ll -h\ntotal 12M\ndrwxr-xr-x. 18 opc opc 4.0K Mar 15 09:39 apache-maven-3.9.1\n-rw-rw-r--.  1 opc opc 8.8M Apr 17 13:35 apache-maven-3.9.1-bin.zip\n-rw-rw-r--.  1 opc opc 2.7M Apr 17 13:38 apache-maven-3.9.1-src.tar.gz\n[opc@new-k8s curl-examples]$ cd apache-maven-3.9.1/\n[opc@new-k8s apache-maven-3.9.1]$ ll\ntotal 108\ndrwxr-xr-x. 3 opc opc    50 Apr 17 13:48 apache-maven\n-rw-r--r--. 1 opc opc  4726 Mar 15 09:39 CONTRIBUTING.md\n-rw-r--r--. 1 opc opc 11354 Mar 15 09:39 DEPENDENCIES\n-rw-r--r--. 1 opc opc   871 Mar 15 09:39 deploySite.sh\n-rw-r--r--. 1 opc opc 23461 Mar 15 09:39 doap_Maven.rdf\n-rw-r--r--. 1 opc opc  7487 Mar 15 09:39 Jenkinsfile\n-rw-r--r--. 1 opc opc 11358 Mar 15 09:39 LICENSE\ndrwxr-xr-x. 3 opc opc    32 Apr 17 13:48 maven-artifact\ndrwxr-xr-x. 3 opc opc    32 Apr 17 13:48 maven-builder-support\ndrwxr-xr-x. 3 opc opc    32 Apr 17 13:48 maven-compat\ndrwxr-xr-x. 3 opc opc    88 Apr 17 13:48 maven-core\ndrwxr-xr-x. 3 opc opc    32 Apr 17 13:48 maven-embedder\ndrwxr-xr-x. 3 opc opc    32 Apr 17 13:48 maven-model\ndrwxr-xr-x. 3 opc opc    32 Apr 17 13:48 maven-model-builder\ndrwxr-xr-x. 3 opc opc    32 Apr 17 13:48 maven-plugin-api\ndrwxr-xr-x. 3 opc opc    32 Apr 17 13:48 maven-repository-metadata\ndrwxr-xr-x. 3 opc opc    32 Apr 17 13:48 maven-resolver-provider\ndrwxr-xr-x. 3 opc opc    32 Apr 17 13:48 maven-settings\ndrwxr-xr-x. 3 opc opc    32 Apr 17 13:48 maven-settings-builder\ndrwxr-xr-x. 3 opc opc    32 Apr 17 13:48 maven-slf4j-provider\n-rw-r--r--. 1 opc opc   166 Mar 15 09:39 NOTICE\n-rw-r--r--. 1 opc opc 28045 Mar 15 09:39 pom.xml\n-rw-r--r--. 1 opc opc  4114 Mar 15 09:39 README.md\ndrwxr-xr-x. 3 opc opc    18 Mar 15 09:39 src\n[opc@new-k8s apache-maven-3.9.1]$ du -sh .\n14M     .\n</code></pre>"},{"location":"linux-commands/part-7/#how-to-extract-to-different-folder-using-tar-command-and-in-silent-mode","title":"How to extract to different folder using tar command and in silent mode","text":"<p>Use -C argument to extract to different directory</p> <p>By default tar dosen't print any logs to output, if we use -v it shows the logs(extracting files names)</p> <pre><code>[opc@new-k8s tmp]$ pwd\n/tmp\n[opc@new-k8s tmp]$ ll\ntotal 0\n[opc@new-k8s tmp]$ cd ~/curl-examples/\n[opc@new-k8s curl-examples]$ pwd\n/home/opc/curl-examples\n[opc@new-k8s curl-examples]$ ll\ntotal 11652\n-rw-rw-r--. 1 opc opc 9143026 Apr 17 13:35 apache-maven-3.9.1-bin.zip\n-rw-rw-r--. 1 opc opc 2784624 Apr 17 13:38 apache-maven-3.9.1-src.tar.gz\n[opc@new-k8s curl-examples]$ tar -xf apache-maven-3.9.1-src.tar.gz -C /tmp\n[opc@new-k8s curl-examples]$ ll\ntotal 11652\n-rw-rw-r--. 1 opc opc 9143026 Apr 17 13:35 apache-maven-3.9.1-bin.zip\n-rw-rw-r--. 1 opc opc 2784624 Apr 17 13:38 apache-maven-3.9.1-src.tar.gz\n[opc@new-k8s curl-examples]$ cd /tmp/\n[opc@new-k8s tmp]$ ll\ntotal 4\ndrwxr-xr-x. 18 opc opc 4096 Mar 15 09:39 apache-maven-3.9.1\n[opc@new-k8s tmp]$ pwd\n/tmp\n</code></pre>"},{"location":"linux-commands/part-7/#how-to-create-a-zip-file","title":"How to create a zip file","text":"<p>zip -r ZIP_FILE_NAME.zip folder_name</p> <p>or</p> <p>zip ZIP_FILE_NAME.zip file1.ttx file2.txt</p> <p>-q \u2192 Silent mode</p> <pre><code>[opc@new-k8s zip-file]$ pwd\n/home/opc/zip-file\n[opc@new-k8s zip-file]$ ll\ntotal 0\ndrwxr-xr-x. 6 opc opc 99 Mar 15 09:39 apache-maven-3.9.1\n[opc@new-k8s zip-file]$ ll apache-maven-3.9.1/\ntotal 36\ndrwxr-xr-x. 2 opc opc    97 Mar 15 09:39 bin\ndrwxr-xr-x. 2 opc opc    76 Mar 15 09:39 boot\ndrwxr-xr-x. 3 opc opc    63 Mar 15 09:39 conf\ndrwxr-xr-x. 4 opc opc  4096 Mar 15 09:39 lib\n-rw-r--r--. 1 opc opc 18644 Mar 15 09:39 LICENSE\n-rw-r--r--. 1 opc opc  5036 Mar 15 09:39 NOTICE\n-rw-r--r--. 1 opc opc  2533 Mar 15 09:39 README.txt\n[opc@new-k8s zip-file]$ zip -r newapache-maven.zip apache-maven-3.9.1\n  adding: apache-maven-3.9.1/ (stored 0%)\n  adding: apache-maven-3.9.1/lib/ (stored 0%)\n  adding: apache-maven-3.9.1/lib/jansi-native/ (stored 0%)\n  adding: apache-maven-3.9.1/lib/jansi-native/Windows/ (stored 0%)\n  adding: apache-maven-3.9.1/lib/jansi-native/Windows/x86/ (stored 0%)\n  adding: apache-maven-3.9.1/lib/jansi-native/Windows/x86/jansi.dll (deflated 69%)\n  adding: apache-maven-3.9.1/lib/jansi-native/Windows/x86_64/ (stored 0%)\n  adding: apache-maven-3.9.1/lib/jansi-native/Windows/x86_64/jansi.dll (deflated 70%)\n  adding: apache-maven-3.9.1/lib/jansi-native/README.txt (deflated 40%)\n  adding: apache-maven-3.9.1/lib/ext/ (stored 0%)\n  adding: apache-maven-3.9.1/lib/ext/hazelcast/ (stored 0%)\n  adding: apache-maven-3.9.1/lib/ext/hazelcast/README.txt (deflated 35%)\n  adding: apache-maven-3.9.1/lib/ext/redisson/ (stored 0%)\n  adding: apache-maven-3.9.1/lib/ext/redisson/README.txt (deflated 34%)\n  adding: apache-maven-3.9.1/lib/ext/README.txt (deflated 26%)\n  adding: apache-maven-3.9.1/lib/aopalliance.license (stored 0%)\n  adding: apache-maven-3.9.1/lib/commons-cli.license (deflated 65%)\n  adding: apache-maven-3.9.1/lib/commons-codec.license (deflated 65%)\n  adding: apache-maven-3.9.1/lib/commons-lang3.license (deflated 65%)\n  adding: apache-maven-3.9.1/lib/failureaccess.license (deflated 65%)\n  adding: apache-maven-3.9.1/lib/guava.license (deflated 65%)\n  adding: apache-maven-3.9.1/lib/guice.license (deflated 65%)\n  adding: apache-maven-3.9.1/lib/httpclient.license (deflated 65%)\n  adding: apache-maven-3.9.1/lib/httpcore.license (deflated 65%)\n  adding: apache-maven-3.9.1/lib/jansi.license (deflated 65%)\n  adding: apache-maven-3.9.1/lib/javax.annotation-api.license (deflated 67%)\n  adding: apache-maven-3.9.1/lib/javax.inject.license (deflated 65%)\n  adding: apache-maven-3.9.1/lib/jcl-over-slf4j.license (deflated 65%)\n  adding: apache-maven-3.9.1/lib/org.eclipse.sisu.inject.license (deflated 63%)\n  adding: apache-maven-3.9.1/lib/org.eclipse.sisu.plexus.license (deflated 63%)\n  adding: apache-maven-3.9.1/lib/plexus-cipher.license (deflated 65%)\n  adding: apache-maven-3.9.1/lib/plexus-component-annotations.license (deflated 65%)\n  adding: apache-maven-3.9.1/lib/plexus-interpolation.license (deflated 65%)\n  adding: apache-maven-3.9.1/lib/plexus-sec-dispatcher.license (deflated 65%)\n  adding: apache-maven-3.9.1/lib/plexus-utils.license (deflated 65%)\n  adding: apache-maven-3.9.1/lib/slf4j-api.license (deflated 42%)\n  adding: apache-maven-3.9.1/lib/maven-embedder-3.9.1.jar (deflated 10%)\n  adding: apache-maven-3.9.1/lib/maven-settings-3.9.1.jar (deflated 8%)\n  adding: apache-maven-3.9.1/lib/maven-settings-builder-3.9.1.jar (deflated 17%)\n  adding: apache-maven-3.9.1/lib/maven-plugin-api-3.9.1.jar (deflated 12%)\n  adding: apache-maven-3.9.1/lib/maven-model-3.9.1.jar (deflated 5%)\n  adding: apache-maven-3.9.1/lib/maven-model-builder-3.9.1.jar (deflated 12%)\n  adding: apache-maven-3.9.1/lib/maven-builder-support-3.9.1.jar (deflated 18%)\n  adding: apache-maven-3.9.1/lib/maven-resolver-api-1.9.7.jar (deflated 14%)\n  adding: apache-maven-3.9.1/lib/maven-resolver-util-1.9.7.jar (deflated 11%)\n  adding: apache-maven-3.9.1/lib/maven-shared-utils-3.3.4.jar (deflated 9%)\n  adding: apache-maven-3.9.1/lib/guice-5.1.0.jar (deflated 9%)\n  adding: apache-maven-3.9.1/lib/aopalliance-1.0.jar (deflated 41%)\n  adding: apache-maven-3.9.1/lib/guava-30.1-jre.jar (deflated 11%)\n  adding: apache-maven-3.9.1/lib/failureaccess-1.0.1.jar (deflated 40%)\n  adding: apache-maven-3.9.1/lib/javax.inject-1.jar (deflated 28%)\n  adding: apache-maven-3.9.1/lib/javax.annotation-api-1.3.2.jar (deflated 12%)\n  adding: apache-maven-3.9.1/lib/plexus-utils-3.5.1.jar (deflated 7%)\n  adding: apache-maven-3.9.1/lib/plexus-sec-dispatcher-2.0.jar (deflated 18%)\n  adding: apache-maven-3.9.1/lib/plexus-cipher-2.0.jar (deflated 16%)\n  adding: apache-maven-3.9.1/lib/plexus-interpolation-1.26.jar (deflated 15%)\n  adding: apache-maven-3.9.1/lib/slf4j-api-1.7.36.jar (deflated 12%)\n  adding: apache-maven-3.9.1/lib/commons-lang3-3.8.1.jar (deflated 8%)\n  adding: apache-maven-3.9.1/lib/maven-core-3.9.1.jar (deflated 10%)\n  adding: apache-maven-3.9.1/lib/maven-repository-metadata-3.9.1.jar (deflated 12%)\n  adding: apache-maven-3.9.1/lib/maven-artifact-3.9.1.jar (deflated 13%)\n  adding: apache-maven-3.9.1/lib/maven-resolver-provider-3.9.1.jar (deflated 9%)\n  adding: apache-maven-3.9.1/lib/maven-resolver-impl-1.9.7.jar (deflated 10%)\n  adding: apache-maven-3.9.1/lib/maven-resolver-named-locks-1.9.7.jar (deflated 15%)\n  adding: apache-maven-3.9.1/lib/maven-resolver-spi-1.9.7.jar (deflated 23%)\n  adding: apache-maven-3.9.1/lib/org.eclipse.sisu.inject-0.3.5.jar (deflated 9%)\n  adding: apache-maven-3.9.1/lib/plexus-component-annotations-2.1.0.jar (deflated 43%)\n  adding: apache-maven-3.9.1/lib/maven-compat-3.9.1.jar (deflated 10%)\n  adding: apache-maven-3.9.1/lib/wagon-provider-api-3.5.3.jar (deflated 13%)\n  adding: apache-maven-3.9.1/lib/org.eclipse.sisu.plexus-0.3.5.jar (deflated 14%)\n  adding: apache-maven-3.9.1/lib/commons-cli-1.4.jar (deflated 8%)\n  adding: apache-maven-3.9.1/lib/wagon-http-3.5.3.jar (deflated 19%)\n  adding: apache-maven-3.9.1/lib/wagon-http-shared-3.5.3.jar (deflated 8%)\n  adding: apache-maven-3.9.1/lib/httpclient-4.5.14.jar (deflated 9%)\n  adding: apache-maven-3.9.1/lib/commons-codec-1.11.jar (deflated 16%)\n  adding: apache-maven-3.9.1/lib/wagon-file-3.5.3.jar (deflated 16%)\n  adding: apache-maven-3.9.1/lib/jcl-over-slf4j-1.7.36.jar (deflated 15%)\n  adding: apache-maven-3.9.1/lib/maven-resolver-connector-basic-1.9.7.jar (deflated 10%)\n  adding: apache-maven-3.9.1/lib/maven-resolver-transport-file-1.9.7.jar (deflated 15%)\n  adding: apache-maven-3.9.1/lib/maven-resolver-transport-http-1.9.7.jar (deflated 9%)\n  adding: apache-maven-3.9.1/lib/httpcore-4.4.15.jar (deflated 10%)\n  adding: apache-maven-3.9.1/lib/maven-resolver-transport-wagon-1.9.7.jar (deflated 15%)\n  adding: apache-maven-3.9.1/lib/maven-slf4j-provider-3.9.1.jar (deflated 11%)\n  adding: apache-maven-3.9.1/lib/jansi-2.4.0.jar (deflated 6%)\n  adding: apache-maven-3.9.1/boot/ (stored 0%)\n  adding: apache-maven-3.9.1/boot/plexus-classworlds.license (deflated 65%)\n  adding: apache-maven-3.9.1/boot/plexus-classworlds-2.6.0.jar (deflated 14%)\n  adding: apache-maven-3.9.1/bin/ (stored 0%)\n  adding: apache-maven-3.9.1/bin/m2.conf (deflated 52%)\n  adding: apache-maven-3.9.1/bin/mvn.cmd (deflated 64%)\n  adding: apache-maven-3.9.1/bin/mvnDebug.cmd (deflated 55%)\n  adding: apache-maven-3.9.1/bin/mvn (deflated 62%)\n  adding: apache-maven-3.9.1/bin/mvnDebug (deflated 51%)\n  adding: apache-maven-3.9.1/bin/mvnyjp (deflated 48%)\n  adding: apache-maven-3.9.1/conf/ (stored 0%)\n  adding: apache-maven-3.9.1/conf/logging/ (stored 0%)\n  adding: apache-maven-3.9.1/conf/logging/simplelogger.properties (deflated 52%)\n  adding: apache-maven-3.9.1/conf/settings.xml (deflated 63%)\n  adding: apache-maven-3.9.1/conf/toolchains.xml (deflated 60%)\n  adding: apache-maven-3.9.1/README.txt (deflated 57%)\n  adding: apache-maven-3.9.1/LICENSE (deflated 72%)\n  adding: apache-maven-3.9.1/NOTICE (deflated 58%)\n[opc@new-k8s zip-file]$ ll\ntotal 8924\ndrwxr-xr-x. 6 opc opc      99 Mar 15 09:39 apache-maven-3.9.1\n-rw-rw-r--. 1 opc opc 9137892 Apr 17 14:39 newapache-maven.zip\n</code></pre>"},{"location":"linux-commands/part-7/#sample-json-file","title":"Sample JSON file","text":"<p>Json file contains the key vaue pair</p> <p>Json file name ends with extension \".json\" eg: output.json</p> <pre><code>{\n  \"name\": \"john\",\n  \"age\": \"30\",\n  \"car\": \"BMW\",\n  \"games\": [\"cricket\", \"basketball\", \"badminton\"]  \n}\n</code></pre> <p>or</p> <pre><code>{\"name\":\"John\", \"age\":30, \"car\":null, \"games\": [\"cricket\", \"basketball\", \"badminton\"]}\n</code></pre>"},{"location":"linux-commands/part-7/#curl-command-to-retrieve-the-rest-api-response-json","title":"Curl command to retrieve the Rest api response (JSON)","text":"<p>Most of the time curl command is used for calling the rest api</p> <p>In simple term, Rest api is URL(https://example.com), when we call that url , you will get a response data.</p> <p>The most of the case the response data will be a JSON</p> <p>Actual Data in GUI : https://github.com/vigneshsweekaran/hello-world/releases/tag/clean</p> <pre><code>[opc@new-k8s redirection]$ curl https://api.github.com/repos/vigneshsweekaran/hello-world/releases/latest\n{\n  \"url\": \"https://api.github.com/repos/vigneshsweekaran/hello-world/releases/43010389\",\n  \"assets_url\": \"https://api.github.com/repos/vigneshsweekaran/hello-world/releases/43010389/assets\",\n  \"upload_url\": \"https://uploads.github.com/repos/vigneshsweekaran/hello-world/releases/43010389/assets{?name,label}\",\n  \"html_url\": \"https://github.com/vigneshsweekaran/hello-world/releases/tag/clean\",\n  \"id\": 43010389,\n  \"author\": {\n    \"login\": \"vigneshsweekaran\",\n    \"id\": 40670015,\n    \"node_id\": \"MDQ6VXNlcjQwNjcwMDE1\",\n    \"avatar_url\": \"https://avatars.githubusercontent.com/u/40670015?v=4\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/vigneshsweekaran\",\n    \"html_url\": \"https://github.com/vigneshsweekaran\",\n    \"followers_url\": \"https://api.github.com/users/vigneshsweekaran/followers\",\n    \"following_url\": \"https://api.github.com/users/vigneshsweekaran/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/vigneshsweekaran/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/vigneshsweekaran/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/vigneshsweekaran/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/vigneshsweekaran/orgs\",\n    \"repos_url\": \"https://api.github.com/users/vigneshsweekaran/repos\",\n    \"events_url\": \"https://api.github.com/users/vigneshsweekaran/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/vigneshsweekaran/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n  },\n  \"node_id\": \"MDc6UmVsZWFzZTQzMDEwMzg5\",\n  \"tag_name\": \"clean\",\n  \"target_commitish\": \"master\",\n  \"name\": \"Clean repo with maven application\",\n  \"draft\": false,\n  \"prerelease\": false,\n  \"created_at\": \"2021-05-16T06:18:49Z\",\n  \"published_at\": \"2021-05-16T06:26:47Z\",\n  \"assets\": [\n\n  ],\n  \"tarball_url\": \"https://api.github.com/repos/vigneshsweekaran/hello-world/tarball/clean\",\n  \"zipball_url\": \"https://api.github.com/repos/vigneshsweekaran/hello-world/zipball/clean\",\n  \"body\": \"\"\n}\n</code></pre>"},{"location":"linux-commands/part-7/#how-to-store-the-json-response-data-from-rest-api-to-a-file","title":"How to store the Json response data from rest api to a file","text":"<pre><code>[opc@new-k8s ~]$ mkdir json-response\n[opc@new-k8s ~]$ cd json-response/\n[opc@new-k8s json-response]$ ll\ntotal 0\n[opc@new-k8s json-response]$ pwd\n/home/opc/json-response\n[opc@new-k8s json-response]$ curl https://api.github.com/repos/vigneshsweekaran/hello-world/releases/latest &gt; output.json\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  2026  100  2026    0     0   2809      0 --:--:-- --:--:-- --:--:-- 2809\n[opc@new-k8s json-response]$ ll\ntotal 4\n-rw-rw-r--. 1 opc opc 2026 Apr 17 14:23 output.json\n[opc@new-k8s json-response]$ cat output.json\n{\n  \"url\": \"https://api.github.com/repos/vigneshsweekaran/hello-world/releases/43010389\",\n  \"assets_url\": \"https://api.github.com/repos/vigneshsweekaran/hello-world/releases/43010389/assets\",\n  \"upload_url\": \"https://uploads.github.com/repos/vigneshsweekaran/hello-world/releases/43010389/assets{?name,label}\",\n  \"html_url\": \"https://github.com/vigneshsweekaran/hello-world/releases/tag/clean\",\n  \"id\": 43010389,\n  \"author\": {\n    \"login\": \"vigneshsweekaran\",\n    \"id\": 40670015,\n    \"node_id\": \"MDQ6VXNlcjQwNjcwMDE1\",\n    \"avatar_url\": \"https://avatars.githubusercontent.com/u/40670015?v=4\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/vigneshsweekaran\",\n    \"html_url\": \"https://github.com/vigneshsweekaran\",\n    \"followers_url\": \"https://api.github.com/users/vigneshsweekaran/followers\",\n    \"following_url\": \"https://api.github.com/users/vigneshsweekaran/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/vigneshsweekaran/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/vigneshsweekaran/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/vigneshsweekaran/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/vigneshsweekaran/orgs\",\n    \"repos_url\": \"https://api.github.com/users/vigneshsweekaran/repos\",\n    \"events_url\": \"https://api.github.com/users/vigneshsweekaran/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/vigneshsweekaran/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n  },\n  \"node_id\": \"MDc6UmVsZWFzZTQzMDEwMzg5\",\n  \"tag_name\": \"clean\",\n  \"target_commitish\": \"master\",\n  \"name\": \"Clean repo with maven application\",\n  \"draft\": false,\n  \"prerelease\": false,\n  \"created_at\": \"2021-05-16T06:18:49Z\",\n  \"published_at\": \"2021-05-16T06:26:47Z\",\n  \"assets\": [\n\n  ],\n  \"tarball_url\": \"https://api.github.com/repos/vigneshsweekaran/hello-world/tarball/clean\",\n  \"zipball_url\": \"https://api.github.com/repos/vigneshsweekaran/hello-world/zipball/clean\",\n  \"body\": \"\"\n}\n</code></pre>"},{"location":"linux-commands/part-8/","title":"Linux commands Part 8","text":""},{"location":"linux-commands/part-8/#_1","title":"|","text":"<p>Pipe is used to pass the output from one command/program to the input for another command</p> <pre><code>[opc@new-k8s test]$ pwd\n/home/opc/test\n[opc@new-k8s test]$ ll\ntotal 8\ndrwxrwxr-x. 2 opc opc 27 Mar 17 14:03 client\n-rw-rw-r--. 1 opc opc 77 Apr 12 12:26 Dockerfile\n-rw-rw-r--. 1 opc opc  0 Apr 12 12:54 hello.txt\n-rw-rw-r--. 1 opc opc 23 Apr 12 12:56 mani.txt\n-rw-rw-r--. 1 opc opc  0 Mar 17 14:03 server\ndrwxrwxr-x. 3 opc opc 18 Apr 13 12:46 vignesh\n[opc@new-k8s test]$ ll | wc -l\n7\n</code></pre>"},{"location":"linux-commands/part-8/#jq","title":"jq","text":"<p>Used to read the JSON data or Json file</p> <pre><code>[opc@new-k8s ~]$ pwd\n/home/opc\n[opc@new-k8s ~]$ ll\ntotal 3072012\n-rw-rw-r--. 1 opc  opc         852 Apr 15 03:15 fruits.txt\ndrwxrwxr-x. 2 opc  opc          39 Apr 15 12:46 myprogram\n-rwxrwxr-x. 1 opc  opc          81 Apr 15 13:27 newtest\n-rw-rw-r--. 1 opc  opc        2026 Apr 18 11:39 output.json\ndrwxrwxr-x. 2 opc  opc          25 Nov 26  2021 prometheus\n-rw-r--r--. 1 root root 3145728000 Jan 11  2022 swapfile\ndrwxrwxr-x. 4 opc  opc         100 Apr 15 13:04 test\n[opc@new-k8s ~]$ cat output.json | jq .\n{\n  \"url\": \"https://api.github.com/repos/vigneshsweekaran/hello-world/releases/43010389\",\n  \"assets_url\": \"https://api.github.com/repos/vigneshsweekaran/hello-world/releases/43010389/assets\",\n  \"upload_url\": \"https://uploads.github.com/repos/vigneshsweekaran/hello-world/releases/43010389/assets{?name,label}\",\n  \"html_url\": \"https://github.com/vigneshsweekaran/hello-world/releases/tag/clean\",\n  \"id\": 43010389,\n  \"author\": {\n    \"login\": \"vigneshsweekaran\",\n    \"id\": 40670015,\n    \"node_id\": \"MDQ6VXNlcjQwNjcwMDE1\",\n    \"avatar_url\": \"https://avatars.githubusercontent.com/u/40670015?v=4\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/vigneshsweekaran\",\n    \"html_url\": \"https://github.com/vigneshsweekaran\",\n    \"followers_url\": \"https://api.github.com/users/vigneshsweekaran/followers\",\n    \"following_url\": \"https://api.github.com/users/vigneshsweekaran/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/vigneshsweekaran/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/vigneshsweekaran/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/vigneshsweekaran/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/vigneshsweekaran/orgs\",\n    \"repos_url\": \"https://api.github.com/users/vigneshsweekaran/repos\",\n    \"events_url\": \"https://api.github.com/users/vigneshsweekaran/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/vigneshsweekaran/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n  },\n  \"node_id\": \"MDc6UmVsZWFzZTQzMDEwMzg5\",\n  \"tag_name\": \"clean\",\n  \"target_commitish\": \"master\",\n  \"name\": \"Clean repo with maven application\",\n  \"draft\": false,\n  \"prerelease\": false,\n  \"created_at\": \"2021-05-16T06:18:49Z\",\n  \"published_at\": \"2021-05-16T06:26:47Z\",\n  \"assets\": [],\n  \"tarball_url\": \"https://api.github.com/repos/vigneshsweekaran/hello-world/tarball/clean\",\n  \"zipball_url\": \"https://api.github.com/repos/vigneshsweekaran/hello-world/zipball/clean\",\n  \"body\": \"\"\n}\n</code></pre>"},{"location":"linux-commands/part-8/#using-jq-command-directly-with-curl-output","title":"Using jq command directly with curl output","text":"<pre><code>[opc@new-k8s ~]$ curl https://api.github.com/repos/vigneshsweekaran/hello-world/releases/latest | jq .\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  2026  100  2026    0     0   3455      0 --:--:-- --:--:-- --:--:-- 3463\n{\n  \"url\": \"https://api.github.com/repos/vigneshsweekaran/hello-world/releases/43010389\",\n  \"assets_url\": \"https://api.github.com/repos/vigneshsweekaran/hello-world/releases/43010389/assets\",\n  \"upload_url\": \"https://uploads.github.com/repos/vigneshsweekaran/hello-world/releases/43010389/assets{?name,label}\",\n  \"html_url\": \"https://github.com/vigneshsweekaran/hello-world/releases/tag/clean\",\n  \"id\": 43010389,\n  \"author\": {\n    \"login\": \"vigneshsweekaran\",\n    \"id\": 40670015,\n    \"node_id\": \"MDQ6VXNlcjQwNjcwMDE1\",\n    \"avatar_url\": \"https://avatars.githubusercontent.com/u/40670015?v=4\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/vigneshsweekaran\",\n    \"html_url\": \"https://github.com/vigneshsweekaran\",\n    \"followers_url\": \"https://api.github.com/users/vigneshsweekaran/followers\",\n    \"following_url\": \"https://api.github.com/users/vigneshsweekaran/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/vigneshsweekaran/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/vigneshsweekaran/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/vigneshsweekaran/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/vigneshsweekaran/orgs\",\n    \"repos_url\": \"https://api.github.com/users/vigneshsweekaran/repos\",\n    \"events_url\": \"https://api.github.com/users/vigneshsweekaran/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/vigneshsweekaran/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n  },\n  \"node_id\": \"MDc6UmVsZWFzZTQzMDEwMzg5\",\n  \"tag_name\": \"clean\",\n  \"target_commitish\": \"master\",\n  \"name\": \"Clean repo with maven application\",\n  \"draft\": false,\n  \"prerelease\": false,\n  \"created_at\": \"2021-05-16T06:18:49Z\",\n  \"published_at\": \"2021-05-16T06:26:47Z\",\n  \"assets\": [],\n  \"tarball_url\": \"https://api.github.com/repos/vigneshsweekaran/hello-world/tarball/clean\",\n  \"zipball_url\": \"https://api.github.com/repos/vigneshsweekaran/hello-world/zipball/clean\",\n  \"body\": \"\"\n}\n</code></pre>"},{"location":"linux-commands/part-8/#redaing-only-one-data-from-json-file-using-jq","title":"Redaing only one data from JSON file using jq","text":"<pre><code>[opc@new-k8s ~]$ cat output.json | jq .url\n\"https://api.github.com/repos/vigneshsweekaran/hello-world/releases/43010389\"\n</code></pre>"},{"location":"linux-commands/part-8/#redaing-only-one-data-from-json-file-using-jq-and-removing-the-double-quotes-from-output","title":"Redaing only one data from JSON file using jq and removing the double quotes from output","text":"<pre><code>[opc@new-k8s ~]$ cat output.json | jq -r .url\nhttps://api.github.com/repos/vigneshsweekaran/hello-world/releases/43010389\n</code></pre>"},{"location":"linux-commands/part-8/#how-to-read-the-value-from-json-using-which-is-two-level-inner","title":"How to read the value from JSON using, which is two level inner","text":"<pre><code>[opc@new-k8s ~]$ cat output.json | jq .\n{\n  \"url\": \"https://api.github.com/repos/vigneshsweekaran/hello-world/releases/43010389\",\n  \"assets_url\": \"https://api.github.com/repos/vigneshsweekaran/hello-world/releases/43010389/assets\",\n  \"upload_url\": \"https://uploads.github.com/repos/vigneshsweekaran/hello-world/releases/43010389/assets{?name,label}\",\n  \"html_url\": \"https://github.com/vigneshsweekaran/hello-world/releases/tag/clean\",\n  \"id\": 43010389,\n  \"author\": {\n    \"login\": \"vigneshsweekaran\",\n    \"id\": 40670015,\n    \"node_id\": \"MDQ6VXNlcjQwNjcwMDE1\",\n    \"avatar_url\": \"https://avatars.githubusercontent.com/u/40670015?v=4\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/vigneshsweekaran\",\n    \"html_url\": \"https://github.com/vigneshsweekaran\",\n    \"followers_url\": \"https://api.github.com/users/vigneshsweekaran/followers\",\n    \"following_url\": \"https://api.github.com/users/vigneshsweekaran/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/vigneshsweekaran/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/vigneshsweekaran/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/vigneshsweekaran/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/vigneshsweekaran/orgs\",\n    \"repos_url\": \"https://api.github.com/users/vigneshsweekaran/repos\",\n    \"events_url\": \"https://api.github.com/users/vigneshsweekaran/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/vigneshsweekaran/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n  },\n  \"node_id\": \"MDc6UmVsZWFzZTQzMDEwMzg5\",\n  \"tag_name\": \"clean\",\n  \"target_commitish\": \"master\",\n  \"name\": \"Clean repo with maven application\",\n  \"draft\": false,\n  \"prerelease\": false,\n  \"created_at\": \"2021-05-16T06:18:49Z\",\n  \"published_at\": \"2021-05-16T06:26:47Z\",\n  \"assets\": [],\n  \"tarball_url\": \"https://api.github.com/repos/vigneshsweekaran/hello-world/tarball/clean\",\n  \"zipball_url\": \"https://api.github.com/repos/vigneshsweekaran/hello-world/zipball/clean\",\n  \"body\": \"\"\n}\n[opc@new-k8s ~]$ cat output.json | jq .author.login\n\"vigneshsweekaran\"\n</code></pre>"},{"location":"linux-commands/part-8/#how-to-check-the-status-code-of-last-executed-command","title":"How to check the status code of last executed command","text":"<p>$? is a special variable, which will hold the status code of last command executed</p> <p>In Linux, 0 means success, any other value is failure</p> <pre><code>[opc@new-k8s ~]$ ll\ntotal 3072008\n-rw-rw-r--. 1 opc  opc         852 Apr 15 03:15 fruits.txt\n-rwxrwxr-x. 1 opc  opc          81 Apr 15 13:27 newtest\ndrwxrwxr-x. 2 opc  opc          25 Nov 26  2021 prometheus\n-rw-r--r--. 1 root root 3145728000 Jan 11  2022 swapfile\ndrwxrwxr-x. 4 opc  opc         100 Apr 15 13:04 test\n[opc@new-k8s ~]$ echo $?\n0\n[opc@new-k8s ~]$ ddhghg\n-bash: ddhghg: command not found\n[opc@new-k8s ~]$ echo $?\n127\n</code></pre>"},{"location":"linux-commands/part-8/#grep","title":"grep","text":"<p>grep command is used to serach for a word and print those lines</p> <pre><code>[opc@new-k8s ~]$ cat /etc/passwd | grep bash\nroot:x:0:0:root:/root:/bin/bash\nopc:x:1000:1000:Oracle Public Cloud User:/home/opc:/bin/bash\nvignesh:x:1001:1001::/home/vignesh:/bin/bash\n</code></pre>"},{"location":"linux-commands/part-8/#grep-command-ignoring-the-case","title":"grep command - ignoring the case","text":"<p>-i \u2192 Is used to ignore the case</p> <pre><code>[opc@new-k8s ~]$ cat /etc/passwd | grep BASH\n[opc@new-k8s ~]$ cat /etc/passwd | grep -i BASH\nroot:x:0:0:root:/root:/bin/bash\nopc:x:1000:1000:Oracle Public Cloud User:/home/opc:/bin/bash\nvignesh:x:1001:1001::/home/vignesh:/bin/bash\n</code></pre>"},{"location":"linux-commands/part-8/#grep-find-the-match-and-print-next-n-number-of-lines","title":"grep - find the match and print next n number of lines","text":"<p>-An \u2192 arugument used to print the next n number of lines</p> <pre><code>[opc@new-k8s ~]$ cat states.txt | grep -i tamil\nTamil Nadu\n[opc@new-k8s ~]$ cat states.txt | grep -i -A5 tamil\nTamil Nadu\nTripura\nTelangana\nUttar Pradesh\nUttarakhand\nWest Bengal\n</code></pre>"},{"location":"linux-commands/part-8/#grep-find-the-match-and-print-n-number-of-lines-before-the-match","title":"grep - find the match and print n number of lines before the match","text":"<p>-Bn \u2192 arugument used to print the next n number of lines</p> <pre><code>[opc@new-k8s ~]$ cat states.txt | grep -i tamil\nTamil Nadu\n[opc@new-k8s ~]$ cat states.txt | grep -i -B5 tamil\nNagaland\nOdisha\nPunjab\nRajasthan\nSikkim\nTamil Nadu\n</code></pre>"},{"location":"linux-commands/part-8/#awk","title":"awk","text":"<p>awk command is used to print the specific columns from the output.</p> <p>It has lot of features to operate on the outputs</p> <pre><code>[opc@new-k8s ~]$ ll\ntotal 3072024\n-rw-rw-r--. 1 opc  opc         852 Apr 15 03:15 fruits.txt\n-rw-rw-r--. 1 opc  opc        9943 Apr 19 11:16 india.txt\n-rwxrwxr-x. 1 opc  opc          81 Apr 15 13:27 newtest\ndrwxrwxr-x. 2 opc  opc          25 Nov 26  2021 prometheus\n-rw-rw-r--. 1 opc  opc         282 Apr 19 11:22 states.txt\n-rw-r--r--. 1 root root 3145728000 Jan 11  2022 swapfile\ndrwxrwxr-x. 4 opc  opc         100 Apr 15 13:04 test\n[opc@new-k8s ~]$ ll | awk '{print $9}'\n\nfruits.txt\nindia.txt\nnewtest\nprometheus\nstates.txt\nswapfile\ntest\n</code></pre>"},{"location":"linux-commands/part-8/#awk-customising-the-output","title":"awk - customising the output","text":"<pre><code>[opc@new-k8s ~]$ ll\ntotal 3072024\n-rw-rw-r--. 1 opc  opc         852 Apr 15 03:15 fruits.txt\n-rw-rw-r--. 1 opc  opc        9943 Apr 19 11:16 india.txt\n-rwxrwxr-x. 1 opc  opc          81 Apr 15 13:27 newtest\ndrwxrwxr-x. 2 opc  opc          25 Nov 26  2021 prometheus\n-rw-rw-r--. 1 opc  opc         282 Apr 19 11:22 states.txt\n-rw-r--r--. 1 root root 3145728000 Jan 11  2022 swapfile\ndrwxrwxr-x. 4 opc  opc         100 Apr 15 13:04 test\n[opc@new-k8s ~]$ ll | awk '{print $1 \"t\" $9}'\ntotal\n-rw-rw-r--.     fruits.txt\n-rw-rw-r--.     india.txt\n-rwxrwxr-x.     newtest\ndrwxrwxr-x.     prometheus\n-rw-rw-r--.     states.txt\n-rw-r--r--.     swapfile\ndrwxrwxr-x.     test\n</code></pre>"},{"location":"linux-commands/part-8/#cut","title":"cut","text":"<p>cut command can be used to print the specific column -d \u2192 delimiter -f \u2192 field number</p> <pre><code>[opc@new-k8s ~]$ ll\ntotal 3072024\n-rw-rw-r--. 1 opc  opc         852 Apr 15 03:15 fruits.txt\n-rw-rw-r--. 1 opc  opc        9943 Apr 19 11:16 india.txt\n-rwxrwxr-x. 1 opc  opc          81 Apr 15 13:27 newtest\ndrwxrwxr-x. 2 opc  opc          25 Nov 26  2021 prometheus\n-rw-rw-r--. 1 opc  opc         282 Apr 19 11:22 states.txt\n-rw-r--r--. 1 root root 3145728000 Jan 11  2022 swapfile\ndrwxrwxr-x. 4 opc  opc         100 Apr 15 13:04 test\n[opc@new-k8s ~]$ ll | cut -d \" \" -f 1\ntotal\n-rw-rw-r--.\n-rw-rw-r--.\n-rwxrwxr-x.\ndrwxrwxr-x.\n-rw-rw-r--.\n-rw-r--r--.\ndrwxrwxr-x.\n</code></pre>"},{"location":"linux-commands/part-8/#cut-command-with-different-delimiter","title":"cut command with different delimiter","text":"<p>cat /etc/passwd | cut -d \":\" -f 1</p> <pre><code>[opc@new-k8s ~]$ cat /etc/passwd\nroot:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\nadm:x:3:4:adm:/var/adm:/sbin/nologin\nlp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\nsync:x:5:0:sync:/sbin:/bin/sync\nshutdown:x:6:0:shutdown:/sbin:/sbin/shutdown\nhalt:x:7:0:halt:/sbin:/sbin/halt\nmail:x:8:12:mail:/var/spool/mail:/sbin/nologin\noperator:x:11:0:operator:/root:/sbin/nologin\ngames:x:12:100:games:/usr/games:/sbin/nologin\nftp:x:14:50:FTP User:/var/ftp:/sbin/nologin\nnobody:x:99:99:Nobody:/:/sbin/nologin\nsystemd-network:x:192:192:systemd Network Management:/:/sbin/nologin\ndbus:x:81:81:System message bus:/:/sbin/nologin\npolkitd:x:999:998:User for polkitd:/:/sbin/nologin\nlibstoragemgmt:x:998:997:daemon account for libstoragemgmt:/var/run/lsm:/sbin/nologin\nrpc:x:32:32:Rpcbind Daemon:/var/lib/rpcbind:/sbin/nologin\nabrt:x:173:173::/etc/abrt:/sbin/nologin\nrpcuser:x:29:29:RPC Service User:/var/lib/nfs:/sbin/nologin\nnfsnobody:x:65534:65534:Anonymous NFS User:/var/lib/nfs:/sbin/nologin\nsshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin\npostfix:x:89:89::/var/spool/postfix:/sbin/nologin\nchrony:x:997:994::/var/lib/chrony:/sbin/nologin\nntp:x:38:38::/etc/ntp:/sbin/nologin\ntcpdump:x:72:72::/:/sbin/nologin\noracle-cloud-agent:x:996:993:Oracle Cloud Agent Service User:/var/lib/oracle-cloud-agent:/usr/sbin/nologin\noracle-cloud-agent-updater:x:995:993:Oracle Cloud Agent Updater Service User:/var/lib/oracle-cloud-agent:/usr/sbin/nologin\nocarun:x:994:993:Oracle Cloud Agent Runcommand Service User:/var/lib/ocarun:/usr/sbin/nologin\nopc:x:1000:1000:Oracle Public Cloud User:/home/opc:/bin/bash\njenkins:x:993:991:Jenkins Automation Server:/var/lib/jenkins:/bin/false\nvignesh:x:1001:1001::/home/vignesh:/bin/bash\n[opc@new-k8s ~]$ cat /etc/passwd | cut -d \":\" -f 1\nroot\nbin\ndaemon\nadm\nlp\nsync\nshutdown\nhalt\nmail\noperator\ngames\nftp\nnobody\nsystemd-network\ndbus\npolkitd\nlibstoragemgmt\nrpc\nabrt\nrpcuser\nnfsnobody\nsshd\npostfix\nchrony\nntp\ntcpdump\noracle-cloud-agent\noracle-cloud-agent-updater\nocarun\nopc\njenkins\nvignesh\n</code></pre>"},{"location":"linux-commands/part-8/#sed","title":"sed","text":"<p>sed command can be used to replace the word</p> <p>By default, the sed command replaces the first occurrence of the pattern in each line and it won\u2019t replace the second, third\u2026occurrence in the line.</p> <p>It prints the changed content to screen by default</p> <pre><code>[opc@new-k8s ~]$ cat hello.txt\nhello world\nhello world world my world\n[opc@new-k8s ~]$ sed \"s/world/devops/\" hello.txt\nhello devops\nhello devops world my world\n</code></pre>"},{"location":"linux-commands/part-8/#sed-change-all-the-matches-in-a-line","title":"sed - Change all the matches in a line","text":"<p>g \u2192 replace all matches in a line</p> <pre><code>[opc@new-k8s ~]$ cat hello.txt\nhello world\nhello world world my world\n[opc@new-k8s ~]$ sed \"s/world/devops/g\" hello.txt\nhello devops\nhello devops devops my devops\n</code></pre>"},{"location":"linux-commands/part-8/#sed-save-the-change-in-original-file","title":"sed - save the change in original file","text":"<p>-i \u2192 argument can be used to save the chnage to actual file</p> <pre><code>[opc@new-k8s ~]$ cat hello.txt\nhello world\nhello world world my world\n[opc@new-k8s ~]$ sed \"s/world/devops/g\" hello.txt\nhello devops\nhello devops devops my devops\n[opc@new-k8s ~]$ cat hello.txt\nhello world\nhello world world my world\n[opc@new-k8s ~]$ sed -i \"s/world/devops/g\" hello.txt\n[opc@new-k8s ~]$ cat hello.txt\nhello devops\nhello devops devops my devops\n</code></pre>"},{"location":"linux-commands/part-9/","title":"Linux commands Part 9","text":""},{"location":"linux-commands/part-9/#find","title":"find","text":"<p>find command is used to find the files or directories</p> <pre><code>[opc@new-k8s ~]$ ll\ntotal 3072036\n-rw-rw-r--. 1 opc  opc         852 Apr 15 03:15 fruits.txt\n-rw-rw-r--. 1 opc  opc          43 Apr 19 12:38 hello.txt\n-rw-rw-r--. 1 opc  opc        9943 Apr 19 11:16 india.txt\n-rwxrwxr-x. 1 opc  opc          81 Apr 15 13:27 newtest\n-rw-rw-r--. 1 opc  opc        2026 Apr 19 12:06 output.json\ndrwxrwxr-x. 2 opc  opc          25 Nov 26  2021 prometheus\n-rw-rw-r--. 1 opc  opc         282 Apr 19 12:34 states.txt\n-rw-r--r--. 1 root root 3145728000 Jan 11  2022 swapfile\ndrwxrwxr-x. 4 opc  opc         100 Apr 15 13:04 test\n-rw-rw-r--. 1 opc  opc          74 Apr 19 12:11 test.json\n</code></pre> <pre><code>[opc@new-k8s ~]$ pwd\n/home/opc\n</code></pre> <pre><code>[opc@new-k8s ~]$ find ./ -name test.json\n./test.json\n</code></pre> <p>You can also find the files in diferrent folder</p> <pre><code>[opc@new-k8s ~]$ pwd\n/home/opc\n</code></pre> <pre><code>[opc@new-k8s ~]$ ll /tmp\ntotal 8\n-rw-------. 1 root root 1097 Apr 20 08:40 dhclient-exit-hooksPuY.log\n-rw-rw-r--. 1 opc  opc  2026 Apr 20 11:14 output.json\n</code></pre> <pre><code>[opc@new-k8s ~]$ find /tmp -name output.json\n/tmp/output.json\n</code></pre> <p>You can also find the file in whole file system, but it will take some time, it will check all files and directories</p> <pre><code>find: \u2018/var/spool/at\u2019: Permission denied\nfind: \u2018/root\u2019: Permission denied\n/tmp/output.json\nfind: \u2018/usr/share/polkit-1/rules.d\u2019: Permission denied\nfind: \u2018/usr/libexec/initscripts/legacy-actions/auditd\u2019: Permission denied\n/home/opc/output.json\nfind: \u2018/home/vignesh\u2019: Permission denied\nfind: \u2018/opt/containerd\u2019: Permission denied\n</code></pre>"},{"location":"linux-commands/part-9/#search-for-empty-files-and-directories-and-using-find","title":"Search for empty files and directories and using find","text":"<pre><code>[opc@new-k8s ~]$ find ./ -empty\n./test/server\n./test/client/server-client\n./test/hello.txt\n./test/vignesh/mani/raghav\n</code></pre>"},{"location":"linux-commands/part-9/#search-for-empty-files-only","title":"Search for empty files only","text":"<pre><code>[opc@new-k8s ~]$ find ./ -type f -empty\n./test/server\n./test/client/server-client\n./test/hello.txt\n</code></pre>"},{"location":"linux-commands/part-9/#search-for-empty-directories-only","title":"Search for empty directories only","text":"<pre><code>[opc@new-k8s ~]$ find ./ -type d -empty\n./test/vignesh/mani/raghav\n</code></pre>"},{"location":"linux-commands/part-9/#search-for-empty-file-and-delete-those-files","title":"Search for empty file and delete those files","text":"<pre><code>find ./ -type f -empty -exec rm -i {} ;\n</code></pre>"},{"location":"linux-commands/part-9/#locate","title":"locate","text":"<p>locate command used for quickly finding files and directories</p> <p>locate command doesn't search the entire filesystem, but looks through a regularly updated file database in the system. Thus, the search completes much faster</p> <p>-i \u2192 ignore case</p> <pre><code>[opc@new-k8s ~]$ locate hello\n/home/opc/hello.txt\n/home/opc/test/hello.txt\n</code></pre> <p>Sometimes, even delete files are shown in the output of locate command. Because its not updated yet in locate database</p> <p>-e argument to search the filesystem</p> <pre><code>[opc@new-k8s ~]$ pwd\n/home/opc\n</code></pre> <pre><code>[opc@new-k8s ~]$ ll\ntotal 3072032\n-rw-rw-r--. 1 opc  opc         852 Apr 15 03:15 fruits.txt\n-rw-rw-r--. 1 opc  opc           0 Apr 20 11:46 hello.txt\n-rw-rw-r--. 1 opc  opc        9943 Apr 19 11:16 india.txt\n-rwxrwxr-x. 1 opc  opc          81 Apr 15 13:27 newtest\n-rw-rw-r--. 1 opc  opc        2026 Apr 19 12:06 output.json\ndrwxrwxr-x. 2 opc  opc          25 Nov 26  2021 prometheus\n-rw-rw-r--. 1 opc  opc         282 Apr 19 12:34 states.txt\n-rw-r--r--. 1 root root 3145728000 Jan 11  2022 swapfile\ndrwxrwxr-x. 4 opc  opc          86 Apr 20 11:46 test\n-rw-rw-r--. 1 opc  opc          74 Apr 19 12:11 test.json\n</code></pre> <pre><code>[opc@new-k8s ~]$ locate hello.txt\n/home/opc/hello.txt\n/home/opc/test/hello.txt\n</code></pre> <pre><code>[opc@new-k8s ~]$ rm -f hello.txt\n</code></pre> <pre><code>[opc@new-k8s ~]$ locate hello.txt\n/home/opc/hello.txt\n/home/opc/test/hello.txt\n</code></pre> <pre><code>[opc@new-k8s ~]$ locate -e hello.txt\n/home/opc/test/hello.txt\n</code></pre>"},{"location":"linux-commands/part-9/#sort","title":"sort","text":"<pre><code>[opc@new-k8s ~]$ cat states.txt\nAndhra Pradesh\nArunachal Pradesh\nAssam\nBihar\nChhattisgarh\nGujarat\nHaryana\nTamil Nadu\nHimachal Pradesh\nJharkhand\nKarnataka\nKerala\nMaharashtra\nMadhya Pradesh\nManipur\nMeghalaya\nMizoram\nNagaland\nOdisha\nPunjab\nRajasthan\nSikkim\nTripura\nTelangana\nUttar Pradesh\nUttarakhand\nWest Bengal\nGoa\n</code></pre> <pre><code>[opc@new-k8s ~]$ cat states.txt | sort\nAndhra Pradesh\nArunachal Pradesh\nAssam\nBihar\nChhattisgarh\nGoa\nGujarat\nHaryana\nHimachal Pradesh\nJharkhand\nKarnataka\nKerala\nMadhya Pradesh\nMaharashtra\nManipur\nMeghalaya\nMizoram\nNagaland\nOdisha\nPunjab\nRajasthan\nSikkim\nTamil Nadu\nTelangana\nTripura\nUttarakhand\nUttar Pradesh\nWest Bengal\n</code></pre>"},{"location":"linux-commands/part-9/#uniq","title":"uniq","text":"<pre><code>[opc@new-k8s ~]$ cat names.txt\nI love devops.\nI love devops.\nI love devops.\n\nI love music.\nI love movies.\nI love movies.\n[opc@new-k8s ~]$ cat names.txt | uniq\nI love devops.\n\nI love music.\nI love movies.\n[opc@new-k8s ~]$ cat names.txt | uniq -c\n      3 I love devops.\n      1\n      1 I love music.\n      2 I love movies.\n</code></pre> <p>Lines which are repeated only</p> <pre><code>[opc@new-k8s ~]$ uniq -d names.txt\nI love devops.\nI love movies.\n</code></pre> <p>Lines which are uniq</p> <pre><code>[opc@new-k8s ~]$ uniq -u names.txt\n\nI love music.\n</code></pre>"},{"location":"linux-commands/part-9/#systemctl","title":"systemctl","text":"<p>Systemctl command is used to check the status, start, stop, restart, reload, enable and disable the service / background process</p> <p>In Linux, we have sshd service, which is used to connect to the linux servers.</p>"},{"location":"linux-commands/part-9/#to-check-the-status-of-a-service-using-systemctl","title":"To check the status of a service using systemctl","text":"<p>systemctl status service_name</p> <pre><code>\u25cf sshd.service - OpenSSH server daemon\n   Loaded: loaded (/usr/lib/systemd/system/sshd.service; enabled; vendor preset: enabled)\n   Active: active (running) since Thu 2023-04-20 12:34:07 GMT; 11h ago\n     Docs: man:sshd(8)\n           man:sshd_config(5)\n Main PID: 26927 (sshd)\n    Tasks: 3\n   Memory: 41.3M\n   CGroup: /system.slice/sshd.service\n           \u251c\u2500 2703 sshd: root [priv]\n           \u251c\u2500 2704 sshd: root [net]\n           \u2514\u250026927 /usr/sbin/sshd -D\n</code></pre>"},{"location":"linux-commands/part-9/#to-start-the-service-using-systemctl","title":"To start the service using systemctl","text":"<p>systemctl start service_name</p> <p>httpd is the most popular web server</p> <pre><code>[opc@new-k8s ~]$ systemctl status httpd\n\u25cf httpd.service - The Apache HTTP Server\n   Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset: disabled)\n   Active: inactive (dead)\n     Docs: man:httpd(8)\n           man:apachectl(8)\n</code></pre> <pre><code>[opc@new-k8s ~]$ sudo systemctl start httpd\n</code></pre> <pre><code>[opc@new-k8s ~]$ sudo systemctl status httpd\n\u25cf httpd.service - The Apache HTTP Server\n   Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset: disabled)\n   Active: active (running) since Fri 2023-04-21 00:02:49 GMT; 6s ago\n     Docs: man:httpd(8)\n           man:apachectl(8)\n Main PID: 22505 (httpd)\n   Status: \"Processing requests...\"\n    Tasks: 6\n   Memory: 25.6M\n   CGroup: /system.slice/httpd.service\n           \u251c\u250022505 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250022506 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250022507 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250022508 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250022509 /usr/sbin/httpd -DFOREGROUND\n           \u2514\u250022510 /usr/sbin/httpd -DFOREGROUND\n\nApr 21 00:02:49 new-k8s systemd[1]: Starting The Apache HTTP Server...\nApr 21 00:02:49 new-k8s systemd[1]: Started The Apache HTTP Server.\n</code></pre>"},{"location":"linux-commands/part-9/#to-stop-the-service-using-systemctl","title":"To stop the service using systemctl","text":"<p>systemctl stop service_name</p> <pre><code>[opc@new-k8s ~]$ sudo systemctl stop httpd\n</code></pre> <pre><code>[opc@new-k8s ~]$ sudo systemctl status httpd\n\u25cf httpd.service - The Apache HTTP Server\n   Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset: disabled)\n   Active: inactive (dead)\n     Docs: man:httpd(8)\n           man:apachectl(8)\n\nApr 21 00:02:49 new-k8s systemd[1]: Starting The Apache HTTP Server...\nApr 21 00:02:49 new-k8s systemd[1]: Started The Apache HTTP Server.\nApr 21 00:04:11 new-k8s systemd[1]: Stopping The Apache HTTP Server...\nApr 21 00:04:12 new-k8s systemd[1]: Stopped The Apache HTTP Server.\n</code></pre>"},{"location":"linux-commands/part-9/#to-restart-the-service-using-systemctl","title":"To restart the service using systemctl","text":"<p>systemctl restart service_name</p> <pre><code>[opc@new-k8s ~]$ sudo systemctl status httpd\n\u25cf httpd.service - The Apache HTTP Server\n   Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset: disabled)\n   Active: active (running) since Fri 2023-04-21 00:05:06 GMT; 14s ago\n     Docs: man:httpd(8)\n           man:apachectl(8)\n Main PID: 23901 (httpd)\n   Status: \"Total requests: 0; Current requests/sec: 0; Current traffic:   0 B/sec\"\n    Tasks: 6\n   Memory: 25.6M\n   CGroup: /system.slice/httpd.service\n           \u251c\u250023901 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250023906 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250023907 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250023908 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250023909 /usr/sbin/httpd -DFOREGROUND\n           \u2514\u250023910 /usr/sbin/httpd -DFOREGROUND\n\nApr 21 00:05:06 new-k8s systemd[1]: Starting The Apache HTTP Server...\nApr 21 00:05:06 new-k8s systemd[1]: Started The Apache HTTP Server.\n</code></pre> <pre><code>[opc@new-k8s ~]$ sudo systemctl restart httpd\n</code></pre> <pre><code>[opc@new-k8s ~]$ sudo systemctl status httpd\n\u25cf httpd.service - The Apache HTTP Server\n   Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset: disabled)\n   Active: active (running) since Fri 2023-04-21 00:06:17 GMT; 16s ago\n     Docs: man:httpd(8)\n           man:apachectl(8)\n  Process: 24883 ExecStop=/bin/kill -WINCH ${MAINPID} (code=exited, status=0/SUCCESS)\n Main PID: 24904 (httpd)\n   Status: \"Total requests: 0; Current requests/sec: 0; Current traffic:   0 B/sec\"\n    Tasks: 6\n   Memory: 25.1M\n   CGroup: /system.slice/httpd.service\n           \u251c\u250024904 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250024905 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250024906 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250024907 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250024908 /usr/sbin/httpd -DFOREGROUND\n           \u2514\u250024909 /usr/sbin/httpd -DFOREGROUND\n\nApr 21 00:06:17 new-k8s systemd[1]: Starting The Apache HTTP Server...\nApr 21 00:06:17 new-k8s systemd[1]: Started The Apache HTTP Server.\n</code></pre>"},{"location":"linux-commands/part-9/#to-enable-the-service-using-systemctl","title":"To enable the service using systemctl","text":"<p>If we restart/ stop-start our Linux system. The service will be staopped and it will not start automatically. To start the service automatically on start / restart, we need to enable the service</p> <p>systemctl enable service_name</p> <pre><code>[opc@new-k8s ~]$ sudo systemctl status httpd\n\u25cf httpd.service - The Apache HTTP Server\n   Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset: disabled)\n   Active: active (running) since Fri 2023-04-21 00:06:59 GMT; 1min 35s ago\n     Docs: man:httpd(8)\n           man:apachectl(8)\n  Process: 25405 ExecStop=/bin/kill -WINCH ${MAINPID} (code=exited, status=0/SUCCESS)\n Main PID: 25413 (httpd)\n   Status: \"Total requests: 0; Current requests/sec: 0; Current traffic:   0 B/sec\"\n    Tasks: 6\n   Memory: 25.6M\n   CGroup: /system.slice/httpd.service\n           \u251c\u250025413 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250025414 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250025415 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250025416 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250025417 /usr/sbin/httpd -DFOREGROUND\n           \u2514\u250025418 /usr/sbin/httpd -DFOREGROUND\n</code></pre> <p>Here its mentioned the service is disabled</p> <pre><code>Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset: disabled)\n</code></pre> <pre><code>[opc@new-k8s ~]$ sudo systemctl enable httpd\nCreated symlink from /etc/systemd/system/multi-user.target.wants/httpd.service to /usr/lib/systemd/system/httpd.service.\n</code></pre> <pre><code>[opc@new-k8s ~]$ sudo systemctl status httpd\n\u25cf httpd.service - The Apache HTTP Server\n   Loaded: loaded (/usr/lib/systemd/system/httpd.service; enabled; vendor preset: disabled)\n   Active: active (running) since Fri 2023-04-21 00:06:59 GMT; 4min 54s ago\n     Docs: man:httpd(8)\n           man:apachectl(8)\n Main PID: 25413 (httpd)\n   Status: \"Total requests: 0; Current requests/sec: 0; Current traffic:   0 B/sec\"\n   CGroup: /system.slice/httpd.service\n           \u251c\u250025413 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250025414 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250025415 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250025416 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250025417 /usr/sbin/httpd -DFOREGROUND\n           \u2514\u250025418 /usr/sbin/httpd -DFOREGROUND\n\nApr 21 00:06:59 new-k8s systemd[1]: Stopped The Apache HTTP Server.\nApr 21 00:06:59 new-k8s systemd[1]: Starting The Apache HTTP Server...\nApr 21 00:06:59 new-k8s systemd[1]: Started The Apache HTTP Server.\n</code></pre> <p>Now the service is enabled</p> <pre><code>Loaded: loaded (/usr/lib/systemd/system/httpd.service; enabled; vendor preset: disabled)\n</code></pre>"},{"location":"linux-commands/part-9/#to-disable-the-service-using-systemctl","title":"To disable the service using systemctl","text":"<p>systemctl disable service_name</p> <pre><code>[opc@new-k8s ~]$ sudo systemctl disable httpd\nRemoved symlink /etc/systemd/system/multi-user.target.wants/httpd.service.\n</code></pre> <pre><code>[opc@new-k8s ~]$ sudo systemctl status httpd\n\u25cf httpd.service - The Apache HTTP Server\n   Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset: disabled)\n   Active: active (running) since Fri 2023-04-21 00:06:59 GMT; 8min ago\n     Docs: man:httpd(8)\n           man:apachectl(8)\n Main PID: 25413 (httpd)\n   Status: \"Total requests: 0; Current requests/sec: 0; Current traffic:   0 B/sec\"\n   CGroup: /system.slice/httpd.service\n           \u251c\u250025413 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250025414 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250025415 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250025416 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250025417 /usr/sbin/httpd -DFOREGROUND\n           \u2514\u250025418 /usr/sbin/httpd -DFOREGROUND\n\nApr 21 00:06:59 new-k8s systemd[1]: Stopped The Apache HTTP Server.\nApr 21 00:06:59 new-k8s systemd[1]: Starting The Apache HTTP Server...\nApr 21 00:06:59 new-k8s systemd[1]: Started The Apache HTTP Server.\n</code></pre> <p>Now the service is disabled</p> <pre><code>Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset: disabled)\n</code></pre>"},{"location":"linux-commands/part-9/#service","title":"service","text":"<p>service is an \"high-level\" command used for starting and stopping services in different unixes and linuxes. Depending on the \"lower-level\" service manager, service redirects on different binaries.</p> <p>For example, on CentOS 7 it redirects to systemctl, while on CentOS 6 it directly calls the relative /etc/init.d script. On the other hand, in older Ubuntu releases it redirects to upstart</p> <p>service is adequate for basic service management, while directly calling systemctl give greater control options.</p>"},{"location":"linux-commands/part-9/#to-check-the-status-of-a-service-using-service-command","title":"To check the status of a service using service command","text":"<p>service service_name status</p> <pre><code>[opc@new-k8s ~]$ sudo service httpd status\nRedirecting to /bin/systemctl status httpd.service\n\u25cf httpd.service - The Apache HTTP Server\n   Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset: disabled)\n   Active: active (running) since Fri 2023-04-21 00:06:59 GMT; 11min ago\n     Docs: man:httpd(8)\n           man:apachectl(8)\n Main PID: 25413 (httpd)\n   Status: \"Total requests: 0; Current requests/sec: 0; Current traffic:   0 B/sec\"\n   CGroup: /system.slice/httpd.service\n           \u251c\u250025413 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250025414 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250025415 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250025416 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250025417 /usr/sbin/httpd -DFOREGROUND\n           \u2514\u250025418 /usr/sbin/httpd -DFOREGROUND\n\nApr 21 00:06:59 new-k8s systemd[1]: Stopped The Apache HTTP Server.\nApr 21 00:06:59 new-k8s systemd[1]: Starting The Apache HTTP Server...\nApr 21 00:06:59 new-k8s systemd[1]: Started The Apache HTTP Server.\n</code></pre>"},{"location":"linux-commands/part-9/#to-stop-the-service-using-service-command","title":"To stop the service using service command","text":"<p>service service_name stop</p> <pre><code>[opc@new-k8s ~]$ sudo service httpd stop\nRedirecting to /bin/systemctl stop httpd.service\n</code></pre> <pre><code>[opc@new-k8s ~]$ sudo service httpd status\nRedirecting to /bin/systemctl status httpd.service\n\u25cf httpd.service - The Apache HTTP Server\n   Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset: disabled)\n   Active: inactive (dead)\n     Docs: man:httpd(8)\n           man:apachectl(8)\n</code></pre>"},{"location":"linux-commands/part-9/#to-start-the-service-using-service-command","title":"To start the service using service command","text":"<p>service service_name start</p> <pre><code>[opc@new-k8s ~]$ sudo service httpd start\nRedirecting to /bin/systemctl start httpd.service\n</code></pre> <pre><code>[opc@new-k8s ~]$ sudo service httpd status\nRedirecting to /bin/systemctl status httpd.service\n\u25cf httpd.service - The Apache HTTP Server\n   Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset: disabled)\n   Active: active (running) since Fri 2023-04-21 00:20:25 GMT; 3s ago\n     Docs: man:httpd(8)\n           man:apachectl(8)\n Main PID: 2170 (httpd)\n   Status: \"Processing requests...\"\n    Tasks: 6\n   Memory: 25.5M\n   CGroup: /system.slice/httpd.service\n           \u251c\u25002170 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u25002171 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u25002172 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u25002173 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u25002174 /usr/sbin/httpd -DFOREGROUND\n           \u2514\u25002175 /usr/sbin/httpd -DFOREGROUND\n</code></pre>"},{"location":"linux-commands/part-9/#to-restart-the-service-using-service-command","title":"To restart the service using service command","text":"<p>service service_name restart</p> <pre><code>[opc@new-k8s ~]$ sudo service httpd restart\nRedirecting to /bin/systemctl restart httpd.service\n</code></pre> <pre><code>[opc@new-k8s ~]$ sudo service httpd status\nRedirecting to /bin/systemctl status httpd.service\n\u25cf httpd.service - The Apache HTTP Server\n   Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset: disabled)\n   Active: active (running) since Fri 2023-04-21 00:21:58 GMT; 7s ago\n     Docs: man:httpd(8)\n           man:apachectl(8)\n  Process: 3419 ExecStop=/bin/kill -WINCH ${MAINPID} (code=exited, status=0/SUCCESS)\n Main PID: 3433 (httpd)\n   Status: \"Processing requests...\"\n    Tasks: 6\n   Memory: 25.5M\n   CGroup: /system.slice/httpd.service\n           \u251c\u25003433 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u25003434 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u25003435 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u25003436 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u25003437 /usr/sbin/httpd -DFOREGROUND\n           \u2514\u25003438 /usr/sbin/httpd -DFOREGROUND\n</code></pre> <p>NOTE: We cannot use service command to enable and disable the service</p>"},{"location":"linux-commands/part-9/#journactl","title":"journactl","text":"<p>journalctl command is used to check the logs of a service</p> <p>journalctl -u service_name</p> <pre><code>[opc@new-k8s ~]$ journalctl -u httpd\n-- Logs begin at Tue 2023-04-18 15:19:48 GMT, end at Fri 2023-04-21 00:24:03 GMT. --\nApr 21 00:02:49 new-k8s systemd[1]: Starting The Apache HTTP Server...\nApr 21 00:02:49 new-k8s systemd[1]: Started The Apache HTTP Server.\nApr 21 00:04:11 new-k8s systemd[1]: Stopping The Apache HTTP Server...\nApr 21 00:04:12 new-k8s systemd[1]: Stopped The Apache HTTP Server.\nApr 21 00:05:06 new-k8s systemd[1]: Starting The Apache HTTP Server...\nApr 21 00:05:06 new-k8s systemd[1]: Started The Apache HTTP Server.\nApr 21 00:06:16 new-k8s systemd[1]: Stopping The Apache HTTP Server...\nApr 21 00:06:17 new-k8s systemd[1]: Stopped The Apache HTTP Server.\nApr 21 00:06:17 new-k8s systemd[1]: Starting The Apache HTTP Server...\nApr 21 00:06:17 new-k8s systemd[1]: Started The Apache HTTP Server.\nApr 21 00:06:58 new-k8s systemd[1]: Stopping The Apache HTTP Server...\nApr 21 00:06:59 new-k8s systemd[1]: Stopped The Apache HTTP Server.\nApr 21 00:06:59 new-k8s systemd[1]: Starting The Apache HTTP Server...\nApr 21 00:06:59 new-k8s systemd[1]: Started The Apache HTTP Server.\nApr 21 00:19:45 new-k8s systemd[1]: Stopping The Apache HTTP Server...\nApr 21 00:19:46 new-k8s systemd[1]: Stopped The Apache HTTP Server.\nApr 21 00:20:25 new-k8s systemd[1]: Starting The Apache HTTP Server...\nApr 21 00:20:25 new-k8s systemd[1]: Started The Apache HTTP Server.\nApr 21 00:21:57 new-k8s systemd[1]: Stopping The Apache HTTP Server...\nApr 21 00:21:58 new-k8s systemd[1]: Stopped The Apache HTTP Server.\nApr 21 00:21:58 new-k8s systemd[1]: Starting The Apache HTTP Server...\nApr 21 00:21:58 new-k8s systemd[1]: Started The Apache HTTP Server.\n</code></pre>"},{"location":"linux-commands/part-9/#ps-ef","title":"ps -ef","text":"<p>ps command is used o list all the running background process</p> <pre><code>ps -ef | grep -i sshd\n</code></pre> <p>Lets see only sshd process</p> <pre><code>[opc@new-k8s ~]$ ps -ef | grep -i sshd\nopc       6009 32710  0 00:26 pts/0    00:00:00 grep --color=auto -i sshd\nroot     26927     1  0 Apr20 ?        00:00:02 /usr/sbin/sshd -D\nroot     32685 26927  0 Apr20 ?        00:00:00 sshd: opc [priv]\nroot     32700 26927  0 Apr20 ?        00:00:00 sshd: opc [priv]\nopc      32709 32685  0 Apr20 ?        00:00:00 sshd: opc@pts/0\nopc      32755 32700  0 Apr20 ?        00:00:00 sshd: opc@notty\n</code></pre> <p>This is the running process info for sshd, it has process id 26927</p> <pre><code>root     26927     1  0 Apr20 ?        00:00:02 /usr/sbin/sshd -D\n</code></pre>"},{"location":"shellscript/part-1/","title":"Shellscript Part - 1","text":""},{"location":"shellscript/part-1/#youtube","title":"Youtube","text":"<p>In simple term, shell script is putting the linux commands in a file and executing the file. The commands will be executed in sequential order.</p> <p>Create a file test.sh and put the following content</p> <pre><code>#!/bin/bash\n\necho \"-----Present Working Directory-----\"\npwd\n\necho \"-----List all files in current folder----\"\nls -lart\n\necho \"-----Print the content of /etc/os-release file-----\"\ncat /etc/os-release\n</code></pre> <pre><code>[opc@new-k8s script]$ ll\ntotal 4\n-rw-rw-r--. 1 opc opc 170 May  4 11:02 test.sh\n</code></pre> <p>Give executable permission to a file</p> <pre><code>chmod +x test.sh\n</code></pre> <pre><code>[opc@new-k8s script]$ ll\ntotal 4\n-rwxrwxr-x. 1 opc opc 170 May  4 11:02 test.sh\n</code></pre>"},{"location":"shellscript/part-1/#different-ways-to-run-the-shell-script","title":"Different ways to run the shell script","text":"<p>Running the script using ./ (Absolute path)</p> <pre><code>[opc@new-k8s script]$ ./test.sh \n-----Present Working Directory-----\n/home/opc/script\n-----List all files in current folder----\ntotal 8\n-rwxrwxr-x.  1 opc opc  199 May  4 11:06 test.sh\ndrwxr-x---. 13 opc opc 4096 May  4 11:06 ..\ndrwxrwxr-x.  2 opc opc   21 May  4 11:06 .\n-----Print the content of /etc/os-release file-----\nNAME=\"Oracle Linux Server\"\nVERSION=\"7.9\"\nID=\"ol\"\nID_LIKE=\"fedora\"\nVARIANT=\"Server\"\nVARIANT_ID=\"server\"\nVERSION_ID=\"7.9\"\nPRETTY_NAME=\"Oracle Linux Server 7.9\"\nANSI_COLOR=\"0;31\"\nCPE_NAME=\"cpe:/o:oracle:linux:7:9:server\"\nHOME_URL=\"https://linux.oracle.com/\"\nBUG_REPORT_URL=\"https://bugzilla.oracle.com/\"\n\nORACLE_BUGZILLA_PRODUCT=\"Oracle Linux 7\"\nORACLE_BUGZILLA_PRODUCT_VERSION=7.9\nORACLE_SUPPORT_PRODUCT=\"Oracle Linux\"\nORACLE_SUPPORT_PRODUCT_VERSION=7.9\n</code></pre> <p>Running the script by specifying the Full path (Absolute path)</p> <pre><code>[opc@new-k8s script]$ /home/opc/script/test.sh \n-----Present Working Directory-----\n/home/opc/script\n-----List all files in current folder----\ntotal 8\n-rwxrwxr-x.  1 opc opc  199 May  4 11:06 test.sh\ndrwxr-x---. 13 opc opc 4096 May  4 11:06 ..\ndrwxrwxr-x.  2 opc opc   21 May  4 11:06 .\n-----Print the content of /etc/os-release file-----\nNAME=\"Oracle Linux Server\"\nVERSION=\"7.9\"\nID=\"ol\"\nID_LIKE=\"fedora\"\nVARIANT=\"Server\"\nVARIANT_ID=\"server\"\nVERSION_ID=\"7.9\"\nPRETTY_NAME=\"Oracle Linux Server 7.9\"\nANSI_COLOR=\"0;31\"\nCPE_NAME=\"cpe:/o:oracle:linux:7:9:server\"\nHOME_URL=\"https://linux.oracle.com/\"\nBUG_REPORT_URL=\"https://bugzilla.oracle.com/\"\n\nORACLE_BUGZILLA_PRODUCT=\"Oracle Linux 7\"\nORACLE_BUGZILLA_PRODUCT_VERSION=7.9\nORACLE_SUPPORT_PRODUCT=\"Oracle Linux\"\nORACLE_SUPPORT_PRODUCT_VERSION=7.9\n</code></pre> <p>By using bash command</p> <pre><code>[opc@new-k8s script]$ bash test.sh \n-----Present Working Directory-----\n/home/opc/script\n-----List all files in current folder----\ntotal 8\n-rwxrwxr-x.  1 opc opc  199 May  4 11:06 test.sh\ndrwxr-x---. 13 opc opc 4096 May  4 11:06 ..\ndrwxrwxr-x.  2 opc opc   21 May  4 11:06 .\n-----Print the content of /etc/os-release file-----\nNAME=\"Oracle Linux Server\"\nVERSION=\"7.9\"\nID=\"ol\"\nID_LIKE=\"fedora\"\nVARIANT=\"Server\"\nVARIANT_ID=\"server\"\nVERSION_ID=\"7.9\"\nPRETTY_NAME=\"Oracle Linux Server 7.9\"\nANSI_COLOR=\"0;31\"\nCPE_NAME=\"cpe:/o:oracle:linux:7:9:server\"\nHOME_URL=\"https://linux.oracle.com/\"\nBUG_REPORT_URL=\"https://bugzilla.oracle.com/\"\n\nORACLE_BUGZILLA_PRODUCT=\"Oracle Linux 7\"\nORACLE_BUGZILLA_PRODUCT_VERSION=7.9\nORACLE_SUPPORT_PRODUCT=\"Oracle Linux\"\nORACLE_SUPPORT_PRODUCT_VERSION=7.9\n</code></pre>"},{"location":"shellscript/part-1/#what-is-shebang","title":"What is shebang","text":"<p>Shebang (#!) is a special line at the beginning of a script that tells the operating system which interpreter to use when executing the script</p> <pre><code>#!/bin/bash\n\npwd\n</code></pre> <p>In our last shell script we used bash as a interpreter , we can also use sh, zsh, python</p> <p>File extension doesn't matter, it can be anything or even extension is not needed</p> <pre><code>[opc@new-k8s script]$ mv test.sh test\n[opc@new-k8s script]$ ll\ntotal 4\n-rwxrwxr-x. 1 opc opc 199 May  4 11:30 test\n</code></pre> <p>If no shebang is declared in shell script, it uses the default shell.</p> <p>Default shell can be checked in Environment variable SHELL</p> <pre><code>[opc@new-k8s ~]$ echo $SHELL\n/bin/bash\n</code></pre> <pre><code>[opc@new-k8s script]$ ll\ntotal 4\n-rwxrwxr-x. 1 opc opc 186 May  4 11:33 test\n[opc@new-k8s script]$ cat test \necho \"-----Present Working Directory-----\"\npwd\n\necho \"-----List all files in current folder----\"\nls -lart\n\necho \"-----Print the content of /etc/os-release file-----\"\ncat /etc/os-release\n</code></pre> <pre><code>[opc@new-k8s script]$ ./test \n-----Present Working Directory-----\n/home/opc/script\n-----List all files in current folder----\ntotal 8\n-rwxrwxr-x.  1 opc opc  186 May  4 11:33 test\ndrwxr-x---. 13 opc opc 4096 May  4 11:33 ..\ndrwxrwxr-x.  2 opc opc   18 May  4 11:33 .\n-----Print the content of /etc/os-release file-----\nNAME=\"Oracle Linux Server\"\nVERSION=\"7.9\"\nID=\"ol\"\nID_LIKE=\"fedora\"\nVARIANT=\"Server\"\nVARIANT_ID=\"server\"\nVERSION_ID=\"7.9\"\nPRETTY_NAME=\"Oracle Linux Server 7.9\"\nANSI_COLOR=\"0;31\"\nCPE_NAME=\"cpe:/o:oracle:linux:7:9:server\"\nHOME_URL=\"https://linux.oracle.com/\"\nBUG_REPORT_URL=\"https://bugzilla.oracle.com/\"\n\nORACLE_BUGZILLA_PRODUCT=\"Oracle Linux 7\"\nORACLE_BUGZILLA_PRODUCT_VERSION=7.9\nORACLE_SUPPORT_PRODUCT=\"Oracle Linux\"\nORACLE_SUPPORT_PRODUCT_VERSION=7.9\n</code></pre> <p>Example shell scripts are kept in github https://github.com/vigneshsweekaran/shellscript.git</p> <p>To clone the shellscript git repo</p> <pre><code>[opc@new-k8s ~]$ git clone https://github.com/vigneshsweekaran/shellscript.git\nCloning into 'shellscript'...\nremote: Enumerating objects: 78, done.\nremote: Counting objects: 100% (78/78), done.\nremote: Compressing objects: 100% (70/70), done.\nremote: Total 78 (delta 13), reused 56 (delta 5), pack-reused 0\nUnpacking objects: 100% (78/78), done.\n</code></pre> <pre><code>[opc@new-k8s ~]$ ll\ntotal 3072000\ndrwxrwxr-x. 5 opc  opc          70 May  5 12:03 shellscript\n-rw-r--r--. 1 root root 3145728000 Jan 11  2022 swapfile\n</code></pre> <pre><code>[opc@new-k8s ~]$ cd shellscript/\n[opc@new-k8s shellscript]$ ll\ntotal 8\ndrwxrwxr-x. 4 opc opc   94 May  5 12:03 automation\n-rw-rw-r--. 1 opc opc   13 May  5 12:03 README.md\ndrwxrwxr-x. 3 opc opc 4096 May  5 12:03 tutorials\n</code></pre> <pre><code>[opc@new-k8s shellscript]$ cd tutorials/\n[opc@new-k8s tutorials]$ ll\ntotal 8\ndrwxrwxr-x. 2 opc opc 4096 May  5 12:13 part-1\ndrwxrwxr-x. 2 opc opc 4096 May  5 12:06 part-2\n</code></pre> <pre><code>[opc@new-k8s tutorials]$ cd part-1\n[opc@new-k8s part-1]$ ll\ntotal 32\n-rwxrwxr-x. 1 opc opc  76 May  5 12:03 1-printing-hostname.sh\n-rwxrwxr-x. 1 opc opc  88 May  5 12:13 2-shellscript-skip-the-failure-default.sh\n-rwxrwxr-x. 1 opc opc  94 May  5 12:13 3-make-shellscript-to-fail-on-error.sh\n-rwxrwxr-x. 1 opc opc 102 May  5 12:13 4-escape-the-error.sh\n-rwxrwxr-x. 1 opc opc  96 May  5 12:03 5-if-condition.sh\n-rwxrwxr-x. 1 opc opc 184 May  5 12:13 6-check-file-present-or-not.sh\n-rwxrwxr-x. 1 opc opc 184 May  5 12:13 7-check-file-single-bracket.sh\n-rwxrwxr-x. 1 opc opc  87 May  5 12:13 8-check-file-double-bracket.sh\n</code></pre>"},{"location":"shellscript/part-1/#shell-script-to-print-the-hostname-of-the-server","title":"Shell script to print the hostname of the server","text":"<p>We already know the hostname command, when we run this command, it prints the name of the server</p> <pre><code>[opc@new-k8s part-1]$ hostname\nnew-k8s\n</code></pre> <p>Lets run the shell script 1-printing-hostname.sh which just prints the hostname of the server</p> <pre><code>#!/bin/sh\n\nMY_HOSTNAME=$(hostname)\n\necho \"My system name is ${MY_HOSTNAME}\"\n</code></pre> <p>The script runs the hostname command and stores the output to MY_HOSTNAME shell variable</p> <p>And then prints the MY_HOSTNAME variable using echo command</p> <pre><code>[opc@new-k8s part-1]$ ./1-printing-hostname.sh \nMy system name is new-k8s\n</code></pre>"},{"location":"shellscript/part-1/#shellscript-default-failure-behavior","title":"Shellscript default failure behavior","text":"<p>By default if any error occurs while executing the shell script it ignores and executes the next command and proceeds further</p> <p>How to check whether the command is failed or not ?</p> <ul> <li> <p>When we run any command in shell, it sets the status code after executing the command.</p> </li> <li> <p>If the status code is <code>0</code>, which means success, other than 0 is failure.</p> </li> </ul> <p>we can check the status code of last executed command by, printing the special variable $? Eg: echo $?</p> <pre><code>[opc@new-k8s part-1]$ date\nSat May  6 02:28:46 GMT 2023\n[opc@new-k8s part-1]$ echo $?\n0\n</code></pre> <p>In above, we run the <code>date</code> command, then we run the <code>echo $?</code> which shows <code>0</code> which means the date command is executed successfully</p> <pre><code>[opc@new-k8s part-1]$ cddd\n-bash: cddd: command not found\n[opc@new-k8s part-1]$ echo $?\n127\n</code></pre> <p>Here we run the wrong command <code>cddd</code> which clearly shows the command is failed. Even in <code>echo $?</code> shows non-zero number</p> <p>One more example for failure, when we run the false command, it sets the status code to <code>1</code></p> <pre><code>[opc@new-k8s part-1]$ false\n[opc@new-k8s part-1]$ echo $?\n1\n</code></pre> <pre><code>#!/bin/bash\n\npwd\n\necho $?\n\nfalse\n\necho $?f\n\necho \"After Error\"\necho \"I am running fine\"\n</code></pre> <p>In the above shell script, the false command will set the status code to <code>1</code> which is failure. But still the script will proceed further and run the echo commands</p> <pre><code>[opc@new-k8s part-1]$ ./2-shellscript-skip-the-failure-default.sh \n/home/opc/shellscript/tutorials/part-1\n0\n1f\nAfter Error\nI am running fine\n</code></pre>"},{"location":"shellscript/part-1/#how-to-stop-the-shell-script-on-failure","title":"How to stop the Shell script on failure ?","text":"<p>By adding <code>set -e</code> in the shell script will make the shell script to stop, when failure happens</p> <pre><code>[opc@new-k8s part-1]$ cat 3-make-shellscript-to-fail-on-error.sh \n#!/bin/bash\n\nset -e\n\npwd\n\necho $?\n\nfalse\n\necho $?\n\necho \"After Error\"\n</code></pre> <pre><code>[opc@new-k8s part-1]$ ./3-make-shellscript-to-fail-on-error.sh \n/home/opc/shellscript/tutorials/part-1\n0\n</code></pre> <p>Here we can see, once the false command is executed the script stops and not printed the echo commands</p>"},{"location":"shellscript/part-1/#how-to-bypass-only-some-failure-in-script-and-proceeds-further","title":"How to bypass only some failure in script and proceeds further ?","text":"<p><code>exit 1</code> when we run exit command with argument <code>1</code> it sets the status status code to 1 and makes the script failure</p> <pre><code>[opc@new-k8s part-1]$ cat 4-escape-the-error.sh \n#!/bin/bash\n\nset -e\n\npwd\n\necho $?\n\nexit 1 | true\n\necho $?\n\necho \"After Error\"\n</code></pre> <p>Here we are piping(|) the <code>exit 1</code> output and making the status code <code>0</code> by running true command. So the command is success and script proceeds further</p> <pre><code>echo \"I am running fine\"[opc@new-k8s part-1]$ ./4-escape-the-error.sh \n/home/opc/shellscript/tutorials/part-1\n0\n0\nAfter Error\nI am running fine\n</code></pre>"},{"location":"shellscript/part-1/#if-condition","title":"if condition","text":"<p><code>if</code> condition is used to run the set of commands based on the condition success/failure</p> <pre><code>[opc@new-k8s part-1]$ cat 5-if-condition.sh \ncount=1\n\nif [ $count -eq 100 ]\nthen\n    echo \"count is 100\"\nelse\n    echo \"count is not 100\"\nfi\n</code></pre> <p>In above, we are storing the number <code>1</code> to a variable <code>count</code></p> <p><code>if [ $count -eq 100 ]</code></p> <p>In the above line, first <code>count</code> variable will be substituted with <code>0</code> and it evaluates whether <code>0</code> is equal to <code>100</code>.</p> <p>Since the condition failed, it goes to <code>else</code> and execute the <code>echo \"count is not 100\"</code></p> <pre><code>[opc@new-k8s part-1]$ ./5-if-condition.sh \ncount is not 100\n</code></pre> <p>If we set <code>count=100</code>, then it goes to <code>then</code> and execute the <code>echo \"count is 100\"</code></p> <pre><code>[opc@new-k8s part-1]$ cat 5-if-condition.sh \ncount=100\n\nif [ $count -eq 100 ]\nthen\n    echo \"count is 100\"\nelse\n    echo \"count is not 100\"\nfi\n</code></pre> <pre><code>[opc@new-k8s part-1]$ ./5-if-condition.sh \ncount is 100\n</code></pre>"},{"location":"shellscript/part-1/#how-to-check-whether-the-file-is-present-or-not","title":"How to check whether the file is present or not ?","text":"<p><code>test</code> command is used to check whether file or directory is present or not</p> <pre><code>[opc@new-k8s part-1]$ test -f /etc/os-release \n[opc@new-k8s part-1]$ echo $?\n0\n</code></pre> <p><code>test -f /etc/os-release</code> checks whether /etc/os-release file present or not. The file is present, so it sets the status code to <code>0</code></p> <pre><code>[opc@new-k8s part-1]$ test -f /etc/abc.txt\n[opc@new-k8s part-1]$ echo $?\n1\n</code></pre> <p>Here the abc.txt file is not present, so it sets the status code to <code>1</code></p> <pre><code>[opc@new-k8s part-1]$ cat 6-check-file-present-or-not.sh \n#!/bin/bash\n\n# File path stored in variable FILE\nFILE=/etc/os-release\n\n# test command used to check whether file is present or not\nif test -f \"$FILE\"; then\n    echo \"$FILE exists.\"\nfi\n</code></pre> <p>First we are storing the file path <code>/etc/os-release</code> to a shell variable <code>FILE</code>. Its a practice to store the value to a variable, it we want to use in multiple places.</p> <p>Then <code>test -f \"$FILE\"</code> will return the status code. Here it will return status code <code>0</code>, since the file is present. <code>if</code> condition evaluates to success, since the status code is <code>0</code> and executes the <code>echo \"$FILE exists.\"</code></p> <p>If it is non-zero, the <code>if</code> condition will be failure and go to else. If <code>else</code> statement is not declared, it will not do anything</p> <pre><code>[opc@new-k8s part-1]$ ./6-check-file-present-or-not.sh \n/etc/os-release exists.\n</code></pre>"},{"location":"shellscript/part-1/#test-command-in-other-syntax","title":"Test command in other syntax","text":"<p>Using single square bracket</p> <p>[ -f /etc/os-release ]</p> <pre><code>[opc@new-k8s part-1]$ cat 7-check-file-single-bracket.sh \n#!/bin/bash\n\n# File path stored in variable FILE\nFILE=/etc/os-release\n\n# test command used to check whether file is present or not\nif [ -f \"$FILE\" ]; then\n    echo \"$FILE exists.\"\nfi\n</code></pre> <pre><code>[opc@new-k8s part-1]$ ./7-check-file-single-bracket.sh \n/etc/os-release exists.\n</code></pre> <p>Using double square bracket</p> <p>[[ -f /etc/os-release ]]</p> <pre><code>[opc@new-k8s part-1]$ cat 8-check-file-double-bracket.sh \n#!/bin/bash\n\nFILE=/etc/os-release\n\nif [[ -f \"$FILE\" ]]; then\n    echo \"$FILE exists.\"\nfi\n</code></pre> <pre><code>[opc@new-k8s part-1]$ ./8-check-file-double-bracket.sh \n/etc/os-release exists.\n</code></pre>"},{"location":"shellscript/part-2/","title":"Shellscript Part - 2","text":""},{"location":"shellscript/part-2/#youtube","title":"Youtube","text":""},{"location":"shellscript/part-2/#what-is-for-loop","title":"What is for loop ?","text":"<p>for loop is used to repeat the task until the limit is reached or iterate through the items</p> <p></p> <p>In the above diagram <code>{1..5}</code> changes to <code>1,2,3,4,5</code> which means the for loop is going to repeat the command execution 5 times.</p> <p>The commands will be placed inside <code>do, done</code> block</p> <p>So, the echo command is going to repeat 5 times <code>echo \"The value is $number\"</code></p> <p>To clone the shellscript git repo</p> <pre><code>[opc@new-k8s ~]$ git clone https://github.com/vigneshsweekaran/shellscript.git\nCloning into 'shellscript'...\nremote: Enumerating objects: 78, done.\nremote: Counting objects: 100% (78/78), done.\nremote: Compressing objects: 100% (70/70), done.\nremote: Total 78 (delta 13), reused 56 (delta 5), pack-reused 0\nUnpacking objects: 100% (78/78), done.\n</code></pre> <pre><code>[opc@new-k8s shellscript]$ ll\ntotal 4\ndrwxrwxr-x. 4 opc opc 94 May  5 12:03 automation\n-rw-rw-r--. 1 opc opc 13 May  5 12:03 README.md\ndrwxrwxr-x. 5 opc opc 50 May  6 10:04 tutorials\n[opc@new-k8s shellscript]$ cd tutorials/part-2\n</code></pre> <pre><code>[opc@new-k8s part-2]$ cat 1-for-loop.sh \n#!/bin/bash\n\nfor number in {1..5}\ndo\n    echo \"The value is $number\"\ndone\n</code></pre> <pre><code>[opc@new-k8s part-2]$ ./1-for-loop.sh \nThe value is 1\nThe value is 2\nThe value is 3\nThe value is 4\nThe value is 5\n</code></pre>"},{"location":"shellscript/part-2/#how-to-create-multiple-files-using-shell-script","title":"How to create multiple files using shell script","text":"<p>We have used <code>date</code> command, which prints both date and time</p> <pre><code>[opc@new-k8s part-2]$ date\nSat May  6 12:54:11 GMT 2023\n</code></pre> <p>Lets format the <code>date</code> command to get the details in this format MMDDYY-HHMMSS</p> <pre><code>[opc@new-k8s part-2]$ date +\"%m%d%y-%H%M%S\"\n050623-125855\n</code></pre> <pre><code>%m --&gt; Month\n%d --&gt; Day\n%y --&gt; Year (Last two digit)\n%H --&gt; Hour\n%M --&gt; Minutes\n%S --&gt; Seconds\n</code></pre> <p>Now lets run the script</p> <pre><code>[opc@new-k8s part-2]$ cat 2-create-multiple-files.sh \n#!/bin/bash\n\nset -e\n\nfor number in {1..5}\ndo\n    VERSION=$(date +\"%m%d%y-%H%M%S\")\n    DATE=$(date)\n    FILE_NAME=app-${VERSION}-${number}.log\n    touch $FILE_NAME\n    echo \"File created on ${DATE}\" &gt; $FILE_NAME\ndone\n</code></pre> <p>currently we have 6 shellscript files here</p> <pre><code>[opc@new-k8s part-2]$ ll\ntotal 24\n-rwxrwxr-x. 1 opc opc  82 May  7 23:22 1-for-loop.sh\n-rwxrwxr-x. 1 opc opc 216 May  7 23:22 2-create-multiple-files.sh\n-rwxrwxr-x. 1 opc opc 151 May  7 23:22 3-iterate-through-items.sh\n-rwxrwxr-x. 1 opc opc 200 May  7 23:22 4-delete-files-more-than-x-size.sh\n-rwxrwxr-x. 1 opc opc 427 May  7 23:22 5-delete-files-more-than-x-days.sh\n-rwxrwxr-x. 1 opc opc 396 May  7 23:22 6-store-cli-version-in-json-file.sh\n</code></pre> <pre><code>[opc@new-k8s part-2]$ ./2-create-multiple-files.sh \n[opc@new-k8s part-2]$ ll\ntotal 44\n-rwxrwxr-x. 1 opc opc  82 May  7 23:22 1-for-loop.sh\n-rwxrwxr-x. 1 opc opc 216 May  7 23:22 2-create-multiple-files.sh\n-rwxrwxr-x. 1 opc opc 151 May  7 23:22 3-iterate-through-items.sh\n-rwxrwxr-x. 1 opc opc 200 May  7 23:22 4-delete-files-more-than-x-size.sh\n-rwxrwxr-x. 1 opc opc 427 May  7 23:22 5-delete-files-more-than-x-days.sh\n-rwxrwxr-x. 1 opc opc 396 May  7 23:22 6-store-cli-version-in-json-file.sh\n-rw-rw-r--. 1 opc opc  45 May  7 23:28 app-050723-232815-1.log\n-rw-rw-r--. 1 opc opc  45 May  7 23:28 app-050723-232815-2.log\n-rw-rw-r--. 1 opc opc  45 May  7 23:28 app-050723-232815-3.log\n-rw-rw-r--. 1 opc opc  45 May  7 23:28 app-050723-232815-4.log\n-rw-rw-r--. 1 opc opc  45 May  7 23:28 app-050723-232815-5.log\n</code></pre> <p>After running the shellscript it has created the 5 new files, the name includes the version created from the date command</p> <pre><code>[opc@new-k8s part-2]$ cat app-050723-232815-1.log \nFile created on Sun May  7 23:28:15 GMT 2023\n</code></pre> <p>When we <code>cat</code> the first file, it has the timestamp, which we have written to the file</p>"},{"location":"shellscript/part-2/#array-in-shellscript","title":"Array in shellscript","text":"<p>Array is a collection of items</p> <p></p>"},{"location":"shellscript/part-2/#check-the-size-of-multiple-directory-using-for-loop","title":"Check the size of multiple directory using for loop","text":"<p><code>du</code> command is used to check the size of file or directory</p> <p>TO check the size of file</p> <pre><code>[opc@new-k8s part-2]$ du -sh /tmp/files/apache-maven-3.9.1-bin.tar.gz \n8.7M    /tmp/files/apache-maven-3.9.1-bin.tar.gz\n</code></pre> <p>To check the size of directory</p> <pre><code>[opc@new-k8s part-2]$ ll -sh /tmp/files\ntotal 82M\n8.7M -rw-rw-r--. 1 opc opc 8.7M May  7 11:49 access.log\n8.7M -rw-rw-r--. 1 opc opc 8.7M May  7 11:49 apache.log\n8.7M -rw-rw-r--. 1 opc opc 8.7M May  7 11:49 apache-maven-3.9.1-bin.tar.gz\n4.0K -rw-rw-r--. 1 opc opc   11 May  7 11:49 error.log\n8.7M -rw-rw-r--. 1 opc opc 8.7M May  7 11:49 hello.txt\n 47M -rw-rw-r--. 1 opc opc  47M May  7 11:49 kubectl\n</code></pre> <pre><code>[opc@new-k8s part-2]$ du -sh /tmp/files\n82M     /tmp/files\n</code></pre> <pre><code>[opc@new-k8s part-2]$ cat 3-iterate-through-items.sh \n#!/bin/bash\n\nset -e\n\nTARGET_FOLDERS=(\"log_files\" \"error_files\" \"access_files\")\n\nfor folder in ${TARGET_FOLDERS[@]}\ndo\n    du -sh \"/tmp/${folder}\"\ndone\n</code></pre> <p>In the above script, we created a variable <code>TARGET_FOLDERS</code> of type array and stored some folder names</p> <p>Using for loop we can check the size of all the folders in the array <code>TARGET_FOLDERS</code> using <code>du</code> command</p> <p>Lets check the files in access_files, error_files, log_files folders</p> <pre><code>[opc@new-k8s part-2]$ ll /tmp/access_files/\ntotal 8\n-rw-rw-r--. 1 opc opc  0 May  7 11:50 access1.txt\n-rw-rw-r--. 1 opc opc  0 May  7 11:50 access2.txt\n-rw-rw-r--. 1 opc opc 22 May  8 11:19 access.log\n-rw-rw-r--. 1 opc opc  0 May  7 11:51 access_new.log\n-rw-rw-r--. 1 opc opc 17 May  8 11:19 access.txt\n-rw-rw-r--. 1 opc opc  0 May  7 11:50 test.txt\n</code></pre> <pre><code>[opc@new-k8s part-2]$ ll /tmp/error_files/\ntotal 0\n-rw-rw-r--. 1 opc opc 0 May  7 11:51 access1.txt\n-rw-rw-r--. 1 opc opc 0 May  7 11:51 access2.txt\n-rw-rw-r--. 1 opc opc 0 May  7 11:51 access.log\n-rw-rw-r--. 1 opc opc 0 May  7 11:51 access_new.log\n-rw-rw-r--. 1 opc opc 0 May  7 11:51 access.txt\n-rw-rw-r--. 1 opc opc 0 May  7 11:51 test.txt\n</code></pre> <pre><code>[opc@new-k8s part-2]$ ll /tmp/log_files/\ntotal 4\n-rw-rw-r--. 1 opc opc  0 May  7 11:51 access1.txt\n-rw-rw-r--. 1 opc opc  0 May  7 11:51 access2.txt\n-rw-rw-r--. 1 opc opc  0 May  7 11:51 access.log\n-rw-rw-r--. 1 opc opc  0 May  7 11:51 access_new.log\n-rw-rw-r--. 1 opc opc 21 May  8 10:59 access.txt\n-rw-rw-r--. 1 opc opc  0 May  7 11:51 test.txt\n</code></pre> <p>Running the shellscript</p> <pre><code>[opc@new-k8s part-2]$ ./3-iterate-through-items.sh \n8.0K    /tmp/log_files\n4.0K    /tmp/error_files\n12K     /tmp/access_files\n</code></pre>"},{"location":"shellscript/part-2/#how-to-delete-the-files-which-are-more-than-x-size","title":"How to delete the files which are more than x size","text":"<p>In the <code>find</code> command, you can pass the argument <code>-size</code> to set the target size of the file and pass <code>-delete</code> to delete the files, if the target size is matched.</p> <pre><code>[opc@new-k8s files]$ pwd\n/tmp/files\n</code></pre> <pre><code>[opc@new-k8s files]$ ll -h\ntotal 82M\n-rw-rw-r--. 1 opc opc 8.7M May  7 11:49 access.log\n-rw-rw-r--. 1 opc opc 8.7M May  7 11:49 apache.log\n-rw-rw-r--. 1 opc opc 8.7M May  7 11:49 apache-maven-3.9.1-bin.tar.gz\n-rw-rw-r--. 1 opc opc   11 May  7 11:49 error.log\n-rw-rw-r--. 1 opc opc 8.7M May  7 11:49 hello.txt\n-rw-rw-r--. 1 opc opc  47M May  7 11:49 kubectl\n</code></pre> <p>Here, you can see, the <code>*.log</code> files size are 8.7 MB, you can run the below command to delete the files, which matches the file extension and size</p> <pre><code>find ./ -type f -name \"*.log\" -size +8M -delete\n</code></pre> <pre><code>[opc@new-k8s files]$ find ./ -type f -name \"*.log\" -size +8M -delete\n</code></pre> <pre><code>[opc@new-k8s files]$ ll -h\ntotal 65M\n-rw-rw-r--. 1 opc opc 8.7M May  7 11:49 apache-maven-3.9.1-bin.tar.gz\n-rw-rw-r--. 1 opc opc   11 May  7 11:49 error.log\n-rw-rw-r--. 1 opc opc 8.7M May  7 11:49 hello.txt\n-rw-rw-r--. 1 opc opc  47M May  7 11:49 kubectl\n</code></pre> <p>Only the files, which matches \"*.log\" extension and size more than 8MB are deleted</p> <p>Lets run the shellscript to delete the files in folder</p> <pre><code>[opc@new-k8s part-2]$ cat 4-delete-files-more-than-x-size.sh \n#!/bin/bash\n\nset -e\n\nTARGET_PATH=\"/tmp/files\"\nFILE_EXTENSION=\".log\"\nTARGET_FILE_SIZE=\"1k\" #Eg: 10K, 100M, 1GB\n\nfind ${TARGET_PATH} -type f -name \"*${FILE_EXTENSION}\" -size +${TARGET_FILE_SIZE} -delete\n</code></pre> <p>Now lets delete the \"*.gz\" file, which has size more than 1KB</p> <pre><code>[opc@new-k8s part-2]$ ./4-delete-files-more-than-x-size.sh\n</code></pre> <pre><code>[opc@new-k8s part-2]$ ll -h /tmp/files\ntotal 56M\n-rw-rw-r--. 1 opc opc   11 May  8 11:44 error.log\n-rw-rw-r--. 1 opc opc 8.7M May  8 11:44 hello.txt\n-rw-rw-r--. 1 opc opc  47M May  8 11:44 kubectl\n</code></pre> <p>We had only one \"*.gz\" file, which is also more than 1KB, so it got deleted</p>"},{"location":"shellscript/part-2/#for-loop-inside-another-for-loop","title":"for loop inside another for loop","text":""},{"location":"shellscript/part-2/#how-to-delete-files-in-multiple-folders-having-multiple-file-extensions","title":"How to delete files in multiple folders having multiple file extensions","text":"<p>Using <code>find</code> command you can identity the files, which are created, modified, accessed some time, days back</p> <pre><code>-mtime --&gt; modified time of file (in days)\n-ctime --&gt; created time of file (in days)\n-atime --&gt; accessed time of file (in days)\n-mmin  --&gt; modified time of file (in minutes)\n</code></pre> <p>By default, <code>ls -l</code> or <code>ll</code> command shows the modified time of a file</p> <pre><code>[opc@new-k8s part-2]$ ll /tmp/access_files/\ntotal 8\n-rw-rw-r--. 1 opc opc  0 May  7 11:50 access1.txt\n-rw-rw-r--. 1 opc opc  0 May  7 11:50 access2.txt\n-rw-rw-r--. 1 opc opc 22 May  8 11:19 access.log\n-rw-rw-r--. 1 opc opc  0 May  7 11:51 access_new.log\n-rw-rw-r--. 1 opc opc 17 May  8 11:19 access.txt\n-rw-rw-r--. 1 opc opc  0 May  7 11:50 test.txt\n</code></pre> <pre><code>[opc@new-k8s part-2]$ ll /tmp/error_files/\ntotal 0\n-rw-rw-r--. 1 opc opc 0 May  7 11:51 access1.txt\n-rw-rw-r--. 1 opc opc 0 May  7 11:51 access2.txt\n-rw-rw-r--. 1 opc opc 0 May  7 11:51 access.log\n-rw-rw-r--. 1 opc opc 0 May  7 11:51 access_new.log\n-rw-rw-r--. 1 opc opc 0 May  7 11:51 access.txt\n-rw-rw-r--. 1 opc opc 0 May  7 11:51 test.txt\n</code></pre> <pre><code>[opc@new-k8s part-2]$ ll /tmp/log_files/\ntotal 4\n-rw-rw-r--. 1 opc opc  0 May  7 11:51 access1.txt\n-rw-rw-r--. 1 opc opc  0 May  7 11:51 access2.txt\n-rw-rw-r--. 1 opc opc  0 May  7 11:51 access.log\n-rw-rw-r--. 1 opc opc  0 May  7 11:51 access_new.log\n-rw-rw-r--. 1 opc opc 21 May  8 10:59 access.txt\n-rw-rw-r--. 1 opc opc  0 May  7 11:51 test.txt\n</code></pre> <pre><code>[opc@new-k8s part-2]$ cat 5-delete-files-more-than-x-days.sh \n#!/bin/bash\n\nset -e\n\nTARGET_PATH=\"/tmp\"\nTARGET_FOLDERS=(\"log_files\" \"error_files\" \"access_files\")\nFILE_EXTENSIONS=(\".log\" \".txt\")\nTARGET_TIME_IN_MINUTES=\"1\"\n\nfor folder in ${TARGET_FOLDERS[@]}\ndo\n  for extension in ${FILE_EXTENSIONS[@]}\n  do\n    echo \"Deleting file extension ${extension} in folder ${folder}\"\n    find ${TARGET_PATH}/${folder} -type f -name \"*${extension}\" -mmin +${TARGET_TIME_IN_MINUTES} -delete\n  done\ndone\n</code></pre> <p>The script will delete the files, which are modified 1 minute ago (It can be anytime before 1 minute)</p> <pre><code>[opc@new-k8s part-2]$ ./5-delete-files-more-than-x-days.sh \nDeleting file extension .log in folder log_files\nDeleting file extension .txt in folder log_files\nDeleting file extension .log in folder error_files\nDeleting file extension .txt in folder error_files\nDeleting file extension .log in folder access_files\nDeleting file extension .txt in folder access_files\n</code></pre> <pre><code>[opc@new-k8s part-2]$ ll /tmp/access_files/\ntotal 0\n[opc@new-k8s part-2]$ ll /tmp/error_files/\ntotal 0\n[opc@new-k8s part-2]$ ll /tmp/log_files/\ntotal 0\n</code></pre> <p>Since the files are modified sometime long back, all the files with extension \".log and .txt are deleted\"</p>"},{"location":"shellscript/part-2/#how-to-get-the-version-of-the-tools-and-store-in-json-file","title":"How to get the version of the tools and store in json file","text":"<p>Lets get the version of two tools <code>git</code> and <code>maven</code></p> <p>To check the version of <code>git</code></p> <pre><code>[opc@new-k8s part-2]$ git --version\ngit version 1.8.3.1\n</code></pre> <p>But it gives, some additional words right, you can use <code>awk</code> command to get only the 3<sup>rd</sup> column, which returns the version</p> <pre><code>[opc@new-k8s part-2]$ git --version | awk '{ print $3 }'\n1.8.3.1\n</code></pre> <p>Similarly you can get the version of maven using <code>mvn --version</code> command</p> <pre><code>[opc@new-k8s part-2]$ mvn --version\nApache Maven 3.0.5 (Red Hat 3.0.5-17)\nMaven home: /usr/share/maven\nJava version: 1.8.0_362, vendor: Red Hat, Inc.\nJava home: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.362.b08-1.el7_9.aarch64/jre\nDefault locale: en_US, platform encoding: UTF-8\nOS name: \"linux\", version: \"5.4.17-2102.202.5.el7uek.aarch64\", arch: \"aarch64\", family: \"unix\"\n</code></pre> <p>Interesting, it returns 6 lines. But you want only version, which is in first line</p> <p>You can use <code>grep</code> or <code>head</code> command to get only the first line</p> <pre><code>[opc@new-k8s part-2]$ mvn --version | grep \"Apache Maven\"\nApache Maven 3.0.5 (Red Hat 3.0.5-17)\n</code></pre> <p>Now, you can use the <code>awk</code> command to get the version</p> <pre><code>[opc@new-k8s part-2]$ mvn --version | grep \"Apache Maven\" | awk '{ print $3 }'\n3.0.5\n</code></pre> <p>Awesome, lets run the shellscript to get the version and write to version.json file</p> <pre><code>#!/bin/bash\n\nset -e\n\nGIT_VERSION=$(git --version | awk '{print $3}')\nMAVEN_VERSION=$(mvn --version | grep \"Apache Maven\" | awk '{print $3}')\nFILE_NAME=\"version.json\"\n\necho \"{}\" &gt; $FILE_NAME\necho \"$(jq --arg git_version \"$GIT_VERSION\" '. += {\"git\": $git_version}' $FILE_NAME)\" &gt; $FILE_NAME\necho \"$(jq --arg maven_version \"$MAVEN_VERSION\" '. += {\"maven\": $maven_version}' $FILE_NAME)\" &gt; $FILE_NAME\n</code></pre> <pre><code>[opc@new-k8s part-2]$ ./6-store-cli-version-in-json-file.sh\n</code></pre> <pre><code>[opc@new-k8s part-2]$ cat version.json \n{\n  \"git\": \"1.8.3.1\",\n  \"maven\": \"3.0.5\"\n}\n</code></pre>"},{"location":"shellscript/part-3/","title":"Shellscript Part - 3","text":""},{"location":"shellscript/part-3/#youtube","title":"Youtube","text":""},{"location":"shellscript/part-3/#what-is-while-loop","title":"What is while loop ?","text":"<p>While loop is a control flow statement that allows code or commands to be executed repeatedly based on a given condition</p> <p>The while loop continues to run till the condition is true, once the condition becomes false, it comes out of the loop</p> <p></p>"},{"location":"shellscript/part-3/#conditions-symbolsyntax","title":"Conditions symbol/syntax","text":"<ul> <li>== \u2192 To check whether string is equal or not</li> </ul> <pre><code>STRING1 == STRING2\n\nEg:\nDATA=\"devops\"\nif [ \"$DATA\" == \"devops\" ]\n</code></pre> <ul> <li>!= \u2192 To check the strings are not equal</li> </ul> <pre><code>STRING1 != STRING2\n</code></pre> <ul> <li>-eq \u2192 To check whether INTEGER1 is equal to INTEGER2</li> </ul> <pre><code>INTEGER1 -eq INTEGER2\n\nEg:\nINTEGER1=5\nINTEGER2=5\nif [ $INTEGER1 -eq $INTEGER2 ]\n</code></pre> <ul> <li>-gt \u2192 To check whether INTEGER1 is greater than INTEGER2</li> </ul> <pre><code>INTEGER1 -gt INTEGER2\n</code></pre> <ul> <li>-ge \u2192 To check whether INTEGER1 is greater than or equal to INTEGER2</li> </ul> <pre><code>INTEGER1 -ge INTEGER2\n</code></pre> <ul> <li>-le \u2192 To check whether INTEGER1 is lesser than INTEGER2</li> </ul> <pre><code>INTEGER1 -le INTEGER2\n</code></pre> <ul> <li>-lt \u2192 To check whether INTEGER1 is less than or equal to INTEGER2</li> </ul> <pre><code>INTEGER1 -lt INTEGER2\n</code></pre> <ul> <li>-ne \u2192 To check whether INTEGER1 is not equal to INTEGER2</li> </ul> <pre><code>INTEGER1 -ne INTEGER2\n</code></pre>"},{"location":"shellscript/part-3/#clone-the-shellscript-git-repo","title":"Clone the shellscript git repo","text":"<pre><code>[opc@new-k8s ~]$ git clone https://github.com/vigneshsweekaran/shellscript.git\nCloning into 'shellscript'...\nremote: Enumerating objects: 233, done.\nremote: Counting objects: 100% (233/233), done.\nremote: Compressing objects: 100% (175/175), done.\nremote: Total 233 (delta 110), reused 163 (delta 54), pack-reused 0\nReceiving objects: 100% (233/233), 28.28 KiB | 0 bytes/s, done.\nResolving deltas: 100% (110/110), done.\n</code></pre> <pre><code>[opc@new-k8s ~]$ cd shellscript/tutorials/part-3/\n</code></pre> <pre><code>[opc@new-k8s part-3]$ ll\ntotal 20\n-rwxrwxr-x. 1 opc opc 115 May 13 10:31 1-while.sh\n-rwxrwxr-x. 1 opc opc 117 May 13 10:31 2-while-single-line.sh\n-rwxrwxr-x. 1 opc opc 101 May 13 10:31 3-read-a-file.sh\n-rwxrwxr-x. 1 opc opc 440 May 13 10:31 4-read-and-write-to-different-file.sh\n-rwxrwxr-x. 1 opc opc 251 May 13 10:31 5-break-infinite-loop.sh\n</code></pre>"},{"location":"shellscript/part-3/#basic-while-loop","title":"Basic while loop","text":"<pre><code>#!/bin/bash\n\ncount=1\n\nwhile [ $count -le 5 ]\ndo\n  echo \"The count value is ${count}\"\n  count=$(( $count + 1 ))\ndone\n</code></pre> <p>Here, the condition in while loop will be true for 4 times, on 5<sup>th</sup> time, the 5<sup>th</sup> time the condition becomes false and comes out of the while loop</p> <pre><code>[opc@new-k8s part-3]$ ./1-while.sh \nThe count value is 1\nThe count value is 2\nThe count value is 3\nThe count value is 4\n</code></pre>"},{"location":"shellscript/part-3/#while-loop-using-single-line","title":"while loop using single line","text":"<pre><code>#!/bin/bash\n\ncount=1; \n\nwhile [ $count -lt 5 ]; do echo \"The count value is ${count}\"; count=$(( $count + 1 )); done\n</code></pre> <pre><code>[opc@new-k8s part-3]$ ./2-while-single-line.sh \nThe count value is 1\nThe count value is 2\nThe count value is 3\nThe count value is 4\n</code></pre>"},{"location":"shellscript/part-3/#how-to-read-a-file-line-by-line-using-while-loop","title":"How to read a file line by line using while loop","text":"<pre><code>#!/bin/bash\n\nFILE_NAME=\"/etc/os-release\"\n\nwhile read -r line; \ndo \n  echo \"$line\";\ndone &lt; $FILE_NAME\n</code></pre> <p>Here, you have pass the filename at the end of while syntax <code>done &lt; /etc/os-release</code></p> <p>When the while loop starts, using the <code>read</code> command it reads the first line and stores to <code>line</code> variable and it prints the line using <code>echo</code> command</p> <p>It continues and prints the line one by one</p> <p>Once it reaches the end of the file, it stops</p> <pre><code>[opc@new-k8s part-3]$ ./3-read-a-file.sh \nNAME=\"Oracle Linux Server\"\nVERSION=\"7.9\"\nID=\"ol\"\nID_LIKE=\"fedora\"\nVARIANT=\"Server\"\nVARIANT_ID=\"server\"\nVERSION_ID=\"7.9\"\nPRETTY_NAME=\"Oracle Linux Server 7.9\"\nANSI_COLOR=\"0;31\"\nCPE_NAME=\"cpe:/o:oracle:linux:7:9:server\"\nHOME_URL=\"https://linux.oracle.com/\"\nBUG_REPORT_URL=\"https://bugzilla.oracle.com/\"\n\nORACLE_BUGZILLA_PRODUCT=\"Oracle Linux 7\"\nORACLE_BUGZILLA_PRODUCT_VERSION=7.9\nORACLE_SUPPORT_PRODUCT=\"Oracle Linux\"\nORACLE_SUPPORT_PRODUCT_VERSION=7.9\n</code></pre>"},{"location":"shellscript/part-3/#how-to-filter-the-lines-and-write-to-different-files","title":"How to filter the lines and write to different files","text":"<p>Here, \"/var/log/httpd/access_log\" is the log file of httpd web server which contains the full log from where they tried to access this httpd web server</p> <p>From this log file, we want to filter and the details, how many requests came from android mobile, windows os and store to them in separate files android.log, windows.log</p> <p>All other logs will be stored to others.log</p> <p>Prerequisite for testing this script</p> <ol> <li> <p>http web server should be installed  </p> <p>Redhat based \u2192 sudo apt yum install httpd  </p> <p>Debian based \u2192 sudo apt apt install apache2</p> </li> <li> <p>And verify log file \"/var/log/httpd/access_log\" is created</p> </li> </ol> <pre><code>[opc@new-k8s part-3]$ cat 4-read-and-write-to-different-file.sh \n#!/bin/bash\n\nSOURCE_FILE_NAME=\"/var/log/httpd/access_log\"\n\nTARGET_FOLDER=$(date +\"%m%d%y-%H%M%S\")\n\nmkdir ${TARGET_FOLDER}\n\nwhile read -r line; \ndo\n  if [[ \"$line\" == *Android* ]] || [[ \"$line\" == *android* ]]; then\n    echo \"$line\" &gt;&gt; ${TARGET_FOLDER}/android.log\n  elif [[ \"$line\" == *Windows* ]]; then\n    echo \"$line\" &gt;&gt; ${TARGET_FOLDER}/windows.log\n  else\n    echo \"$line\" &gt;&gt; ${TARGET_FOLDER}/others.log\n  fi\ndone &lt; ${SOURCE_FILE_NAME}\n</code></pre> <p>First to store this files in separate folder, we create a folder with the name contains timestamp Eg: 051323-111006</p> <p>using while loop we already getting the line one by one.</p> <p>When you receive the singe line from while loop, you can put the if condition to check whether the line contains the word \"Android\", \"android\" and \"Windows\"</p> <p>If \"Android\" or \"android\" word is found in the line, it writes the line to android.log</p> <p>If the line doesn't contains the \"Android\" or \"android\" keyword, it goes to the elseif case and check for \"Windows\" keyword, if it matches it writes to windows.log file</p> <p>Even if it doesn't match, then it goes to else case and write the line to others.log file</p> <pre><code>[opc@new-k8s part-3]$ ./4-read-and-write-to-different-file.sh \n./4-read-and-write-to-different-file.sh: line 18: /var/log/httpd/access_log: Permission denied\n</code></pre> <p>Since we are reading the file <code>/var/log/httpd/access_log</code> owned by <code>root</code> user, we need to run the script with root access</p> <pre><code>[opc@new-k8s part-3]$ sudo ./4-read-and-write-to-different-file.sh\n</code></pre> <pre><code>[opc@new-k8s part-3]$ ll\ntotal 20\ndrwxr-xr-x. 2 root root  62 May 13 11:10 051323-111006\n-rwxrwxr-x. 1 opc  opc  115 May 13 10:31 1-while.sh\n-rwxrwxr-x. 1 opc  opc  117 May 13 10:31 2-while-single-line.sh\n-rwxrwxr-x. 1 opc  opc  101 May 13 10:31 3-read-a-file.sh\n-rwxrwxr-x. 1 opc  opc  440 May 13 10:31 4-read-and-write-to-different-file.sh\n-rwxrwxr-x. 1 opc  opc  251 May 13 10:31 5-break-infinite-loop.sh\n</code></pre> <pre><code>[opc@new-k8s part-3]$ cd 051323-111006/\n</code></pre> <pre><code>[opc@new-k8s 051323-111006]$ ll\ntotal 12\n-rw-r--r--. 1 root root 1169 May 13 11:10 android.log\n-rw-r--r--. 1 root root 3987 May 13 11:10 others.log\n-rw-r--r--. 1 root root 2701 May 13 11:10 windows.log\n</code></pre> <pre><code>[opc@new-k8s 051323-111006]$ cat android.log \n116.14.69.27 - - [13/May/2023:11:08:55 +0000] \"GET / HTTP/1.1\" 403 3539 \"-\" \"Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Mobile Safari/537.36\"\n</code></pre> <pre><code>[opc@new-k8s 051323-111006]$ cat windows.log \n128.14.209.162 - - [13/May/2023:04:46:00 +0000] \"GET / HTTP/1.1\" 403 3539 \"-\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\"\n</code></pre> <pre><code>[opc@new-k8s 051323-111006]$ cat others.log \n54.37.79.75 - - [13/May/2023:03:25:36 +0000] \"POST / HTTP/1.1\" 404 198 \"-\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36\"\n</code></pre>"},{"location":"shellscript/part-3/#how-to-create-infinite-loop-using-while","title":"How to create infinite loop using while","text":"<p>when we set/hardcode the condition to true, the while loop continuously runs and it will not stop</p> <p></p> <p>To come out of the while loop, you have to run <code>break</code> command inside the while loop based on requirement to break the loop</p>"},{"location":"shellscript/part-3/#breaking-the-infinite-loop","title":"Breaking the infinite loop","text":"<p>This script checks whether httpd web server is running or not.</p> <p>If the httpd service is running, it just prints the status code and continues the while loop</p> <p>But if the httpd service is stopped, it enters the <code>if</code> condition and run he break command to stop the loop.</p> <p>Before running the break, based on the requirement you can send a mail or notify to any notification tools.</p> <pre><code>#!/bin/bash\n\nwhile [ true ] \ndo\n  systemctl status httpd &gt; /dev/null\n  httpd_status=$(echo $?)\n  echo \"The httpd status is ${httpd_status}\"\n\n  if [ $httpd_status -ne 0 ]\n  then\n    echo \"Httpd application stoppped !!\"\n    break\n  fi\n\n  sleep 1\ndone\n</code></pre> <pre><code>[opc@new-k8s part-3]$ systemctl status httpd\n\u25cf httpd.service - The Apache HTTP Server\n   Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset: disabled)\n   Active: active (running) since Sat 2023-05-13 11:17:34 GMT; 4s ago\n     Docs: man:httpd(8)\n           man:apachectl(8)\n Main PID: 22415 (httpd)\n   Status: \"Processing requests...\"\n    Tasks: 6\n   Memory: 25.5M\n   CGroup: /system.slice/httpd.service\n           \u251c\u250022415 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250022416 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250022417 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250022418 /usr/sbin/httpd -DFOREGROUND\n           \u251c\u250022419 /usr/sbin/httpd -DFOREGROUND\n           \u2514\u250022421 /usr/sbin/httpd -DFOREGROUND\n</code></pre> <p></p> <p>Here i have opened 2 terminals, in the first terminal, I execute the script.</p> <p>Since the httpd service is running fine, it script continues to run and printing the status code</p> <p>In the 2 terminal, I stopped the httpd service, then the scripts stops immediately.</p> <p>Since the status code changes to 3, it enter the if condition and runs the break command</p> <pre><code>[opc@new-k8s part-3]$ systemctl status httpd\n\u25cf httpd.service - The Apache HTTP Server\n   Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset: disabled)\n   Active: inactive (dead)\n     Docs: man:httpd(8)\n           man:apachectl(8)\n</code></pre>"},{"location":"shellscript/part-4/","title":"Shellscript Part - 4","text":""},{"location":"shellscript/part-4/#youtube","title":"Youtube","text":""},{"location":"shellscript/part-4/#what-is-function","title":"What is function ?","text":"<p>Function is used to group the set of commands/logic and it will be executed only if it is called</p> <p>Mainly used for reusability purpose.</p>"},{"location":"shellscript/part-4/#clone-the-shellscript-git-repo","title":"Clone the shellscript git repo","text":"<pre><code>ubuntu@test:~$ git clone https://github.com/vigneshsweekaran/shellscript\nCloning into 'shellscript'...\nremote: Enumerating objects: 271, done.\nremote: Counting objects: 100% (271/271), done.\nremote: Compressing objects: 100% (200/200), done.\nremote: Total 271 (delta 135), reused 189 (delta 67), pack-reused 0\nReceiving objects: 100% (271/271), 31.86 KiB | 1.18 MiB/s, done.\nResolving deltas: 100% (135/135), done.\n</code></pre> <pre><code>ubuntu@test:~$ cd shellscript/tutorials/part-4/\n</code></pre> <pre><code>ubuntu@test:~/shellscript/tutorials/part-4$ ll\n-rwxrwxr-x 1 ubuntu ubuntu  158 May 15 11:38 1-function.sh*\n-rwxrwxr-x 1 ubuntu ubuntu  238 May 15 11:38 2-function-return.sh*\n-rwxrwxr-x 1 ubuntu ubuntu  516 May 15 11:38 3-function-return-array.sh*\n-rwxrwxr-x 1 ubuntu ubuntu  894 May 15 11:38 4-create-user.sh*\n</code></pre>"},{"location":"shellscript/part-4/#basic-function","title":"Basic function","text":"<pre><code>#!/bin/sh\n\n# Function Definition\ngreeting() {\n   echo \"Hello $1\"\n}\n\n# Calling the function\ngreeting \"DevopsPilot\"\n\ngreeting \"Vignesh\"\n\ngreeting \"Shellscript\"\n</code></pre> <p>Here we created a function named <code>greeting</code> This will not be executed by itself. You have to call the function by its name, then only it will be executed</p> <p>You can pass the arguments to the function, if it is expected.</p> <p>In the above, we are calling the function <code>greeting</code> and passing the argument <code>Vignesh</code> Eg: greeting \"vignesh\"</p> <p>You can call the function many number of times with different arguments based on requirement</p> <pre><code>ubuntu@test:~/shellscript/tutorials/part-4$ ./1-function.sh \nHello DevopsPilot\nHello Vignesh\nHello Shellscript\n</code></pre> <p>In the above output, you have seen three times the <code>echo</code> command was executed with different outputs since we called the function 3 times with different arguments</p>"},{"location":"shellscript/part-4/#how-to-return-some-data-from-function","title":"How to return some data from function","text":"<pre><code>#!/bin/sh\n\n# Function Definition\naddition() {\n  num1=$1\n  num2=$2\n\n  output=$(( num1 + num2 ))\n\n  return $output\n}\n\n# Calling the function\naddition 20 5\n\n# Capture the result returned by last command\nresult=$?\n\necho \"The output is $result\"\n</code></pre> <p>In some scenarios you want to return the output data from the function to the caller.</p> <p>You have use the <code>return</code> keyword to return the data from the function Eg: return $output</p> <p><code>$output</code> is the data you want to return</p> <p>To capture the returned data. After the function call, you have to use <code>$?</code> EG: result=$?</p> <p>So the returned data is captured and stored to a variable</p> <p>NOTE: A function can return only a number or string</p> <pre><code>ubuntu@test:~/shellscript/tutorials/part-4$ ./2-function-return.sh \nThe output is 25\n</code></pre>"},{"location":"shellscript/part-4/#how-to-return-a-array-from-function","title":"How to return a array from function","text":"<pre><code>ubuntu@test:~/shellscript/tutorials/part-4$ cat 3-function-return-array.sh \n#!/bin/bash\n\noutput=()\n\n# Function Definition\ncalculate() {\n  num1=$1\n  num2=$2\n\n  output_add=$(( num1 + num2 ))\n  output_sub=$(( num1 - num2 ))\n  output_multiply=$(( num1 * num2 ))\n  output_division=$(( num1 / num2 ))\n\n  output=(\"$output_add\" \"$output_sub\" \"$output_multiply\" \"$output_division\")\n}\n\n# Calling the function\ncalculate 20 5\n\necho \"The addition result is ${output[0]}\"\necho \"The subtraction result is ${output[1]}\"\necho \"The multiplication result is ${output[2]}\"\necho \"The division result is ${output[3]}\"\n</code></pre> <p>Since you can return only number or string, array cannot be returned directly from the function.</p> <p>In this case, you have to declare the empty array outside the function Eg: output=()</p> <p>And the update the array inside the function once the data is ready</p> <p>So you can directly access the array, once the function is executed. No need to return the data from function here</p> <p>Once the function <code>calculate</code> is executed. We can directly access the <code>${output[0]}</code> to get the first data from the array</p> <pre><code>ubuntu@test:~/shellscript/tutorials/part-4$ ./3-function-return-array.sh \nThe addition result is 25\nThe subtraction result is 15\nThe multiplication result is 100\nThe division result is 4\n</code></pre>"},{"location":"shellscript/part-4/#how-to-create-and-delete-the-linux-users-using-script","title":"How to create and delete the linux users using script","text":"<pre><code>#!/bin/bash\n\nusers_list=(raghav mani manoj devops)\ndelete_users_list=(raghav)\n\n# Checks whether user is present or not\ncheck_user(){\n  USER=$1\n\n  id ${USER}\n  return $?\n}\n\n# To create user\ncreate_user(){\n  USER=$1\n  COMMENT=\"Managed by script\"\n  useradd -c \"$COMMENT\" $USER --create-home\n  echo \"Created user $USER successfully !!!\"\n}\n\n# To delete users\ndelete_users(){\n  echo \"Deleting Users ...\"\n\n  for user in ${delete_users_list[@]};\n  do\n    check_user $user\n    user_status=$?\n\n    if [[ $user_status -eq 0 ]]\n    then\n      userdel -r $user\n    else\n      echo \"The user ${user} doesn't exist !!!\"\n    fi\n  done\n}\n\n# Creating users\necho \"Creating Users ...\"\n\nfor user in ${users_list[@]};\ndo\n  check_user $user\n  user_status=$?\n\n  if [[ $user_status -ne 0 ]]\n  then\n    create_user $user\n  else\n    echo \"The user ${user} already exist !!!\"\n  fi\ndone\n\n# Deleting Users\n# delete_users\n</code></pre> <p>First we create two array's <code>users_list</code> to store the list of news users to create and <code>delete_users_list</code> to store the list of existing users you want to delete</p> <p>And we create 3 functions,</p> <p>check_user \u2192 To check whether user is already existing or not</p> <p>create_user \u2192 To create a new user</p> <p>delete_users \u2192 To delete the users listed in <code>delete_users_list</code> array</p> <p>The execution starts at the <code>echo \"Creating Users ...\"</code> and then <code>for user in ${users_list[@]};</code></p> <p>For gets the first user from <code>users_list</code> array and stores to <code>user</code> variable.</p> <p>Then we call the <code>check_user</code> with argument as <code>user</code> to check whether user is present or not.</p> <p>The <code>check_user</code> function runs the <code>id $users</code> command to check whether user is present or not.</p> <p>If the user is present <code>$?</code> will give <code>0</code> if not it returns non-zero number</p> <p>Then we passes the result from function to who called the function.</p> <p>Next to the function call, you can use <code>$?</code> to capture the data returned from the function.</p> <p><code>$?</code> is used for many purposes, when we check <code>$?</code> after command execution it gives the status_code of the command</p> <p>If we check after the function call, it gives the function return data.</p> <p>Here the function may return <code>0</code> or non-zero number and storing the data to <code>user_status</code> variable</p> <p>If <code>user_status</code> is <code>0</code> the user is already present, then the <code>if</code> condition just prints <code>echo \"The user ${user} already exist !!!\"</code></p> <p>If <code>user_status</code> is non-zero number, it enters <code>if</code> condition and call the <code>create_user</code> function with argument <code>user</code> to create the new linux user.</p> <p>The for loop continues and creates all users listed in <code>users_list</code> array</p> <p>Next <code># delete_users</code> function call line is commented, it will not call the <code>delete_users()</code> function</p> <p>If you want to delete the users listed in <code>delete_users_list</code> array. Uncomment the function call line <code>delete_users</code></p> <p>So the <code>delete_users()</code> function will be called and it checks whether the user is present or not using <code>check_user()</code> function and deletes the user using <code>userdel</code> command</p> <p>The for loop inside <code>delete_users()</code> function continues and delete all user listed in <code>delete_users_list</code> array</p> <pre><code>ubuntu@test:~/shellscript/tutorials/part-4$ sudo ./4-user-management.sh \nCreating Users ...\nid: \u2018raghav\u2019: no such user\nCreated user raghav successfully !!!\nid: \u2018mani\u2019: no such user\nCreated user mani successfully !!!\nid: \u2018manoj\u2019: no such user\nCreated user manoj successfully !!!\nid: \u2018devops\u2019: no such user\nCreated user devops successfully !!!\n</code></pre>"},{"location":"sonarqube/quality-gate/","title":"How to integrate Sonarqube Quality Gate in Jenkins pipeline","text":""},{"location":"sonarqube/quality-gate/#reference","title":"Reference","text":"<p>How to integrate sonarqube quality gate in Jenkins</p>"},{"location":"ssh/ssh/","title":"SSH (Secure Shell)","text":""},{"location":"ssh/ssh/#youtube","title":"Youtube","text":""},{"location":"ssh/ssh/#ssh-part-1","title":"SSH Part-1","text":""},{"location":"ssh/ssh/#ssh-part-2","title":"SSH Part-2","text":"<p>SSH(Secure Shell) is a command line tool to connect to another linux machine and to run some commands on it.</p> <p></p>"},{"location":"ssh/ssh/#to-install-ssh-client","title":"To install ssh-client","text":"<pre><code>sudo apt install -y openssh-client\n</code></pre>"},{"location":"ssh/ssh/#to-install-ssh-server","title":"To install ssh-server","text":"<pre><code>sudo apt install -y openssh-server\n</code></pre>"},{"location":"ssh/ssh/#to-check-sshd-service-is-running-or-not","title":"To check sshd service is running or not","text":"<pre><code>sudo systemctl status sshd\n</code></pre>"},{"location":"ssh/ssh/#two-ways-to-connect-to-linux-servers-using-ssh","title":"Two ways to connect to linux servers using ssh","text":"<ul> <li> <p>ssh using password</p> </li> <li> <p>ssh using public/private keys</p> </li> </ul>"},{"location":"ssh/ssh/#to-enable-password","title":"To Enable password","text":"<p>By default in most of the linux servers password authetication for ssh will be disabled</p> <p>Edit the /etc/ssh/sshd_config and update PasswordAuthentication value from \"no\" to \"yes\" If the line is commented, please uncomment</p>"},{"location":"ssh/ssh/#ssh-using-password","title":"ssh using password","text":"<pre><code>ssh user_name@ip-address\n</code></pre>"},{"location":"ssh/ssh/#generating-ssh-keys-in-default-location","title":"Generating ssh keys in default location","text":"<pre><code>ubuntu@test1:~$ ssh-keygen\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/home/ubuntu/.ssh/id_rsa):\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in /home/ubuntu/.ssh/id_rsa\nYour public key has been saved in /home/ubuntu/.ssh/id_rsa.pub\nThe key fingerprint is:\nSHA256:YDknfQjuZk0dTrUs99HhUsoGNiMIuiDqt+tn6hyncuA ubuntu@test1\nThe key's randomart image is:\n+---[RSA 3072]----+\n|     .o ..o*.  o |\n|    .. = =oo=.+..|\n|.. .  B = = +=...|\n|o . .o B . o.... |\n|.  .  + S     .  |\n|..   o           |\n|...o .           |\n| Eo.=o           |\n|  =O=            |\n+----[SHA256]-----+\n</code></pre> <p>id_rsa \u2192 Private key id_rsa.pub \u2192 Public key</p> <pre><code>ubuntu@test1:~$ cd .ssh/\nubuntu@test1:~/.ssh$ pwd\n/home/ubuntu/.ssh\nubuntu@test1:~/.ssh$ ll\ntotal 28\ndrwx------ 2 ubuntu ubuntu 4096 Apr 26 10:54 ./\ndrwxr-x--- 4 ubuntu ubuntu 4096 Apr 26 10:37 ../\n-rw------- 1 ubuntu ubuntu  400 Apr 26 10:33 authorized_keys\n-rw------- 1 ubuntu ubuntu 2602 Apr 26 10:54 id_rsa\n-rw-r--r-- 1 ubuntu ubuntu  566 Apr 26 10:54 id_rsa.pub\n-rw------- 1 ubuntu ubuntu  978 Apr 26 10:51 known_hosts\n-rw-r--r-- 1 ubuntu ubuntu  142 Apr 26 10:51 known_hosts.old\n</code></pre> <p>id_rsa</p> <pre><code>ubuntu@test1:~/.ssh$ cat id_rsa\n-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAYEA4sAGb1zOdG78f9ASyrGmZdjaw2fxddDLMdBZYTcReYnFUwa9hGiQ\nkrPA79HXsNNQ1Bc0TP1dQwgXWJrlmGHPoWm64XxBphTPuC47Nz3iykO3S4vifiz1br9lus\nqxjsIoZjFbzIi12vosPYTZIXUf+gDCG6lokVcpeY+bLPYz1eojxIzBxmt2Sa9sVof+lQnO\nkLurcyXS+t5kSpjujhLECa8KQJUTvIXtL1N4ZBPCzCPNVyBs9/HffJmOPs7lLrUK/XUeGy\nExzWu0Gea9W8ur/ALBNIK/GYnqjE6He8OXjeHmJx50HAjmEvhsjvU3keQ/1h+CQvHgfuU9\nFI5RJxJSBTMHW0x8VriJNYKDO43yJ48VeuFEai6yFdS6XuyFXLVWY+mQ3BRjT0xqXloNhG\nXO3XyyG0ttDeUhi5C6R0K0oHrrtGMDAtd3YRQILdJhXbz+fIu7pVW5pycNvFqGW2T9hJ7I\ncuNnWe+kOPIeISU+4NRfoEANYf4iBPP94wVq4u0vAAAFiOOZ/BfjmfwXAAAAB3NzaC1yc2\nEAAAGBAOLABm9cznRu/H/QEsqxpmXY2sNn8XXQyzHQWWE3EXmJxVMGvYRokJKzwO/R17DT\nUNQXNEz9XUMIF1ia5Zhhz6FpuuF8QaYUz7guOzc94spDt0uL4n4s9W6/ZbrKsY7CKGYxW8\nyItdr6LD2E2SF1H/oAwhupaJFXKXmPmyz2M9XqI8SMwcZrdkmvbFaH/pUJzpC7q3Ml0vre\nZEqY7o4SxAmvCkCVE7yF7S9TeGQTwswjzVcgbPfx33yZjj7O5S61Cv11HhshMc1rtBnmvV\nvLq/wCwTSCvxmJ6oxOh3vDl43h5icedBwI5hL4bI71N5HkP9YfgkLx4H7lPRSOUScSUgUz\nB1tMfFa4iTWCgzuN8iePFXrhRGoushXUul7shVy1VmPpkNwUY09Mal5aDYRlzt18shtLbQ\n3lIYuQukdCtKB667RjAwLXd2EUCC3SYV28/nyLu6VVuacnDbxahltk/YSeyHLjZ1nvpDjy\nHiElPuDUX6BADWH+IgTz/eMFauLtLwAAAAMBAAEAAAGAagMuXwWMbupu+hDdoE+zhN2A1i\ng0P4mJXrZS+30kGec8TueRVqUOptAMzfMVfVIm8aoRpUc1wb+4LpBo9LgSO5yzp3WROeV0\nAl/3BopUDI3hVhxGHgjGDOvGU7Etl5mWCsVb7oIiSAl8Ap0oaRiaBSgymH05au5N8UwfWE\nOZk5M++sd2V17ptGSkacZ2U9b8cTWU4KaX//tW93uN2PXUGtTwHaa1TghtjplfaabFhezd\nNbVuzPOUMeyXES1pAE/avFnO5DmD6pkhfKM3qv8xAA7aA5muZIAVO7b4WhzILFIJ2Li6e3\nh9vq10uGElr5sIKymZSUZhL2+cmjizQTAscE8VDkvnKyPDLqhJiMzV5IqoAdiGahXxcc7Z\nPqFs8kr5DxcE7NdDyoj3Uw3Ai+UYHz10UMws+EcU31uubKCpF8JnjtBImm+kZ5hzMeWVFG\n7cW66iC8K2KbzHei7dg7Lw/Z6obfNN1zFdEB0IDT41LArE9vDTqbwLrJFKsmqd86j5AAAA\nwEOp0sU5oB/QRPVoW56fSzK4Csd9FVt7Li7HwoEfOzXc2eSKfNhzFSJ/e9JLhFSfpOZJ5R\n/m79zYsN+7KmBZufKwAQoh9M+LPIxa54IyJzlBI1nNxKQOTvP+XMDTkB+Asndb1bLukV7W\nlJrbpBfSrvYi/KPVFFFfbIpj9RPOlJnj/rIe/aEQ5GxLT7OlmQTgkDSnNGqPNfMqxz5zgV\n+j6K8fvkc7hTl1telWUgHq8ZQJy6kILIijVY592+BLSus13wAAAMEA4vm+Kj57WZ2ZC82v\nMkFwoG35Y8u5QrE4CBvxuiVYxT7Mm6Jo8apkZy5ju1JClkNRZHF6Ii3sbWFUZNBjZPyAJN\n5Q7TSlgs/Pf8Jh7vTNlkXnpVnjk9A5MXG1pvbeUyKvoHqy4ciwbmJhnAxVktf/YZTpktPO\nxM5wr/Qy9Cv7MWhSDk/79+6lDCcX2J9mRVNyi7orSL79aOwJhgJnNulqDKCqPaYFc59fAM\nfigpwKyBIvQSpSGrX5jy+Eq4H7+LvpAAAAwQD/vubTxxge72Dqvf8M8B3LuyERR8fj0VfQ\nASxYaEHfzKj9KVPuaxzDPnp0mZyEv5M6KtFO2ZjkcBP//i7G/6DFKzTSFefBKlJY6RaxHi\nXfNkz0zzueituQ9LhVZiBR/Xdx0Sm7tyrckDPyEokN6NRH+GnU7GwqHcuk8++QBU+PgJ+6\ntDueVsUcuiaZekpjT49v1964Mc7gBDB/f1JKf4WtqNJk6lX+br9DvF0lOmq/oe9BXScsf5\nGhmh66DYM06VcAAAAMdWJ1bnR1QHRlc3QxAQIDBAUGBw==\n-----END OPENSSH PRIVATE KEY-----\n</code></pre> <p>id_rsa.pub</p> <pre><code>ubuntu@test1:~/.ssh$ cat id_rsa.pub\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDiwAZvXM50bvx/0BLKsaZl2NrDZ/F10Msx0FlhNxF5icVTBr2EaJCSs8Dv0dew01DUFzRM/V1DCBdYmuWYYc+habrhfEGmFM+4Ljs3PeLKQ7dLi+J+LPVuv2W6yrGOwihmMVvMiLXa+iw9hNkhdR/6AMIbqWiRVyl5j5ss9jPV6iPEjMHGa3ZJr2xWh/6VCc6Qu6tzJdL63mRKmO6OEsQJrwpAlRO8he0vU3hkE8LMI81XIGz38d98mY4+zuUutQr9dR4bITHNa7QZ5r1by6v8AsE0gr8ZieqMTod7w5eN4eYnHnQcCOYS+GyO9TeR5D/WH4JC8eB+5T0UjlEnElIFMwdbTHxWuIk1goM7jfInjxV64URqLrIV1Lpe7IVctVZj6ZDcFGNPTGpeWg2EZc7dfLIbS20N5SGLkLpHQrSgeuu0YwMC13dhFAgt0mFdvP58i7ulVbmnJw28WoZbZP2Enshy42dZ76Q48h4hJT7g1F+gQA1h/iIE8/3jBWri7S8= ubuntu@test1\n</code></pre>"},{"location":"ssh/ssh/#authorized_keys","title":"authorized_keys","text":"<p>authorized_keys is a special file of shh, which holds the lists of public keys</p> <p>This file should be located in the target server. Default Path: ~/.ssh/authorized_keys</p>"},{"location":"ssh/ssh/#ssh-using-publicprivate-key","title":"ssh using public/private key","text":"<pre><code>ssh -i private_key user_name@ip-address\n</code></pre> <p>Note: Make sure private key is having only 400 permission</p>"},{"location":"ssh/ssh/#customizing-the-ssh","title":"Customizing the ssh","text":"<p>All the ssh configuration can be customized in /etc/ssh/sshd_config file</p> <p>By defauly ssh process listens on port 22</p> <p>In /etc/ssh/sshd_config file, we can change the port to 8222</p> <p>Present</p> <pre><code>#Port 22\n</code></pre> <p>Uncomment and Update the port number to 8222</p> <pre><code>Port 8222\n</code></pre> <p>Restart the ssh service</p> <pre><code>sudo systemctl restart ssh\n</code></pre> <p>Try connecting to server using new port</p> <pre><code>ssh -p 8222 username@ip_address\n</code></pre>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-certificates-with-nginx-for-subdomains/","title":"How to configure free single Let\u2019s Encrypt SSL/TLS Certificate with NGINX for multiple subdomains and auto renew certificate","text":""},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-certificates-with-nginx-for-subdomains/#prerequisites","title":"Prerequisites","text":"<ul> <li> <p>Have NGINX or NGINX Plus installed.</p> </li> <li> <p>Own or control the registered domain name for the certificate.</p> </li> <li> <p>Create a DNS record that associates your domain name and your server\u2019s public IP address.</p> </li> </ul>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-certificates-with-nginx-for-subdomains/#what-is-certbot","title":"What is certbot","text":"<p>Certbot is a agent for letsencrypt that runs in a server to complete the letsencrypt challenge, request a certificate and get a certificate.</p>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-certificates-with-nginx-for-subdomains/#what-is-letsencrypt-challenge","title":"What is Letsencrypt challenge","text":"<p>Letsencrypt want to verify that you own the domain. So using certbot it will host some files in <code>/.well-known/acme-challenge/</code> folder and serve this files publicly using nginx webserver.</p> <p>Once it verifies the files, the challenge is completed and it will issue the certificate for the requested domain.</p>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-certificates-with-nginx-for-subdomains/#how-to-install-cerbot","title":"How to install cerbot","text":"<pre><code>sudo apt-get update\nsudo apt-get install certbot\nsudo apt-get install python3-certbot-nginx\n</code></pre>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-certificates-with-nginx-for-subdomains/#create-some-sample-application","title":"Create some sample application","text":"<p>To test multiple subdomains, we need some sample applications. Lets create 3 docker containers with sample python flask application.</p> <pre><code>docker run -d -e APP_COLOR=red -p 8081:5000 vigneshsweekaran/helloworld-flask:latest\ndocker run -d -e APP_COLOR=green -p 8082:5000 vigneshsweekaran/helloworld-flask:latest\ndocker run -d -e APP_COLOR=blue -p 8083:5000 vigneshsweekaran/helloworld-flask:latest\n</code></pre> <p>Now we created 3 docker containers which runs on port 8081,8082 and 8083</p> <p>Now open the browser and verify the applications are running.</p> <p>IP-address:8081 \u2192 Should show background color as red</p> <p>IP-address:8082 \u2192 Should show background color as green</p> <p>IP-address:8083 \u2192 Should show background color as blue</p> <p></p> <p></p> <p></p>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-certificates-with-nginx-for-subdomains/#configure-dns-record-in-domain-registrar","title":"Configure DNS record in Domain registrar","text":"<p>app1.devopspilot.tk \u2192 Public IP-address</p> <p>app2.devopspilot.tk \u2192 Public IP-address</p> <p>app3.devopspilot.tk \u2192 Public IP-address</p> <p></p> <p><code>Note :</code></p> <ul> <li> <p>Public IP-address \u2192 Public IP-address of your server, where 3 docker containers are running.</p> </li> <li> <p>Make sure ports 8081, 8082 and 8083 are open.</p> </li> <li> <p>Replace devopspilot.tk with your domain name.</p> </li> </ul>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-certificates-with-nginx-for-subdomains/#configure-nginx","title":"Configure Nginx","text":"<p>Remove the default configuration file in nginx</p> <pre><code>sudo rm -f /etc/nginx/sites-enabled/default\n</code></pre> <p>Create new config file <code>devopspilot.tk.conf</code> in <code>/etc/nginx/conf.d/</code> folder and put the following content</p> <p><code>Info:</code> Configuration file name can be anything</p> <pre><code>sudo vi /etc/nginx/conf.d/devopspilot.tk.conf\n</code></pre> <p>Replace <code>devopspilot.tk</code> with your domain name in config file</p> <pre><code>server {\n    listen 80;\n    server_name app1.devopspilot.tk;\n\n    location / {\n        proxy_pass http://localhost:8081;\n    }\n}\n\nserver {\n    listen 80;\n    server_name app2.devopspilot.tk;\n\n    location / {\n        proxy_pass http://localhost:8082;\n    }\n}\n\nserver {\n    listen 80;\n    server_name app3.devopspilot.tk;\n\n    location / {\n        proxy_pass http://localhost:8083;\n    }\n}\n</code></pre> <p>Run the following command to check for syntax error in conf file</p> <pre><code>sudo nginx -t\n</code></pre> <p><code>Output :</code></p> <pre><code>nginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n</code></pre> <p>Run the following command to reload the nginx webserver</p> <pre><code>nginx -s reload\n</code></pre> <p>Now open the browser and verify whether applications are mapped to subdomains.</p> <p>app1.devopspilot.tk \u2192 Should show background color as red</p> <p>app2.devopspilot.tk \u2192 Should show background color as green</p> <p>app3.devopspilot.tk \u2192 Should show background color as blue</p> <p>Change the <code>devopspilot.tk</code> to your domain name and run the below command.</p> <p>It will complete the letsencrpt challenge, generate the certificate and map the certificate path in <code>devopspilot.tk.conf</code> conf file</p> <pre><code>sudo certbot --nginx -d app1.devopspilot.tk -d app2.devopspilot.tk -d app3.devopspilot.tk\n</code></pre> <p>It will ask for email address, agree the terms and conditions, certificate will be issued and finally enter <code>2</code> to automatically redirect <code>http</code> to <code>https</code></p> <p></p> <p></p> <p>Check the nginx conf file <code>/etc/nginx/conf.d/devopspilot.tk.conf</code> which was updated by certbot</p> <p>Now the nginx conf file looks like below.</p> <pre><code>server {\n    server_name app1.devopspilot.tk;\n    location / {\n        proxy_pass http://localhost:8081;\n    }\n    listen 443 ssl; # managed by Certbot\n    ssl_certificate /etc/letsencrypt/live/app1.devopspilot.tk/fullchain.pem; # managed by Certbot\n    ssl_certificate_key /etc/letsencrypt/live/app1.devopspilot.tk/privkey.pem; # managed by Certbot\n    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot\n    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot\n}\nserver {\n    server_name app2.devopspilot.tk;\n    location / {\n        proxy_pass http://localhost:8082;\n    }\n    listen 443 ssl; # managed by Certbot\n    ssl_certificate /etc/letsencrypt/live/app1.devopspilot.tk/fullchain.pem; # managed by Certbot\n    ssl_certificate_key /etc/letsencrypt/live/app1.devopspilot.tk/privkey.pem; # managed by Certbot\n    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot\n    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot\n}\nserver {\n    server_name app3.devopspilot.tk;\n    location / {\n        proxy_pass http://localhost:8083;\n    }\n    listen 443 ssl; # managed by Certbot\n    ssl_certificate /etc/letsencrypt/live/app1.devopspilot.tk/fullchain.pem; # managed by Certbot\n    ssl_certificate_key /etc/letsencrypt/live/app1.devopspilot.tk/privkey.pem; # managed by Certbot\n    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot\n    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot\n}\nserver {\n    if ($host = app1.devopspilot.tk) {\n        return 301 https://$host$request_uri;\n    } # managed by Certbot\n    listen 80;\n    server_name app1.devopspilot.tk;\n    return 404; # managed by Certbot\n}\nserver {\n    if ($host = app2.devopspilot.tk) {\n        return 301 https://$host$request_uri;\n    } # managed by Certbot\n    listen 80;\n    server_name app2.devopspilot.tk;\n    return 404; # managed by Certbot\n}\nserver {\n    if ($host = app3.devopspilot.tk) {\n        return 301 https://$host$request_uri;\n    } # managed by Certbot\n    listen 80;\n    server_name app3.devopspilot.tk;\n    return 404; # managed by Certbot\n}\n</code></pre> <p>Wait for couple of minutes.</p> <p>Go to browser and type the domain name and verify whether its changed to <code>https</code></p> <p>Go to browser and type <code>http://app1.devopspilot.tk</code></p> <p>Now it will automatically redirect to <code>https://app1.devopspilot.tk</code></p> <p></p> <p>Now lets see how to automatically renew the certificates.</p> <p>Letsencrypt certificates will expire after 3 months.</p> <p>Create a cron job with <code>certbot renew</code> command. This job will daily run at 12 AM and check whether certificates are going to expire or not.</p> <p>If it is going to expire it will regenerate the certificate and map the new certificate path in nginx conf file</p> <p>Run the following command to create a cron job.</p> <pre><code>crontab -e\n</code></pre> <p>After running the <code>crontab -e</code> command it will open a file, type the below command and save the file.</p> <pre><code>0 12 * * * /usr/bin/certbot renew --quiet\n</code></pre> <p>Hurray! we have successfully configured the SSL/TLS certificate in nginx webserver.</p>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-certificates-with-nginx-for-subdomains/#reference","title":"Reference:","text":"<ul> <li> <p>How to install nginx</p> </li> <li> <p>How to configure Free Let\u2019s Encrypt SSL/TLS Certificates with NGINX</p> </li> </ul>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-certificates-with-nginx/","title":"How to configure free Let\u2019s Encrypt SSL/TLS Certificates with NGINX and auto renew certificates","text":""},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-certificates-with-nginx/#prerequisites","title":"Prerequisites","text":"<ul> <li> <p>Have NGINX or NGINX Plus installed.</p> </li> <li> <p>Own or control the registered domain name for the certificate.</p> </li> <li> <p>Create a DNS record that associates your domain name and your server\u2019s public IP address.</p> </li> </ul>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-certificates-with-nginx/#what-is-certbot","title":"What is certbot","text":"<p>Certbot is a agent for letsencrypt that runs in a server to complete the letsencrypt challenge, request a certificate and get a certificate.</p>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-certificates-with-nginx/#what-is-letsencrypt-challenge","title":"What is Letsencrypt challenge","text":"<p>Letsencrypt want to verify that you own the domain. So using certbot it will host some files in <code>/.well-known/acme-challenge/</code> folder and serve this files publicly using nginx webserver.</p> <p>Once it verifies the files, the challenge is completed and it will issue the certificate for the requested domain.</p>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-certificates-with-nginx/#how-to-install-cerbot","title":"How to install cerbot","text":"<pre><code>sudo apt-get update\nsudo apt-get install certbot\nsudo apt-get install python3-certbot-nginx\n</code></pre>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-certificates-with-nginx/#configure-dns-record-in-domain-registrar","title":"Configure DNS record in Domain registrar","text":"<p>www.devopspilot.tk \u2192 IP-address</p>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-certificates-with-nginx/#configure-nginx","title":"Configure Nginx","text":"<p>Remove the default configuration file in nginx</p> <pre><code>sudo rm -f /etc/nginx/sites-enabled/default\n</code></pre> <p>Create new config file <code>devopspilot.tk.conf</code> in <code>/etc/nginx/conf.d/</code> folder and put the following content</p> <p><code>Info:</code> Configuration file name can be anything</p> <pre><code>sudo vi /etc/nginx/conf.d/devopspilot.tk.conf\n</code></pre> <p>Replace <code>devopspilot.tk</code> with your domain name in config file</p> <pre><code>server {\n    listen 80 default_server;\n    listen [::]:80 default_server;\n    root /var/www/html;\n    index index.html index.htm index.nginx-debian.html;\n\n    server_name www.devopspilot.tk;\n\n    location / {\n        try_files $uri $uri/ =404;\n    }\n}\n</code></pre> <p>Run the following command to check for syntax error in conf file</p> <pre><code>sudo nginx -t\n</code></pre> <p><code>Output :</code></p> <pre><code>nginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n</code></pre> <p>Run the following command to reload the nginx webserver</p> <pre><code>nginx -s reload\n</code></pre> <p>Change the <code>devopspilot.tk</code> to your domain name and run the below command.</p> <p>It will complete the letsencrpt challenge, generate the certificate and map the certificate path in <code>devopspilot.tk.conf</code> conf file</p> <pre><code>sudo certbot --nginx -d www.devopspilot.tk\n</code></pre> <p>It will ask for email address, agree the terms and conditions, certificate will be issued and finally enter <code>2</code> to automatically redirect <code>http</code> to <code>https</code></p> <p></p> <p></p> <p>Check the nginx conf file <code>/etc/nginx/conf.d/devopspilot.tk.conf</code> which was updated by certbot</p> <p>Now the nginx conf file looks like below.</p> <pre><code>server {\n    root /var/www/html;\n    index index.html index.htm index.nginx-debian.html;\n\n    server_name www.devopspilot.tk;\n\n    location / {\n        try_files $uri $uri/ =404;\n    }\n\n    listen [::]:443 ssl ipv6only=on; # managed by Certbot\n    listen 443 ssl; # managed by Certbot\n    ssl_certificate /etc/letsencrypt/live/www.devopspilot.tk/fullchain.pem; # managed by Certbot\n    ssl_certificate_key /etc/letsencrypt/live/www.devopspilot.tk/privkey.pem; # managed by Certbot\n    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot\n    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot\n\n}\nserver {\n    if ($host = www.devopspilot.tk) {\n        return 301 https://$host$request_uri;\n    } # managed by Certbot\n\n    listen 80 default_server;\n    listen [::]:80 default_server;\n\n    server_name www.devopspilot.tk;\n    return 404; # managed by Certbot\n\n}\n</code></pre> <p>Wait for couple of minutes.</p> <p>Go to browser and type the domain name <code>devopspilot.tk</code></p> <p></p> <p>Now it will automatically redirect to <code>https://www.devopspilot.tk</code></p> <p>Now lets see how to automatically renew the certificates.</p> <p>Letsencrypt certificates will expire after 3 months.</p> <p>Create a cron job with <code>certbot renew</code> command. This job will daily run at 12 AM and check whether certificates are going to expire or not.</p> <p>If it is going to expire it will regenerate the certificate and map the new certificate path in nginx conf file</p> <p>Run the following command to create a cron job.</p> <pre><code>crontab -e\n</code></pre> <p>After running the <code>crontab -e</code> command it will open a file, type the below command and save the file.</p> <pre><code>0 12 * * * /usr/bin/certbot renew --quiet\n</code></pre> <p>Hurray! we have successfully configured the SSL/TLS certificate in nginx webserver.</p>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-certificates-with-nginx/#reference","title":"Reference:","text":"<ul> <li>How to install nginx</li> </ul>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-wildcard-certificates-with-nginx-for-subdomains/","title":"How to configure free single Let\u2019s Encrypt SSL/TLS wildcard Certificate with Nginx","text":""},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-wildcard-certificates-with-nginx-for-subdomains/#prerequisites","title":"Prerequisites","text":"<ul> <li> <p>Nginx web server up and running.</p> </li> <li> <p>Own or control the registered domain name for the certificate.</p> </li> <li> <p>Create a DNS record that associates your domain name and your server\u2019s public IP address.</p> </li> </ul>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-wildcard-certificates-with-nginx-for-subdomains/#what-is-certbot","title":"What is certbot","text":"<p>Certbot is a agent for letsencrypt that runs in a server to complete the letsencrypt challenge, request a certificate and get a certificate.</p>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-wildcard-certificates-with-nginx-for-subdomains/#what-is-letsencrypt-challenge","title":"What is Letsencrypt challenge","text":"<p>Letsencrypt want to verify that you own the domain. So using certbot it will host some files in <code>/.well-known/acme-challenge/</code> folder and serve this files publicly using nginx webserver.</p> <p>Once it verifies the files, the challenge is completed and it will issue the certificate for the requested domain.</p>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-wildcard-certificates-with-nginx-for-subdomains/#what-is-wildcard-certificate","title":"what is wildcard certificate","text":"<p>Wildcard certificate is a SSl/TLS certificate generated commonly for all subdomains.</p> <p>If we dont know the subdomain to be used while generating the certificate. You can generate the wildcard certificate and we can configure any subdomain using this wildcard certificate.</p> <p>Eg. We will generate certificate for domain name <code>*.devopspilot.tk</code> and later we can use this certificate to configure any subdomains like <code>app1.devopspilot.tk</code> <code>app2.devopspilot.tk</code> <code>app3.devopspilot.tk</code></p>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-wildcard-certificates-with-nginx-for-subdomains/#how-to-install-cerbot","title":"How to install cerbot","text":"<pre><code>sudo apt-get update\nsudo apt-get install certbot\nsudo apt-get install python3-certbot-nginx\n</code></pre>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-wildcard-certificates-with-nginx-for-subdomains/#create-some-sample-application","title":"Create some sample application","text":"<p>To test wildcard certificate, we need some sample applications. Lets create one docker containers with sample python flask application.</p> <pre><code>docker run -d -e APP_COLOR=red -p 8081:5000 vigneshsweekaran/helloworld-flask:latest\n</code></pre> <p>Now we created one docker containers which runs on port 8081</p> <p>Now open the browser and verify the applications are running.</p> <p>IP-address:8081 \u2192 Should show background color as red</p> <p></p>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-wildcard-certificates-with-nginx-for-subdomains/#configure-dns-record-in-domain-registrar","title":"Configure DNS record in Domain registrar","text":"<p>app1.devopspilot.tk \u2192 Public IP-address</p> <p></p> <p><code>Note :</code></p> <ul> <li> <p>Public IP-address \u2192 Public IP-address of your server, where docker container is running.</p> </li> <li> <p>Make sure ports 8081 is open.</p> </li> <li> <p>Replace devopspilot.tk with your domain name.</p> </li> </ul>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-wildcard-certificates-with-nginx-for-subdomains/#generate-certificate","title":"Generate certificate","text":"<p>For wildcard certificate we cannot use nginx plugin, since acme-challenge will not be completed by nginx.</p> <p>For wildcard certificate we have to use dns challenge to complete the verification.</p> <p>While generating the certificate it will generate one token, we have to add that token as <code>TXT</code> DNS record in domain registrar.</p> <p>Lets run the below command to generate the certificate</p> <pre><code>sudo certbot certonly --manual --preferred-challenges=dns -d *.devopspilot.tk\n</code></pre> <p>It will ask for email address, agree the terms and conditions, copy the token and add the token as <code>TXT</code> record in domain registrar with sub domain as <code>acme-challenge</code> and then press Enter to continue and the certificate will be issued.</p> <p>Note:</p> <ul> <li>If you are using freenom domain registrar, wait for 5 minutes before pressing ENTER after adding the <code>TXT</code> DNS record.</li> </ul> <p></p> <p></p> <p></p>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-wildcard-certificates-with-nginx-for-subdomains/#configure-nginx","title":"Configure Nginx","text":"<p>Remove the default configuration file in nginx</p> <pre><code>sudo rm -f /etc/nginx/sites-enabled/default\n</code></pre> <p>Create new config file <code>devopspilot.tk.conf</code> in <code>/etc/nginx/conf.d/</code> folder and put the following content</p> <p><code>Info:</code> Configuration file name can be anything</p> <pre><code>sudo vi /etc/nginx/conf.d/devopspilot.tk.conf\n</code></pre> <p>Replace <code>devopspilot.tk</code> with your domain name in config file</p> <pre><code>server {\n    server_name app1.devopspilot.tk;\n    location / {\n        proxy_pass http://localhost:8081;\n    }\n    listen 443 ssl;\n    ssl_certificate /etc/letsencrypt/live/devopspilot.tk/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/devopspilot.tk/privkey.pem;\n}\nserver {\n    if ($host = app1.devopspilot.tk) {\n        return 301 https://$host$request_uri;\n    }\n    listen 80;\n    server_name app1.devopspilot.tk;\n    return 404;\n}\n</code></pre> <p>Run the following command to check for syntax error in conf file</p> <pre><code>sudo nginx -t\n</code></pre> <p><code>Output :</code></p> <pre><code>nginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n</code></pre> <p>Run the following command to reload the nginx webserver</p> <pre><code>nginx -s reload\n</code></pre> <p>Wait for couple of minutes.</p> <p>Go to browser and type <code>http://app1.devopspilot.tk</code></p> <p>Now it will automatically redirect to <code>https://app1.devopspilot.tk</code></p> <p></p> <p>Letsencrypt certificates will expire after 3 months.</p> <p>Since we have generated the ssl certificate using <code>--manual</code> argument we cannot automatically renew the certificate.</p> <p>If we want to automatically renew the certificates we have to use the domain-registrar plugin while generating the certificate.</p> <p>I have used <code>freenom</code> domain registrar, that is not supported by letsencrpt as a plugin to automate the DNS record challenge.</p> <p>If you have used Godady, AWS Route53, Google Domains you can use the letsencrypt plugin to automate this.</p> <p>Letsencrypt DNS plugin documentation link</p> <p>Hurray! we have successfully configured the SSL/TLS certificate in nginx webserver.</p>"},{"location":"ssl/how-to-configure-free-letsencrypt-ssl-tls-wildcard-certificates-with-nginx-for-subdomains/#reference","title":"Reference:","text":"<ul> <li> <p>How to install nginx</p> </li> <li> <p>How to configure Free Let\u2019s Encrypt SSL/TLS Certificates with NGINX</p> </li> </ul>"},{"location":"ssl/self-signed-certificate-using-openssl/","title":"How to generate self signed certificate using openssl","text":""},{"location":"ssl/self-signed-certificate-using-openssl/#generate-self-signed-certificate-using-openssl","title":"Generate self signed certificate using openssl","text":""},{"location":"terraform/aws/codebuild-helloworld/","title":"Terraform script to create AWS Codebuild project","text":""},{"location":"terraform/aws/codebuild-helloworld/#terraform-script-github","title":"Terraform Script Github","text":""},{"location":"terraform/aws/codebuild-helloworld/#terraform-script-creates-the-following","title":"Terraform script creates the following","text":"<ul> <li> <p>AWS Codebuild project</p> </li> <li> <p>Roles</p> </li> <li> <p>ECR repository for storing docker images</p> </li> <li> <p>S3 bucket for storing the build artifacts</p> </li> <li> <p>SSM parameter store to store the Docker Hub password</p> </li> </ul>"},{"location":"terraform/aws/codebuild-helloworld/#code-build-project","title":"Code build project","text":"<ul> <li> <p>Compiles the java project using maven</p> </li> <li> <p>Build the docker image</p> </li> <li> <p>Push the docker image to ECR repository</p> </li> <li> <p>Publish the artifacts to s3 bucket</p> </li> </ul>"},{"location":"terraform/aws/codedeploy-helloworld/","title":"Terraform script to create AWS Codedeploy","text":""},{"location":"terraform/aws/codedeploy-helloworld/#terraform-script-github","title":"Terraform Script Github","text":""},{"location":"terraform/aws/codedeploy-helloworld/#terraform-script-creates-the-following","title":"Terraform script creates the following","text":"<ul> <li> <p>AWS EC2 instance and install the codedeploy agent</p> </li> <li> <p>Roles</p> </li> <li> <p>AWS Codedeploy application</p> </li> <li> <p>AWS codedeploy deployment group</p> </li> </ul>"},{"location":"terraform/aws/codedeploy-helloworld/#code-deploy","title":"Code deploy","text":"<ul> <li> <p>Install docker if not preset</p> </li> <li> <p>Check if docker service is running or not</p> </li> <li> <p>Stops the old docker container if running</p> </li> <li> <p>Creates new docker container with new docker image</p> </li> <li> <p>Validates if newly created docker container is running or not</p> </li> </ul> <p>Codedeploy deployment has to be triggered manually once the above resources are created by terraform script</p>"},{"location":"terraform/aws/codepipeline-helloworld/","title":"Terraform script to create AWS Codepipeline","text":""},{"location":"terraform/aws/codepipeline-helloworld/#terraform-script-github","title":"Terraform Script Github","text":""},{"location":"terraform/aws/codepipeline-helloworld/#terraform-script-creates-the-following","title":"Terraform script creates the following","text":"<ul> <li> <p>AWS Codebuild project</p> </li> <li> <p>Roles</p> </li> <li> <p>ECR repository for storing docker images</p> </li> <li> <p>S3 bucket for storing the build artifacts, codepipeline artifacts</p> </li> <li> <p>SSM parameter store to store the Docker Hub password</p> </li> <li> <p>AWS EC2 instance and install the codedeploy agent</p> </li> <li> <p>AWS Codedeploy application</p> </li> <li> <p>AWS codedeploy deployment group</p> </li> <li> <p>AWS Codepipeline</p> </li> </ul>"},{"location":"terraform/aws/codepipeline-helloworld/#code-build-project","title":"Code build project","text":"<ul> <li> <p>Compiles the java project using maven</p> </li> <li> <p>Build the docker image</p> </li> <li> <p>Push the docker image to ECR repository</p> </li> <li> <p>Publish the artifacts to s3 bucket</p> </li> </ul>"},{"location":"terraform/aws/codepipeline-helloworld/#code-deploy","title":"Code deploy","text":"<ul> <li> <p>Install docker if not preset</p> </li> <li> <p>Check if docker service is running or not</p> </li> <li> <p>Stops the old docker container if running</p> </li> <li> <p>Creates new docker container with new docker image</p> </li> <li> <p>Validates if newly created docker container is running or not</p> </li> </ul>"},{"location":"terraform/aws/codepipeline-helloworld/#code-pipeline","title":"Code pipeline","text":"<ul> <li> <p>Takes the code from github, zip it and push to s3 bucket</p> </li> <li> <p>Triggers the codebuild project, picks the codepipeline build artifacts from s3</p> </li> <li> <p>Triggers the codedeploy</p> </li> </ul>"},{"location":"webserver/nginx/how-to-install-nginx/","title":"How to install nginx in Linux","text":""},{"location":"webserver/nginx/how-to-install-nginx/#what-is-nginx","title":"What is Nginx ?","text":"<p>Nginx is an open source web server. Which is used to serve html, css and Js files</p>"},{"location":"webserver/nginx/how-to-install-nginx/#install-nginx-webserver","title":"Install nginx webserver","text":"<p><code>On Ubuntu Operating system</code></p> <pre><code>sudo apt update\nsudo apt nginx -y\n</code></pre> <p>Check the status of nginx service and enable nginx service</p> <pre><code>sudo systemctl status nginx\nsudo systemctl enable nginx\n</code></pre> <p></p> <p>By default nginx webserver start on port 80. Now we can access the nginx webserver application by <code>http://ip-address:80</code> in browser.</p> <p>You can also access the application directly by ip-address without mentioning port like this <code>http://ip-address</code></p> <p>This is because, if we are not specifying the port, by default it uses port 80 for http request and port 443 for https request.</p> <p></p> <p>This default homepage is served from /usr/share/nginx/html/index.html</p> <p></p> <p>Default nginx configuration is located in /etc/nginx/nginx.conf file</p>"},{"location":"webserver/tomcat/how-to-deploy-java-application-to-tomcat-using-maven/","title":"How to deploy the java application to Tomcat 9 webserver using Maven","text":""},{"location":"webserver/tomcat/how-to-deploy-java-application-to-tomcat-using-maven/#references","title":"References:","text":"<ul> <li> <p>How to install Tomcat</p> </li> <li> <p>How to manually deploy the java application to Tomcat 9 webserver</p> </li> </ul> <p>We are going to deploy the java application war file to Tomcat webserver using maven, which means without touching the Tomcat manager GUI we are going to deploy the java application.</p> <p>To create users in Tomcat, open the file /var/lib/tomcat9/conf/tomcat-users.xml</p> <pre><code>sudo vi /var/lib/tomcat9/conf/tomcat-users.xml\n</code></pre> <p>Go to end of the file and paste the following lines inside tomcat-users block and save it.</p> <pre><code>  &lt;role rolename=\"manager-gui\"/&gt;\n  &lt;role rolename=\"manager-script\"/&gt;\n  &lt;user username=\"admin\" password=\"admin\" roles=\"manager-gui\"/&gt;\n  &lt;user username=\"deployer\" password=\"deployer\" roles=\"manager-script\"/&gt;\n</code></pre> <p></p> <p>Here we have defined two roles manager-gui, manager-script and created two users admin, deployer and assigned the manager-gui role to admin user and manager-script role to deployer user.</p> <p>Using admin user we will be able to access the manager web application GUI and using deployer user we will be able to deploy the war file to tomcat using maven command.</p> <p><code>Note:</code> The manager-script role will not give access to Tomcat manager web application GUI, it will give access to deploy the application using scripts.</p> <p>Then restart the tomcat9</p> <pre><code>sudo systemctl restart tomcat9\n</code></pre> <p>Now to deploy the java web application to tomcat, we have to compile the Java code and package it to .war file extension type.</p> <p>I have a sample hello-world maven project in github hello-world</p> <p>To download and compile this code we need two tools to be installed in our system git and maven</p> <p>If you are using Ubuntu system, you can easily install git and maven using following commands.</p> <pre><code>sudo apt install -y git maven\n</code></pre> <p></p> <p>Now we can clone the hello-world project from Github</p> <pre><code>git clone -b maven-deploy-to-tomcat https://github.com/vigneshsweekaran/hello-world.git\n</code></pre> <p></p> <p>Before compiling the code, we have to do some configuration in maven to deploy the hello-world.war to tomcat.</p> <p>We are going to use <code>cargo</code> maven plugin to deploy the war file to tomcat.</p> <p>After installing the maven, <code>.m2</code> directory will be created in home folder. If your server username is ubuntu then the home folder is /home/ubuntu</p> <p>Create <code>settings.xml</code> file in <code>/home/ubuntu/.m2</code> folder.</p> <p></p> <p>Paste the following content in <code>settings.xml</code></p> <pre><code>&lt;settings&gt;\n  &lt;servers&gt;\n    &lt;server&gt;\n      &lt;id&gt;tomcat-server&lt;/id&gt;\n      &lt;configuration&gt;\n        &lt;cargo.tomcat.manager.url&gt;http://152.70.71.239:8080/manager/text&lt;/cargo.tomcat.manager.url&gt;\n        &lt;cargo.remote.username&gt;deployer&lt;/cargo.remote.username&gt;\n        &lt;cargo.remote.password&gt;deployer&lt;/cargo.remote.password&gt;\n      &lt;/configuration&gt;\n    &lt;/server&gt;\n  &lt;/servers&gt;\n&lt;/settings&gt;\n</code></pre> <p></p> <p>settings.xml file is used to save some useful or secret data and these data can be fetched into pom.xml by refering the id.</p> <p>Here we have stored the tomcat url, username and password, which are needed by cargo maven plugin to deploy the hello-world.war to tomcat.</p> <p>And i have already added the <code>cargo</code> maven plugin details to the pom.xml. While executing <code>mvn clean install</code> maven will download the cargo plugin from maven repository.</p> <p>While creating the <code>settings.xml</code> we have created a id <code>&lt;id&gt;tomcat-server&lt;/id&gt;</code> for the tomcat details. This id we have to refer in cargo maven plugin definition in pom.xml file to fetch the tomcat details.</p> <p></p> <p>Go inside hello-world folder</p> <pre><code>cd hello-world\n</code></pre> <p>Now we can run the maven command to compile the Java code and package it to .war file extension.</p> <pre><code>mvn clean install\n</code></pre> <p></p> <p>After compilation, the hello-world.war file is generated in target folder</p> <p></p> <p>Now we can run the <code>mvn cargo:deploy</code> command to deploy the hello-world.war file to tomcat</p> <pre><code>mvn cargo:deploy\n</code></pre> <p></p> <p>While executing <code>mvn cargo:deploy</code> command, maven will fetch the tomcat details from settings.xml and deploy to tomcat</p> <p>Now, we can verify the deployment by visiting the http://your-ip-address:8080/hello-world</p> <p></p> <p>To undeploy the hello-world.war file from tomcat</p> <pre><code>mvn cargo:undeploy\n</code></pre> <p></p> <p>Hurray!! we have succesfully deployed and undeployed the java web application to Tomcat 9 using Maven</p>"},{"location":"webserver/tomcat/how-to-deploy-java-application-to-tomcat-using-maven/#pass-the-tomcat-url-username-password-as-mvn-arguments","title":"Pass the tomcat url, username, password as mvn arguments","text":"<pre><code>mvn cargo:deploy -Dcargo.tomcat.manager.url=\"http://152.70.71.239:8080/manager/text\" -Dcargo.remote.username=\"deployer\" -Dcargo.remote.password=\"deployer\"\n</code></pre>"},{"location":"webserver/tomcat/how-to-manually-deploy-java-application-to-tomcat/","title":"How to manually deploy the java application to Tomcat 9 webserver","text":""},{"location":"webserver/tomcat/how-to-manually-deploy-java-application-to-tomcat/#references","title":"References:","text":"<ul> <li>How to install Tomcat</li> </ul>"},{"location":"webserver/tomcat/how-to-manually-deploy-java-application-to-tomcat/#how-to-access-the-manager-gui-in-tomcat-9-webserver","title":"How to access the Manager GUI in Tomcat 9 webserver","text":"<p>After installation if we directly try to access the web application manager, it will ask for username and password.</p> <p>Access the manger application by http://your-ip-address:8080/manager in browser</p> <p></p> <p>To create users in Tomcat, open the file /var/lib/tomcat9/conf/tomcat-users.xml</p> <pre><code>sudo vi /var/lib/tomcat9/conf/tomcat-users.xml\n</code></pre> <p>Go to end of the file and paste the following lines inside tomcat-users block and save it.</p> <p>Here we have defined two roles admin-gui manager-gui and created user admin and assigned the roles to admin user</p> <pre><code>  &lt;role rolename=\"admin-gui\"/&gt;\n  &lt;role rolename=\"manager-gui\"/&gt;\n  &lt;user username=\"admin\" password=\"admin\" roles=\"admin-gui,manager-gui\"/&gt;\n</code></pre> <p></p> <p>Then restart the tomcat9</p> <pre><code>sudo systemctl restart tomcat9\n</code></pre> <p>Now go to you browser and type http://your-ip-address:8080/manager enter username and password, you will see the tomcat manager GUI</p> <p></p> <p>Now to deploy the java web application to tomcat, we have to compile the Java code and package it to .war file extension type.</p> <p>I have a sample hello-world maven project in github hello-world</p> <p>To download and compile this code we need two tools to be installed in our system git and maven</p> <p>If you are using Ubuntu machine, you can easily install git and maven using following commands.</p> <pre><code>sudo apt install -y git maven\n</code></pre> <p></p> <p>Now we can clone the hello-world project from Github</p> <pre><code>git clone https://github.com/vigneshsweekaran/hello-world.git\n</code></pre> <p></p> <p>Go inside hello-world folder</p> <pre><code>cd hello-world\n</code></pre> <p>Now we can run the maven commands to compile the Java code and package it to .war file extension.</p> <pre><code>mvn clean package\n</code></pre> <p></p> <p>After compilation, the hello-world.war file is generated in target folder</p> <p></p> <p>Now we have our artifact hello-world.war in /home/ubuntu/hello-world/target folder</p> <p>Lets deploy the hello-world.war to tomact using Manager GUI</p> <p>Goto Tomcat manager GUI \u2192 Deploy directory or WAR file located on server section</p> <p>Since we have our hello-world.war file in the same server. We will use this option.</p> <p>Enter /hello-world in the Context Path: feild and war file absolute path /home/ubuntu/hello-world/target/hello-world.war in WAR or Directory path: feild</p> <p></p> <p>Now we can verify the deployment by checking the list in Applications section.</p> <p></p> <p>Now we can access the deployed application from browser by http://your-ip-address:8080/hello-world</p> <p></p> <p>Hurray!! we have succesfully deployed the java web application manually to Tomcat 9 using Manager GUI</p>"},{"location":"webserver/tomcat/how-to-manually-deploy-java-application-to-tomcat/#manager-web-application-not-opening-fix","title":"Manager web application not opening - Fix","text":"<p>If manager application is not opening, paste the following content in</p> <pre><code>&lt;Context antiResourceLocking=\"false\" privileged=\"true\" &gt;\n  &lt;!--\n    &lt;Valve className=\"org.apache.catalina.valves.RemoteAddrValve\"\n         allow=\"127.d+.d+.d+|::1|0:0:0:0:0:0:0:1\" /&gt;\n  --&gt;\n  &lt;Manager sessionAttributeValueClassNameFilter=\"java.lang.(?:Boolean|Integer|Long|Number|String)|org.apache.catalina.filters.CsrfPreventionFilter$LruCache(?:$1)?|java.util.(?:Linked)?HashMap\"/&gt;     \n&lt;/Context&gt;\n</code></pre>"},{"location":"webserver/tomcat/installation/","title":"How to install Tomcat","text":""},{"location":"webserver/tomcat/installation/#two-ways-of-installing-tomcat","title":"Two ways of installing tomcat","text":"<ul> <li> <p>Using apt package manager in ubuntu machine</p> </li> <li> <p>Using Docker container</p> </li> </ul>"},{"location":"webserver/tomcat/installation/#install-tomcat-9-using-apt-in-ubuntu-2004","title":"Install Tomcat 9 using apt in ubuntu 20.04","text":"<p>Update the packages using apt</p> <pre><code>sudo apt update\n</code></pre> <p>Install Tomcat 9</p> <pre><code>sudo apt install tomcat9 tomcat9-admin\n</code></pre> <p></p> <p>Check the status of tomcat installation</p> <pre><code>sudo systemctl status tomcat9\n</code></pre> <p></p> <p>Enable the tomcat to start automatically after reboot</p> <pre><code>sudo systemctl enable tomcat9\n</code></pre> <p>To access the apache tomcat webserver in browser</p> <p>Open the browser and type the ipaddress and port number to access the Tomcat application <code>http://&lt;ip-address&gt;:8080</code> By default tomcat starts in port 8080.</p> <p></p> <p>All the configuration files for tomcat9 are located in /var/lib/tomcat9 folder</p> <p>[Optional] To change the port number, goto the /var/lib/tomcat9/conf/ open server.xml file</p> <pre><code>sudo vi server.xml\n</code></pre> <p>Update the port number to whatever port number you want. I am updating the port number to 9000</p> <p>Update the port number to 9000 in connector block port feild in server.xml</p> <p></p> <p>Restart the tomcat to take effect.</p> <pre><code>sudo systemctl restart tomcat9\n</code></pre> <p>Now access the Tomcat webserver in 9000 port from browser. eg: http://your-ip-address:9000</p> <p></p>"},{"location":"webserver/tomcat/installation/#install-tomcat-9-as-docker-container","title":"Install Tomcat 9 as docker container","text":"<p>This will create Tomcat 9 docker container in the background and map the port 8080 to the host and create tomcat9-volume volume to persist the data in the /usr folder from the container.</p> <pre><code>docker run --name tomcat9 -d --restart=always -p 8080:8080 -v tomcat9-volume:/usr tomcat:9.0\n</code></pre>"}]}